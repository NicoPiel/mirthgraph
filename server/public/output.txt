//Beispiel SIU-Nachricht:
/*
MSH|^~\&|OP-PLAN|ORBIS|ZSVAPlaner|IT4P|20171208170829.203+0100||SIU^S15^|3601|P|2.6||AL|AL
SCH||OP-ID
*/

//MSH-Segment f�llen
	tmp['MSH']['MSH.7']['MSH.7.1'] = msg['op']['abfragezeit'].toString()			// Zeitstempel der Nachricht
	tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();				// Message control ID

//SCH-Segment erzeugen und mit OP-ID f�llen
	tmp['SCH']['SCH.2']['SCH.2.1'] = msg['op']['opid_akt'].toString()				//aktuelle OP-IDingr_count = 0;	
eingr_count = msg['op']['eingriff'].length();

//MSH-Segment f�llen
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['op']['abfragezeit'].toString()			// Zeitstempel der Nachricht
tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();				// Message control ID


//SCH-Segment f�llen
tmp['SCH']['SCH.2']['SCH.2.1'] = msg['op']['opid_akt'].toString()		//aktuelle OP-ID
tmp['SCH']['SCH.6']['SCH.6.1'] = "DEFAULT";

tmp['SCH']['SCH.11']['SCH.11.4'] = msg['op']['vonzeitstempel'].toString()		//OP-Plan-Startzeit
tmp['SCH']['SCH.11']['SCH.11.5'] = msg['op']['biszeitstempel'].toString()		////OP-Plan-Endzeit

//TQ1-Segment f�llen
if(msg['op']['vonzeitstempel_op_ist'].toString()=='null'){
	tmp['TQ1']['TQ1.7']['TQ1.7.1'] = "";
	}
else	tmp['TQ1']['TQ1.7']['TQ1.7.1'] = msg['op']['vonzeitstempel_op_ist'].toString();	//OP-Ist-Startzeit (Beginn OP-Ma�nahme, Zeitart-ID 172 in Orbis)
	
if( msg['op']['biszeitstempel_op_ist'].toString()=='null'){
	tmp['TQ1']['TQ1.8']['TQ1.8.1'] = "";
	}	
else	tmp['TQ1']['TQ1.8']['TQ1.8.1'] = msg['op']['biszeitstempel_op_ist'].toString();	//OP-Ist-Endzeit (Beginn OP-Ma�nahme, Zeitart-ID 172 in Orbis)

//PID-Segment f�llen
tmp['PID']['PID.3']['PID.3.1'] = msg['op']['pid'].toString(); 			//Patienten-ID
tmp['PID']['PID.4']['PID.4.1'] = msg['op']['pid'].toString(); 
tmp['PID']['PID.5']['PID.5.1'] = msg['op']['name'].toString()			//Nachname
tmp['PID']['PID.5']['PID.5.2'] = msg['op']['vorname'].toString();		//Vornaeme

//PV1-Segment f�llen
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['op']['fallnr_akt'].toString();		//aktuelle Fallnummer

//falls mehrere Eingriffe in einer OP geplant sind 
				
	for(var j=1;j<eingr_count+1;j++){
	 //RGS-Segment erzeugen und f�llen	
	createSegment('RGS', tmp, j);

	tmp['RGS'][j-1]['RGS.1']['RGS.1.1'] = j;

	createSegment('AIS', tmp, j); //AIS-Segment erzeugen und f�llen
	tmp['AIS'][j-1]['AIS.1']['AIS.1.1'] = j;
	tmp['AIS'][j-1]['AIS.3']['AIS.3.1'] = msg['op']['eingriff'][j-1]['eingriffid'].toString();			//Eingriffs-ID 
	tmp['AIS'][j-1]['AIS.3']['AIS.3.1'] = msg['op']['eingriff'][j-1]['eingrkurz'].toString();			//Eingriffs-Kurzbez
	tmp['AIS'][j-1]['AIS.3']['AIS.3.2'] = msg['op']['eingriff'][j-1]['eingrbez'].toString();			//Eingriffsbezeichnung
	tmp['AIS'][j-1]['AIS.3']['AIS.3.4'] = msg['op']['oebenekurz'].toString();						//OE kurz
	tmp['AIS'][j-1]['AIS.3']['AIS.3.5'] = msg['op']['oebenename'].toString(),						//OE Name

	createSegment('AIL', tmp, j); //AIL-Segment erzeugen und f�llen
	tmp['AIL'][j-1]['AIL.1']['AIL.1.1'] = j;
	tmp['AIL'][j-1]['AIL.4']['AIL.4.1'] = msg['op']['raumnr'].toString(), 				//OP-Saal-Nummer
	tmp['AIL'][j-1]['AIL.4']['AIL.4.2'] = msg['op']['raumbez'].toString()				//OP-Saal Bezeichnung	
	}1]['AIL.4']['AIL.4.2'] = msg['op']['raumbez'].toString()				//OP-Saal Bezeichnung	
	}ungen).
tmp = msg.copy();

// MSH
tmp['MSH']['MSH.3']['MSH.3.1'] = verweistext;
if (msg['MSH']['MSH.9']['MSH.9.2'].toString() != 'T11') {
	tmp['MSH']['MSH.9']['MSH.9.2'] = 'T09';
	// EVN
	tmp['EVN']['EVN.1']['EVN.1.1'] = 'T09';
}

// PID
tmp['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

// TXA
documentTitle = msg['TXA']['TXA.2']['TXA.2.1'].toString();
tmp['TXA']['TXA.2']['TXA.2.1'] = documentTitle + " " + documentTitle.listlookup(aktenplan, defaultValue ="#0399#");
tmp['TXA']['TXA.16']['TXA.16.1'] = urlPrefix + msg['TXA']['TXA.16']['TXA.16.1'].toString();

msg = tmp.copy();fix2);
				tmp['TXA']['TXA.16']['TXA.16.1'] = strUNCPfad;

				// Channel Name: 		cKhvJaifMdmGebFileOut	
				// Channel ID: 		2275fddb-6be4-40ed-9f85-6379e16660cc	
				// Channel Description:	MDM - Generische Importschnittstelle KHV-JAIF
				// Send message to MdmOut ChannelReader
				router.routeMessage(ZielChannel, SerializerFactory.getSerializer('HL7V2').fromXML(tmp));
				sleep(1000);
				// next iteration step

			}

		}

}R, " +
			"K.KSTBEZEICH," +
			"OE_FA.OEBENEKURZ KS_OE_1_KURZ, " +
			"OE_FA.OEBENENAME KS_OE_1_NAME, " +
			"OE_STAT_AMB.OEBENEKURZ KS_OE_2_KURZ, " +
			"OE_STAT_AMB.OEBENENAME KS_OE_2_NAME, " +
			"ON_FA.ORGANAME KS_OE_1_OETYP, " +
			"ON_STAT_AMB.ORGANAME KS_OE_2_OETYP " +
			"FROM " +
			"KOSTENSTELLE K, " +
			"KST_ORG KO,  " +
			"ORGAEBENE OE_FA, " +
			"ORGAEBENE OE_STAT_AMB ," +
			"organame ON_FA, " +
			"organame ON_STAT_AMB " +
			"WHERE " +
			"1=1 " +
			"AND K.KSTNR_ID = KO.KSTNR_ID " +
			"AND KO.OEBENEID = OE_FA.OEBENEID(+) " +
			"AND OE_FA.ORGANAMEID = ON_FA.ORGANAMEID(+) " +
			"AND KO.OEBENEID_2 = OE_STAT_AMB.OEBENEID(+) " +
			"AND OE_STAT_AMB.ORGANAMEID = ON_STAT_AMB.ORGANAMEID(+) " +
			"AND SYSDATE >= K.GUELTIG_AB  AND (SYSDATE <= K.GUELTIG_BIS OR K.GUELTIG_BIS IS null) " +
			"AND SYSDATE >= KO.GUELTIG_AB AND (SYSDATE <= KO.GUELTIG_BIS OR KO.GUELTIG_BIS IS null) " +
 			"AND K.KSTNR = '" + strKostenstelleNumber + "' " +
			") RD ";  // Rohdaten
   

	// Ausgabe des SQL Statement zu Debug-Zewecken.
	//logger.error(sqlStr);
	//var results = dbConn.executeCachedQuery('SELECT DISTINCT FAB_KLINIK, AMBULANZ_STATION_KURZ, AMBULANZ_STATION_NAME, KST_DESCRIPTION FROM merged WHERE KST_NR=' + strKostenstelleNumber);
	var results         = dbConn.executeCachedQuery(sqlStr); // Koeppen Version
	var nextEnterersLocationStationAmbulanz = 'PATHOPRO_UNKNOWN';
	var nextEnterersLocationListStationAmbulanz = 'PATHOPRO_UNKNOWN';
	var enteredByFachabteilung = '';    // Fachabteilung
	var kostenstellenbeschreibung = '';
	var firstEntryInEnterersLocationListStationAmbulanz = true;
	
	// falls die Kostenstelle in Orbis existiert und eventuell ( mehreren ) Orbis.Fachabteilungen zugeordnet ist
	while (results.next()) {

    		if(results.getString('KST_DESCRIPTION') != null) kostenstellenbeschreibung = results.getString('KST_DESCRIPTION');


    	// falls eine Kostenstelle ( mindestens )einer Orbis.Fachabteilung zugeordnet ist
    	if (results.getString('FAB_KLINIK')) {
     	   enteredByFachabteilung = results.getString('FAB_KLINIK');

		   var AMBULANZ_STATION_NAME  = '';
        	   if(results.getString('AMBULANZ_STATION_NAME') != null) AMBULANZ_STATION_NAME = results.getString('AMBULANZ_STATION_NAME');
             var AMBULANZ_STATION_KURZ = '';
             if(results.getString('AMBULANZ_STATION_KURZ') != null) AMBULANZ_STATION_KURZ = results.getString('AMBULANZ_STATION_KURZ');

		// falls AMBULANZ_STATION_KURZ Nummer schon im langen Namen steht verzichten wir auf AMBULANZ_STATION_KURZ
        	if (AMBULANZ_STATION_NAME.match(/^\d/)) {

            nextEnterersLocationStationAmbulanz = AMBULANZ_STATION_NAME; // '1151 Epileptologie'

        	} else {

            nextEnterersLocationStationAmbulanz = AMBULANZ_STATION_KURZ + " " + AMBULANZ_STATION_NAME; // '1901' + 'Station Zenker'
        	}

        	if (firstEntryInEnterersLocationListStationAmbulanz === true) { // beim ersten Eintrag in die Liste kein '; ' davor stellen

          	nextEnterersLocationListStationAmbulanz = nextEnterersLocationStationAmbulanz;
            	firstEntryInEnterersLocationListStationAmbulanz = false;

        	} else { // Folgeeintr�ge bekommen ein '; '

          	nextEnterersLocationListStationAmbulanz += '; ' + nextEnterersLocationStationAmbulanz;
        	}

        // falls die Kostenstelle existiert aber keiner Orbis.Fachabteilung zugeordnet ist
    } else if (kostenstellenbeschreibung) {

    		nextEnterersLocationListStationAmbulanz = "Kostenstelle keiner Orbis.Fachabteilung zugeordnet"
    }

	}

	// max allowed length 255 characters
	nextEnterersLocationListStationAmbulanz = nextEnterersLocationListStationAmbulanz.slice(0, 254);
	// An "&" Character in HL7 is a command Character -> ampersand replacement
	nextEnterersLocationListStationAmbulanz = nextEnterersLocationListStationAmbulanz.replace("&", "\\T\\");

	tmp['ORC']['ORC.10']['ORC.10.1'] = enteredByFachabteilung; // Aus Abfrage ermittelte Fachabteilung zur Kostenstelle wird CentraXX OE
	tmp['ORC']['ORC.13']['ORC.13.1'] = nextEnterersLocationListStationAmbulanz;   // Aus Abfrage ermittelte POC Liste zur Kostenstelle
	// create a comment segment
	createSegment(['NTE'], tmp);
	tmp['NTE']['NTE.1']['NTE.1.1'] = 1;
	var tmpNTE3 = "Kostenstelle: " + strKostenstelleNumber + " " + kostenstellenbeschreibung + ";  PathoProInfo: " + pathoProFachStationAmbulanzInfo;
	tmpNTE3 = tmpNTE3.replace("&", "\\T\\"); // An "&" Character in HL7 is a command Character -> ampersand replacement
	tmp['NTE']['NTE.3'] = tmpNTE3;
}ull) {tmp['row']['Anschrift_Ort'] = myVariables["strORT"].trim();}//else{logger.info("MIBI ADT QRY | Ort leer!");}
//Adresse: PLZ
if (myVariables["strPLZ"]!=null) {tmp['row']['Anschrift_PLZ'] = myVariables["strPLZ"].trim();}//else{logger.info("MIBI ADT QRY | PLZ leer!");}
//Adresse: LKZ
if (myVariables["strLKZ"]!=null) {tmp['row']['LKZ'] = myVariables["strLKZ"].trim();}//else{logger.info("MIBI ADT QRY | LKZ leer!");}
//Telefon: Vorwahl
if (myVariables["strVORWAHL"]!=null) {tmp['row']['PAT_ADR_VORWAHL'] = myVariables["strVORWAHL"].trim();}//else{logger.info("MIBI ADT QRY | Vorwahl leer!");}
//Telefon: Durchwahl
if (myVariables["strDURCHWAHL"]!=null) {tmp['row']['PAT_ADR_DURCHWAHL'] = myVariables["strDURCHWAHL"].trim();}//else{logger.info("MIBI ADT QRY | Durchwahl leer!");}
//Geburtsname
if (myVariables["strGEBURTSNAME"]!=null) {tmp['row']['Patienten_Geburtsname'] = myVariables["strGEBURTSNAME"].trim();}//else{logger.info("MIBI ADT QRY | Geburtsname leer!");}
//Fachabteilung 
if (myVariables["strFACH_OENAME"]!=null) {tmp['row']['Aufnehmende_FAB_lang'] = myVariables["strFACH_OENAME"].trim();}//else{logger.info("MIBI ADT QRY | Aufnehmende OE leer!");}
//Fachabteilung K�rzel
if (myVariables["strFACH_OEKURZ"]!=null) {tmp['row']['Aufnehmende_fAB_Kurz'] = myVariables["strFACH_OEKURZ"].trim();}//else{logger.info("MIBI ADT QRY | Aufnehmende OE (kurz) leer!");}
//Ambulanz/Station
if (myVariables["strSTAM_OENAME"]!=null) {tmp['row']['Aufnehmende_Station_lang'] = myVariables["strSTAM_OENAME"].trim();}//else{logger.info("MIBI ADT QRY | Aufnehmende Station leer!");}
//Ambulanz/Station K�rzel
if (myVariables["strSTAM_OEKURZ"]!=null) {tmp['row']['Aufnehmende_Station_kurz'] = myVariables["strSTAM_OEKURZ"].trim();}//else{logger.info("MIBI ADT QRY | Aufnehmende Station (kurz) leer!");}
//Abrechnungsart K�rzel
if (myVariables["strHLST_KURZ"]!=null) {tmp['row']['Abrechnungsart_kurz'] = myVariables["strHLST_KURZ"].trim();}//else{logger.info("MIBI ADT QRY | HLST (Krankenkasse;kurz) leer!");}
//Abrechnungsart
if (myVariables["strHLST_NAME"]!=null) {tmp['row']['Abrechnungsart_lang'] = myVariables["strHLST_NAME"].trim();}//else{logger.info("MIBI ADT QRY | KLST (Krankenkasse) leer!");}
//Wahlleistung Chefarzt
if (myVariables["strfCA"]!=null) {tmp['row']['Wahlleistung_Chefarzt'] = myVariables["strfCA"].trim();}//else{logger.info("MIBI ADT QRY | Chefarztbehandlung leer!");}

// L�schen der Abfrageergebnisvariablen.
results = null;
// L�schen der zwischengespeicherten Variablen
myVariables = null;
return true;alizerFactory.getHL7Serializer().fromXML(hl7_msg));
router.routeMessage("cDblviroKhvOruOut", SerializerFactory.getSerializer('HL7V2').fromXML(hl7_msg));
sleep(1000);

}

tmp = msg;		// Durchreichen der original NAchricht an den Ausgang.// Sicherstellen, dass das PV1.3.1 Point of Care immer gef�llt ist. Bei ambulanten Nachrichten immer 
// PV1.3.4 ins PV1.3.1 kopieren und im PV1.3.4 die Kliniks OE = ersten beiden Zeichen des OE-K�rzels schreiben.

// Pr�fung auf Vorhandensein eines PV1-Segments:

if (msg['PV1']) {

	if (msg['PV1']['PV1.2']['PV1.2.1'].toString() == 'O') {

		var Facility = msg['PV1']['PV1.3']['PV1.3.4'].toString().slice(-2);
		msg['PV1']['PV1.3']['PV1.3.1'] = msg['PV1']['PV1.3']['PV1.3.4'].toString();
		msg['PV1']['PV1.3']['PV1.3.4'] = Facility;
	}

};


// Hintergrund: Dedalus sendet bei ambulanten F�llen die OE K�rzel abweichend zu station�ren F�llen in 
// anderen Feldern. Damit das AMEDTEC System immer die OE Angaben, egal ab stat. oder amb., immer an
// der gleichen Stelle findet, wird diese Kopierma�nahme eingesetzt.
// PK, 08.09.2020 in Absprache mit Amedtec, Hr. T. Willich// Sicherstellen, dass das PV1.3.1 Point of Care immer gef�llt ist. Bei ambulanten Nachrichten immer 
// PV1.3.4 ins PV1.3.1 kopieren und im PV1.3.4 die Kliniks OE = ersten beiden Zeichen des OE-K�rzels schreiben.

// Pr�fung auf Vorhandensein eines PV1-Segments:

if (msg['PV1']) {

	if (msg['PV1']['PV1.2']['PV1.2.1'].toString() == 'O') {

		var Facility = msg['PV1']['PV1.3']['PV1.3.4'].toString().slice(-2);
		msg['PV1']['PV1.3']['PV1.3.1'] = msg['PV1']['PV1.3']['PV1.3.4'].toString();
		msg['PV1']['PV1.3']['PV1.3.4'] = Facility;
	}

};


// Hintergrund: Dedalus sendet bei ambulanten F�llen die OE K�rzel abweichend zu station�ren F�llen in 
// anderen Feldern. Damit das AMEDTEC System immer die OE Angaben, egal ab stat. oder amb., immer an
// der gleichen Stelle findet, wird diese Kopierma�nahme eingesetzt.
// PK, 08.09.2020 in Absprache mit Amedtec, Hr. T. Willich// Transformation f�r Jaif Mdm Import.

// MSH Anpassungen:

// sende die MDM Nachricht immer als �nderungsnachricht T09.
// wird im Outbound Template festgelegt.
tmp['MSH']['MSH.7']['MSH.7.1']   = msg['MSH']['MSH.7']['MSH.7.1'].toString();
tmp['MSH']['MSH.10']['MSH.10.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

// EVN
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();

// PID
tmp['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString();
tmp['PID']['PID.4']['PID.4.1'] = msg['PID']['PID.3']['PID.3.1'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['PID']['PID.5']['PID.5.1'].toString();
tmp['PID']['PID.5']['PID.5.2'] = msg['PID']['PID.5']['PID.5.2'].toString();
tmp['PID']['PID.7']['PID.7.1'] = msg['PID']['PID.7']['PID.7.1'].toString();
tmp['PID']['PID.8']['PID.8.1'] = msg['PID']['PID.8']['PID.8.1'].toString();

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString();

// TXA Anpassungen:

// TXA AnpassungBelegartkuerzel fuer HYDMedia setzen

// Gleiches Vorgehen wie im Source Tansformer. Der Dokumententyp wird aus dem OBX Segment genommen, dass vom Typ "ED" ist.

for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		
		var strValueTyp = seg['OBX.2']['OBX.2.1'].toString();
		
		if (strValueTyp == 'ED') {

			var strDokumenttyp = seg['OBX.3']['OBX.3.2'].toString(); 	// Obersation Identifier.
		}
	}
}

tmp['TXA']['TXA.2']['TXA.2.1'] 	= strDokumenttyp + ' #0315#'; // z.B. "Holter-Bericht"
tmp['TXA']['TXA.4']['TXA.4.1']	= msg['MSH']['MSH.7']['MSH.7.1'].toString();	// Zeitpunkt der �bertragung; activity date
tmp['TXA']['TXA.6']['TXA.6.1']	= msg['OBR']['OBR.7']['OBR.7.1'].toString(); // Dokumentendatum wird hier mit dem Befunderstellungsdatum bef�llt.
tmp['TXA']['TXA.12']['TXA.12.1'] 	= msg['OBR']['OBR.3']['OBR.3.1'].toString(); 	// eindeutige Befundbezeichner (alphanumerisch).
tmp['TXA']['TXA.12']['TXA.12.2'] 	= 'AMEDTEC';		// Pflichtfeld, seit 09.12.2019 in ORBIS


// Velocity Variablen soll sicherstellen, dass keine Abweichung der Ausgabepfade in der Destination und dem MDM TXA.16 Feld entstehen k�nnen.
tmp['TXA']['TXA.16']['TXA.16.1'] = $('vPathToJaifukb1488') + $('vAttachmentFileName');//Anpassungen
msg['MSH']['MSH.4']['MSH.4.1'] = "MIRTH"
msg['MSH']['MSH.3']['MSH.3.1'] = "MIRTH"
msg['MSH']['MSH.5']['MSH.5.1'] = "SRAClinic"
msg['MSH']['MSH.6']['MSH.6.1'] = "FS"
msg['EVN']['EVN.5']['EVN.5.1'] = "NEU"

if (msg['MSH']['MSH.9']['MSH.9.2'].toString()=="A02") msg['MSH']['MSH.9']['MSH.9.2']="A08";


if (msg['PID']['PID.8']['PID.8.1'].toString()!=="W"&&msg['PID']['PID.8']['PID.8.1'].toString() !=="M" && msg['PID']['PID.8']['PID.8.1'].toString()!=="X") {
	msg['PID']['PID.8']['PID.8.1'] = "U";
} else {
if (msg['PID']['PID.8']['PID.8.1'].toString()=="W") msg['PID']['PID.8']['PID.8.1'] = "F";
}

var strFallNr = msg['PV1']['PV1.19']['PV1.19.1'].toString()

delete msg['PV1']
createSegment('PV1', msg)
msg['PV1']['PV1.19']['PV1.19.1'] = strFallNr

for each (seg in msg.children()) {
	if (seg.name().toString() != "MSH" && seg.name().toString() != "EVN" && seg.name().toString() != "PV1" && seg.name().toString() != "PID") {
		delete msg[seg.name().toString()]
	}
}
/*
if (msg['PV2'] !== null) delete msg['PV2']
if (msg['IN1'] !== null) delete msg['IN1']
if (msg['IN2'] !== null) delete msg['IN2']
if (msg['ZVK'] !== null) delete msg['ZVK']
if (msg['ZBE'] !== null) delete msg['ZBE']
if (msg['NK1'] !== null) delete msg['NK1']
*/// Transformation f�r Jaif Mdm Import.
tmp['MSH']=msg['MSH']
tmp['MSH']['MSH.9']['MSH.9.2'] = "T09";
tmp['MSH']['MSH.5']['MSH.5.1'] = "ORBIS"
tmp['MSH']['MSH.6']['MSH.6.1'] = "UKB"

tmp['EVN'] = msg['EVN'];
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09"
tmp['PID']['PID.2']['PID.2.1'] = $('strPID');
tmp['PID']['PID.3']['PID.3.1'] = $('strPID');
tmp['PID']['PID.5']['PID.5.1'] = msg['PID']['PID.5']['PID.5.1'].toString()
tmp['PID']['PID.5']['PID.5.2'] = msg['PID']['PID.5']['PID.5.2'].toString()

tmp['PID']=msg['PID']
tmp['PV1']=msg['PV1']



delete msg['TXA']['TXA.2']['TXA.2.2'];
tmp['TXA'] = msg['TXA']
tmp['TXA']['TXA.1']['TXA.1.1'] = 1
tmp['TXA']['TXA.2']['TXA.2.1'] = "Apoplex medical - EKG Auswertung #0397#";
tmp['TXA']['TXA.3']['TXA.3.1'] = "PDF"
tmp['TXA']['TXA.8']['TXA.8.1'] = msg['TXA']['TXA.6']['TXA.6.1'].toString()
tmp['TXA']['TXA.12']['TXA.12.1'] = $('strDocTitle')+"_"+$('sha256ID');
tmp['TXA']['TXA.12']['TXA.12.2'] = "NEU"
tmp['TXA']['TXA.16']['TXA.16.1'] = $('vPathToJaifukb1488') + $('vAttachmentFileName');var strSQL = "SELECT COUNT(*) FROM FALL WHERE FALLNR ='"+$('strFallNr')+"'";
var errorText ="-";
try {
var result = getResultSetFrom("khv", strSQL);
	if (result.size()>0) {
		result.next();
		var strCount = result.getString(1);
		if (parseInt(strCount)>0) {
			errorText = "Fallnummer existiert. Das Apoplex System hat diese aber nicht �bermittelt bekommen."
		} else {
			errorText = "Fallnumer nicht in ORBIS gefunden!";
		}
	} else {
		errorText = "SQL lieferte keine Ergebnisse";
	}

} catch (e) {
	errorText = "SQL Error: " + e;
}
channelMap.put('errorText',errorText);channelMap.put('vPathToJaifukb1488', '//ukb1488.klinik.bn/m$/srv/transfer/mirth/pdf/');
var strFileName = 'MDM-' + $('strFallNr') + '_' + $('strPID') + '_' + $('strDate') +'.pdf';
channelMap.put('vAttachmentFileName', strFileName);
channelMap.put('sha256ID',org.apache.commons.codec.digest.DigestUtils.sha256Hex(strFileName));// Transformation f�r Jaif Mdm Import.

// MSH Anpassungen:

// sende die MDM Nachricht immer als �nderungsnachricht T09.
msg['MSH']['MSH.9']['MSH.9.2'] = 'T09';

// TXA Anpassungen:

// TXA AnpassungBelegartkuerzel fuer HYDMedia setzen
msg['TXA']['TXA.2']['TXA.2.1'] = msg['TXA']['TXA.2']['TXA.2.1'].toString() + ' #0315#';
msg['TXA']['TXA.12']['TXA.12.2'] = 'LUFU';		// Pflichtfeld, seit 09.12.2019 in ORBIS


// Velocity Variablen soll sicherstellen, dass keine Abweichung der Ausgabepfade in der Destination und dem MDM TXA.16 Feld entstehen k�nnen.
msg['TXA']['TXA.16']['TXA.16.1'] = $('vPathToJaifukb1488') + $('vAttachmentFileName');

delete msg['OBR'];
delete msg['IN1'];if (msg['PID']['PID.8']['PID.8.1'].toString().equalsIgnoreCase("w")){
    msg['PID']['PID.5']['PID.5.5'] = 'Frau'
}
if (msg['PID']['PID.8']['PID.8.1'].toString().equalsIgnoreCase("m")){
    msg['PID']['PID.5']['PID.5.5'] = 'Herr'
}
if (msg['PID']['PID.8']['PID.8.1'].toString().equalsIgnoreCase("d")){
    msg['PID']['PID.5']['PID.5.5'] = 'Herr/Frau'
}// Einlesen des PV1.19 Feldinhalts = FALLNR des ORBIS Patienten.
// Ggf. abpr�fen mit anderen Felder.



// Ausf�hren einer SQL Abfrage auf die KHV.

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');

//Create a SQL Statement to be executed

var strQRYFALLNR = msg['QRD']['QRD.8']['QRD.8.1'].toString();
var paramList = new java.util.ArrayList();
paramList.add(strQRYFALLNR);

var sqlStr ="SELECT DISTINCT 	\
		  F.FALLNR, 	\
		  NAT.PID, 	\
		  NAT.NAME, 	\
		  NAT.VORNAME, 	\
		  NAT.GEBDAT, 	\
		  NAT.GESCHLECHT,	\
		  TO_CHAR(SYSDATE, 'YYYYMMDDHH24miss') ABFRAGEZEIT 	\
		  FROM 	\
		  FALL F	\
		  INNER JOIN NATPERSON NAT ON NAT.PERSNR = F.PERSNR	\
		  WHERE 	\
		  F.FALLNR = ? AND 	\
		  F.STORNO_DATUM IS NULL  AND 	\
		  F.KENNZEICHEN NOT IN (2,5,10)";

// Execute SQL Statement and save them as results

var results = dbConn.executeCachedQuery(sqlStr, paramList);

var resultSize = results.size();


// Aufbereiten des Resultsets. // hier nur eine Ergebniszeile durch Abfrage.
if(resultSize>0){
	
	results.next();

	var strFALLNR 		= results.getString(1); 
	var strPID 		= results.getString(2); 
	var strNAME 		= results.getString(3); 
	var strVORNAME 	= results.getString(4); 
	var strGEBDAT 		= DateUtil.convertDate("yyyy-MM-dd 00:00:00.0", "yyyyMMdd", results.getString(5)); 
	var strGESCHLECHT 	= results.getString(6); 
	var strSYSDATE		= results.getString(7); 

} else {

	var strFALLNR 		= strQRYFALLNR; 
	var strNAME 		= ''; 
	var strVORNAME 	= ''; 
	var strGEBDAT 		= ''; 
	var strGESCHLECHT 	= ''; 
	var strPID 		= ''; 
	var strSYSDATE		= DateUtil.getCurrentDate('yyyyMMddHHmmss');
	//logger.error(strSYSDATE);
/*
http://www.mirthcorp.com/community/wiki/display/mirth/Working+with+Dates
G - Era Text (e.g. AD)
y - Year
M - Month
w - Week (in the year)
W - Week (in the month)
D - Day (in the year)
d - Day (in the month)
F - Day (of the week; numeric)
E - Day (of the week; word)
a - AM/PM
H - Hour (0-23)
k - Hour (1-24)
K - Hour (0-11)
h - Hour (1-12)
m - Minute
s - Second
S - Millisecond
z - Time zone
Z - Time zone (different formatting) 
 */
 
}

// Kopieren der Resultsetdaten in das OMT.

// MSH
// MSH.7.1 Date/Time of Message = Abfragezeit der SQL Abfrage
tmp['MSH']['MSH.7']['MSH.7.1'] = strSYSDATE;

// MSA
// MSA.2.1 Message Control ID (= Msg ID der Anfragenachricht)
tmp['MSA']['MSA.2']['MSA.2.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

// QRD
// R�ck�bermittlung des eingegangenen QRD Segments.
tmp['QRD'] = msg['QRD'].copy();

// PID
// PID.2.1 External ID Number
tmp['PID']['PID.2']['PID.2.1'] = strPID;
// PID.3.1 Internal ID Number
tmp['PID']['PID.3']['PID.3.1'] = strPID;
// PID.5.1 Family Name
tmp['PID']['PID.5']['PID.5.1'] = strNAME;
// PID.5.2 Given Name
tmp['PID']['PID.5']['PID.5.2'] = strVORNAME;
// PID.7.1 Date of Birth
tmp['PID']['PID.7']['PID.7.1'] = strGEBDAT;
// PID.8.1 Sex
if (strGESCHLECHT == 'W') strGESCHLECHT = 'F'; 
tmp['PID']['PID.8']['PID.8.1'] = strGESCHLECHT;

// PV1
// PV1.19 Fallnummer
tmp['PV1']['PV1.19']['PV1.19.1'] = strQRYFALLNR;

// Schliessen der Connection.

dbConn.close();


// Erstellen der AckMessage.
var ackMessage = SerializerFactory.getSerializer('HL7V2').fromXML(tmp);

// F�llen der Antwortvariablen (ResponseMap f�r Source ACK).
// responseMap.put("customResponse", ResponseFactory.getSuccessResponse(ackMessage));
// Austausch der Funktion gemaess MIRTH Empfehlung, PK, 02.06.2015.
// logger.info("CMmsNexamProQryA19Khv|"+ackMessage);
responseMap.put("customResponse", ResponseFactory.getSentResponse(ackMessage));

// L�schen der Abfrageergebnisvariablen.
results = "";// delete OBX

delete msg['OBX'];// Transformation f�r Jaif Mdm Import.

// MSH Anpassungen:
msg['MSH']['MSH.4']['MSH.4.1'] = 'STR';
msg['MSH']['MSH.5']['MSH.5.1'] = 'JAIF';
msg['MSH']['MSH.6']['MSH.6.1'] = 'UKB';
msg['MSH']['MSH.12']['MSH.12.1'] = '2.3';
msg['MSH']['MSH.15']['MSH.15.1'] = 'AL';
msg['MSH']['MSH.16']['MSH.16.1'] = 'AL';

// sende die MDM Nachricht immer als �nderungsnachricht T09.
msg['MSH']['MSH.9']['MSH.9.2'] = 'T09';

// PV1
msg['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());	// f�hrende Null wegnehmen durch "number"-Konvertierung.

// TXA Anpassungen:

// TXA AnpassungBelegartkuerzel fuer HYDMedia setzen
msg['TXA']['TXA.2']['TXA.2.1'] = msg['TXA']['TXA.2']['TXA.2.1'].toString() + ' #0709#'; // gem�� DMS Aktenplan Belegart "7. Administration" -> "7.09 Abrechnungsunterlagen"
msg['TXA']['TXA.12']['TXA.12.2'] = 'ARIA';		// Pflichtfeld, seit 09.12.2019 in ORBIS


// Velocity Variablen soll sicherstellen, dass keine Abweichung der Ausgabepfade in der Destination und dem MDM TXA.16 Feld entstehen k�nnen.
// msg['TXA']['TXA.16']['TXA.16.1'] = 'M:\\WORK\\Test_ARIA\\OUT\\' + $('vDateiname');
msg['TXA']['TXA.16']['TXA.16.1'] = '//ukb1488.klinik.bn/m$/srv/transfer/mirth/pdf/' + $('vAttachmentFileName');

delete msg['OBX'];// MSH
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();
tmp['MSH']['MSH.10']['MSH.10.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

// EVN
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['EVN']['EVN.2']['EVN.2.1'].toString();

// PID
tmp['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['PID']['PID.5']['PID.5.1'].toString();
tmp['PID']['PID.5']['PID.5.2'] = msg['PID']['PID.5']['PID.5.2'].toString();
tmp['PID']['PID.5']['PID.5.4'] = msg['PID']['PID.5']['PID.5.4'].toString();
tmp['PID']['PID.5']['PID.5.5'] = msg['PID']['PID.5']['PID.5.5'].toString();
tmp['PID']['PID.6']['PID.6.1'] = msg['PID']['PID.6']['PID.6.1'].toString();
tmp['PID']['PID.7']['PID.7.1'] = msg['PID']['PID.7']['PID.7.1'].toString();
tmp['PID']['PID.8']['PID.8.1'] = msg['PID']['PID.8']['PID.8.1'].toString();

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString();

// TXA
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['TXA']['TXA.4']['TXA.4.1'].toString(); 	// Activity Date TXA.4
// Dokumentname
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['TXA']['TXA.12']['TXA.12.1'].toString();
// Jaif-Pfad + Dateiname.
tmp['TXA']['TXA.16']['TXA.16.1'] = $('vPathToJaifukb1488') + $('vAttachmentFileName');

// Sleep
Sleep2(5000);var iterated = false;
var iteratedAIS = false;
var iteratedAIL = false;
for each (seg in msg..AIP) {
	iterated = true;
	break;
}
if (!iterated) {
	//logger.info(channelName+"| -> AIP Segment NICHT vorhanden! Erstelle!")
	createSegment('AIP', msg)
	msg['AIP']['AIP.1']['AIP.1.1'] = '1'
	msg['AIP']['AIP.3']['AIP.3.1'] = '0000'
// Umstellung von AIP3.2=N.N. auf den Eintrag aus AIG3.4; Tel. T.Br�stle/T.Ehle  16.05.2022
//	msg['AIP']['AIP.3']['AIP.3.2'] = 'N.N.'
	msg['AIP']['AIP.3']['AIP.3.2'] = msg['AIG']['AIG.3']['AIG.3.1']
//wenn AIG vorhanden dann dort das Datum holen
if (msg['AIG'].toString != ""){
	msg['AIP']['AIP.6']['AIP.6.1'] = msg['AIG']['AIG.8']['AIG.8.1']
// sonst aus AIL (obwohl da zumeist schon ein AIP existiert...
	} else {
		msg['AIP']['AIP.6']['AIP.6.1'] = msg['AIL']['AIL.6']['AIL.6.1']	
		}
msg['AIP']['AIP.6']['AIP.6.2'] = 'YYYYLLDDHHMM'
msg['AIP']['AIP.9']['AIP.9.1'] = '10'
msg['AIP']['AIP.10']['AIP.10.1'] = 'min'

} else {
	//logger.warn(channelName+"| -> AIP Segment vorhanden!")
}

//auch noch ein AIS einf�gen, da das nicht aus Orbis kommt ist anscheinend unterV2.5 das TQ1 

for each (seg in msg..AIS) {
	iteratedAIS = true;
	break;
}
if (!iteratedAIS) {
	//logger.info(channelName+"| -> AIS Segment NICHT vorhanden! Erstelle!")
	createSegment('AIS', msg)
	msg['AIS']['AIS.1']['AIS.1.1'] = '1'
	msg['AIS']['AIS.2']['AIS.2.1'] = ''
	msg['AIS']['AIS.3']['AIS.3.1'] = 'generiert'
	msg['AIS']['AIS.4']['AIS.4.1'] =  msg['TQ1']['TQ1.7']['TQ1.7.1']	
	msg['AIS']['AIS.5']['AIS.5.1'] = '0'
	msg['AIS']['AIS.6']['AIS.6.1'] = 'min'
	msg['AIS']['AIS.7']['AIS.7.1'] = msg['TQ1']['TQ1.13']['TQ1.13.1']
	msg['AIS']['AIS.8']['AIS.8.1'] = 'min'

} else {
	//logger.warn(channelName+"| -> AIS Segment vorhanden!")
}
// AIL anlegen falls nicht vorhanden 
// die location wird erstmal nur mit AUGKontrolle gef�llt
// Verfeinerung mit mapping auf Notfall sonst Kontrolle
for each (seg in msg..AIL) {
	iteratedAIL = true;
	break;
}
if (!iteratedAIL) {
	//logger.info(channelName+"| -> AIL Segment NICHT vorhanden! Erstelle!")
	createSegment('AIL', msg)
	msg['AIL']['AIL.1']['AIL.1.1'] = '1'
	msg['AIL']['AIL.2']['AIL.2.1'] = ''
	if (msg['SCH']['SCH.8']['SCH.8.2'].toString() == 'AUG Notfall'){
	msg['AIL']['AIL.3']['AIL.3.1'] = 'AUG Notfall'
	msg['AIL']['AIL.3']['AIL.3.2'] = ''
	msg['AIL']['AIL.3']['AIL.3.3'] = ''	
	msg['AIL']['AIL.3']['AIL.3.4'] = ''
	} else {
	msg['AIL']['AIL.3']['AIL.3.1'] = 'AUG Kontrolle'
	msg['AIL']['AIL.3']['AIL.3.2'] = ''
	msg['AIL']['AIL.3']['AIL.3.3'] = ''
	msg['AIL']['AIL.3']['AIL.3.4'] = ''
	}
	msg['AIL']['AIL.6']['AIL.6.1'] = msg['TQ1']['TQ1.7']['TQ1.7.1']
	msg['AIL']['AIL.6']['AIL.6.2'] = 'YYYYLLDDHHMM'
	msg['AIL']['AIL.9']['AIL.9.1'] = msg['TQ1']['TQ1.13']['TQ1.13.1']
	msg['AIL']['AIL.10']['AIL.10.1'] = 'min'

} else {
	msg['AIL']['AIL.3']['AIL.3.2'] = ''
	msg['AIL']['AIL.3']['AIL.3.3'] = ''
	msg['AIL']['AIL.3']['AIL.3.4'] = msg['AIL']['AIL.3']['AIL.3.1']
	//logger.warn(channelName+"| -> AIL Segment vorhanden!")
}

//kopieren von AppointmentID SCH.2 in SCH.1
for each (seg in msg..SCH) {
	msg['SCH']['SCH.1']['SCH.1.1'] = msg['SCH']['SCH.2']['SCH.2.1'];
	msg['SCH']['SCH.1']['SCH.1.2'] = msg['SCH']['SCH.2']['SCH.2.2'];
	break;
}
//wir gaukeln mal HL7 V2.4 vor....
msg['MSH']['MSH.12']['MSH.12.1']= '2.4';
delete msg['TQ1'];var iterated = false;
var iteratedAIS = false;
var iteratedAIL = false;
for each (seg in msg..AIP) {
	iterated = true;
	break;
}
if (!iterated) {
	logger.info(channelName+"| -> AIP Segment NICHT vorhanden! Erstelle!")
	createSegment('AIP', msg)
	msg['AIP']['AIP.1']['AIP.1.1'] = '1'
	msg['AIP']['AIP.3']['AIP.3.1'] = '0000'
	msg['AIP']['AIP.3']['AIP.3.2'] = 'N.N.'
//wenn AIG vorhanden dann dort das Datum holen
if (msg['AIG'].toString != ""){
	msg['AIP']['AIP.6']['AIP.6.1'] = msg['AIG']['AIG.8']['AIG.8.1']
// sonst aus AIL (obwohl da zumeist schon ein AIP existiert...
	} else {
		msg['AIP']['AIP.6']['AIP.6.1'] = msg['AIL']['AIL.6']['AIL.6.1']	
		}
msg['AIP']['AIP.6']['AIP.6.2'] = 'YYYYLLDDHHMM'
msg['AIP']['AIP.9']['AIP.9.1'] = '10'
msg['AIP']['AIP.10']['AIP.10.1'] = 'min'

} else {
	logger.warn(channelName+"| -> AIP Segment vorhanden!")
}

//auch noch ein AIS einf�gen, da das nicht aus Orbis kommt ist anscheinend unterV2.5 das TQ1 

for each (seg in msg..AIS) {
	iteratedAIS = true;
	break;
}
if (!iteratedAIS) {
	logger.info(channelName+"| -> AIS Segment NICHT vorhanden! Erstelle!")
	createSegment('AIS', msg)
	msg['AIS']['AIS.1']['AIS.1.1'] = '1'
	msg['AIS']['AIS.2']['AIS.2.1'] = ''
	msg['AIS']['AIS.3']['AIS.3.1'] = 'generiert'
	msg['AIS']['AIS.4']['AIS.4.1'] =  msg['TQ1']['TQ1.7']['TQ1.7.1']	
	msg['AIS']['AIS.5']['AIS.5.1'] = '0'
	msg['AIS']['AIS.6']['AIS.6.1'] = 'min'
	msg['AIS']['AIS.7']['AIS.7.1'] = msg['TQ1']['TQ1.13']['TQ1.13.1']
	msg['AIS']['AIS.8']['AIS.8.1'] = 'min'

} else {
	logger.warn(channelName+"| -> AIS Segment vorhanden!")
}
// AIL anlegen falls nicht vorhanden 
// die location wird erstmal nur mit AUGKontrolle gef�llt
// Verfeinerung mit mapping auf Notfall sonst Kontrolle
for each (seg in msg..AIL) {
	iteratedAIL = true;
	break;
}
if (!iteratedAIL) {
	logger.info(channelName+"| -> AIL Segment NICHT vorhanden! Erstelle!")
	createSegment('AIL', msg)
	msg['AIL']['AIL.1']['AIL.1.1'] = '1'
	msg['AIL']['AIL.2']['AIL.2.1'] = ''
	if (msg['SCH']['SCH.8']['SCH.8.2'].toString() == 'AUG Notfall'){
	msg['AIL']['AIL.3']['AIL.3.1'] = 'AUG Notfall'
	msg['AIL']['AIL.3']['AIL.3.2'] = ''
	msg['AIL']['AIL.3']['AIL.3.3'] = ''	
	msg['AIL']['AIL.3']['AIL.3.4'] = ''
	} else {
	msg['AIL']['AIL.3']['AIL.3.1'] = 'AUG Kontrolle'
	msg['AIL']['AIL.3']['AIL.3.2'] = ''
	msg['AIL']['AIL.3']['AIL.3.3'] = ''
	msg['AIL']['AIL.3']['AIL.3.4'] = ''
	}
	msg['AIL']['AIL.6']['AIL.6.1'] = msg['TQ1']['TQ1.7']['TQ1.7.1']
	msg['AIL']['AIL.6']['AIL.6.2'] = 'YYYYLLDDHHMM'
	msg['AIL']['AIL.9']['AIL.9.1'] = msg['TQ1']['TQ1.13']['TQ1.13.1']
	msg['AIL']['AIL.10']['AIL.10.1'] = 'min'

} else {
	msg['AIL']['AIL.3']['AIL.3.2'] = ''
	msg['AIL']['AIL.3']['AIL.3.3'] = ''
	msg['AIL']['AIL.3']['AIL.3.4'] = msg['AIL']['AIL.3']['AIL.3.1']
	logger.warn(channelName+"| -> AIL Segment vorhanden!")
}

//kopieren von AppointmentID SCH.2 in SCH.1
for each (seg in msg..SCH) {
	msg['SCH']['SCH.1']['SCH.1.1'] = msg['SCH']['SCH.2']['SCH.2.1'];
	msg['SCH']['SCH.1']['SCH.1.2'] = msg['SCH']['SCH.2']['SCH.2.2'];
	break;
}
//wir gaukeln mal HL7 V2.4 vor....
msg['MSH']['MSH.12']['MSH.12.1']= '2.4';
delete msg['TQ1'];// Voranstellen des FTP Pfades inkl. Passwort und Nutzer f�r den erfolgreichen FTP Import durch JAIF.
// Beispiel ftp://ftp1:FTP9473@ukb078.klinik.bn/pdf


// �nderung im MSH Segment.
msg['MSH']['MSH.6']['MSH.6.1'] = 'UKB';


// TXA.12.1 Feld enth�t den Dateinamen (ohne vorangestelltes Pr�fix)

var strDatei = msg['TXA']['TXA.12']['TXA.12.1'].toString();

// Sonderzeichenkonvention in JavaScript "\".
var strFTPPfad = 'ftp:\/\/ftp1:FTP9473@ukb078.klinik.bn\/pdf\/';

var strDateiNeu = strFTPPfad + strDatei;
//logger.error("JAIF Pfad: " + strDateiNeu);

// Neue Zuweisung des FTP Importpfads:
msg['TXA']['TXA.16']['TXA.16.1'] = strDateiNeu;var iterated = false;
var iteratedAIS = false;
var iteratedAIL = false;
for each (seg in msg..AIP) {
	iterated = true;
	break;
}
if (!iterated) {
	//logger.info(channelName+"| -> AIP Segment NICHT vorhanden! Erstelle!")
	createSegment('AIP', msg)
	msg['AIP']['AIP.1']['AIP.1.1'] = '1'
	msg['AIP']['AIP.3']['AIP.3.1'] = '0000'
// Umstellung von AIP3.2=N.N. auf den Eintrag aus AIG3.4; Tel. T.Br�stle/T.Ehle  16.05.2022
//	msg['AIP']['AIP.3']['AIP.3.2'] = 'N.N.'
	msg['AIP']['AIP.3']['AIP.3.2'] = msg['AIG']['AIG.3']['AIG.3.1']
//wenn AIG vorhanden dann dort das Datum holen
if (msg['AIG'].toString != ""){
	msg['AIP']['AIP.6']['AIP.6.1'] = msg['AIG']['AIG.8']['AIG.8.1']
// sonst aus AIL (obwohl da zumeist schon ein AIP existiert...
	} else {
		msg['AIP']['AIP.6']['AIP.6.1'] = msg['AIL']['AIL.6']['AIL.6.1']	
		}
msg['AIP']['AIP.6']['AIP.6.2'] = 'YYYYLLDDHHMM'
msg['AIP']['AIP.9']['AIP.9.1'] = '10'
msg['AIP']['AIP.10']['AIP.10.1'] = 'min'

} else {
	//logger.warn(channelName+"| -> AIP Segment vorhanden!")
}

//auch noch ein AIS einf�gen, da das nicht aus Orbis kommt ist anscheinend unterV2.5 das TQ1 

for each (seg in msg..AIS) {
	iteratedAIS = true;
	break;
}
if (!iteratedAIS) {
	//logger.info(channelName+"| -> AIS Segment NICHT vorhanden! Erstelle!")
	createSegment('AIS', msg)
	msg['AIS']['AIS.1']['AIS.1.1'] = '1'
	msg['AIS']['AIS.2']['AIS.2.1'] = ''
	msg['AIS']['AIS.3']['AIS.3.1'] = 'generiert'
	msg['AIS']['AIS.4']['AIS.4.1'] =  msg['TQ1']['TQ1.7']['TQ1.7.1']	
	msg['AIS']['AIS.5']['AIS.5.1'] = '0'
	msg['AIS']['AIS.6']['AIS.6.1'] = 'min'
	msg['AIS']['AIS.7']['AIS.7.1'] = msg['TQ1']['TQ1.13']['TQ1.13.1']
	msg['AIS']['AIS.8']['AIS.8.1'] = 'min'

} else {
	//logger.warn(channelName+"| -> AIS Segment vorhanden!")
}
// AIL anlegen falls nicht vorhanden 
// die location wird erstmal nur mit AUGKontrolle gef�llt
// Verfeinerung mit mapping auf Notfall sonst Kontrolle
for each (seg in msg..AIL) {
	iteratedAIL = true;
	break;
}
if (!iteratedAIL) {
	//logger.info(channelName+"| -> AIL Segment NICHT vorhanden! Erstelle!")
	createSegment('AIL', msg)
	msg['AIL']['AIL.1']['AIL.1.1'] = '1'
	msg['AIL']['AIL.2']['AIL.2.1'] = ''
	if (msg['SCH']['SCH.8']['SCH.8.2'].toString() == 'AUG Notfall'){
	msg['AIL']['AIL.3']['AIL.3.1'] = 'AUG Notfall'
	msg['AIL']['AIL.3']['AIL.3.2'] = ''
	msg['AIL']['AIL.3']['AIL.3.3'] = ''	
	msg['AIL']['AIL.3']['AIL.3.4'] = ''
	} else {
	msg['AIL']['AIL.3']['AIL.3.1'] = 'AUG Kontrolle'
	msg['AIL']['AIL.3']['AIL.3.2'] = ''
	msg['AIL']['AIL.3']['AIL.3.3'] = ''
	msg['AIL']['AIL.3']['AIL.3.4'] = ''
	}
	msg['AIL']['AIL.6']['AIL.6.1'] = msg['TQ1']['TQ1.7']['TQ1.7.1']
	msg['AIL']['AIL.6']['AIL.6.2'] = 'YYYYLLDDHHMM'
	msg['AIL']['AIL.9']['AIL.9.1'] = msg['TQ1']['TQ1.13']['TQ1.13.1']
	msg['AIL']['AIL.10']['AIL.10.1'] = 'min'

} else {
	msg['AIL']['AIL.3']['AIL.3.2'] = ''
	msg['AIL']['AIL.3']['AIL.3.3'] = ''
	msg['AIL']['AIL.3']['AIL.3.4'] = msg['AIL']['AIL.3']['AIL.3.1']
	//logger.warn(channelName+"| -> AIL Segment vorhanden!")
}

//kopieren von AppointmentID SCH.2 in SCH.1
for each (seg in msg..SCH) {
	msg['SCH']['SCH.1']['SCH.1.1'] = msg['SCH']['SCH.2']['SCH.2.1'];
	msg['SCH']['SCH.1']['SCH.1.2'] = msg['SCH']['SCH.2']['SCH.2.2'];
	break;
}
//wir gaukeln mal HL7 V2.4 vor....
msg['MSH']['MSH.12']['MSH.12.1']= '2.4';
delete msg['TQ1'];// Javacode zum L�schen des letzten carriage return Zeichens am Ende der letzten Zeile.
// Diese Anforderung wurde am 11.07.2022 von PK erfolgreich umgesetzt auf Wunsch der Firma MediSoft (i.P. Frau Rogall) f�r die PEGA Schnittstelle.
// Programmierung von KK.
//const regex = "[\\r\\n]+$" //ISO
//const regex = "[\\n]+$" //UTF-8
const regex = "[(?<!\r)\n]+$|[\r\n]+$" //UTF-8 / ISO
var str = connectorMessage.getRawData();
msg = str.replaceAll(regex, '');// Voranstellen des FTP Pfades inkl. Passwort und Nutzer f�r den erfolgreichen FTP Import durch JAIF.
// Beispiel ftp://ftp1:FTP9473@ukb078.klinik.bn/pdf


// �nderung im MSH Segment.
msg['MSH']['MSH.6']['MSH.6.1'] = 'UKB';
msg['MSH']['MSH.9']['MSH.9.2'] = 'T09';

// TXA.12.1 Feld enth�t den Dateinamen (ohne vorangestelltes Pr�fix)

var strDatei = msg['TXA']['TXA.12']['TXA.12.1'].toString();		// Pflichtfeld f�r ORBIS, seit 09.12.2019, DokumentenID

// �nderung in TXA Segment

msg['TXA']['TXA.12']['TXA.12.2'] = 'DMI';		// Namensraum, Pflichtfeld f�r ORBIS, seit 09.12.2019

// Sonderzeichenkonvention in JavaScript "\".
// var strFTPPfad = 'ftp:\/\/ftp1:FTP9473@ukb078.klinik.bn\/pdf\/';
var strFTPPfad = '\\\\ukb1360.klinik.bn\\ftptransfer\\pdf\\';

var strDateiNeu = strFTPPfad + strDatei;
//logger.error("JAIF Pfad: " + strDateiNeu);

// Neue Zuweisung des FTP Importpfads:
msg['TXA']['TXA.16']['TXA.16.1'] = strDateiNeu;// Objekt "parser" h�lt den Parser des GDTInterfaces
var parser = new Packages.ukb.klinik.bn.gdtinterface.DelimitedTextToGDT();
/* message_text kann die EingangsNachricht sein oder ein 
* zuvor erstellter String, einzelne Eintr�ge m�ssen 
* per \r\n oder \n voneinander getrennt werden 
* Zwingend sind dabei das folgende Key-Value Pair:
* Satzidentifikation:6301 ODER 8000:6301
* Optional ist folgendes Key-Value Pair 
* (Standardm��ig wird eine Nachricht in GDT Version 3.10 verfasst):
* Version GDT:03.10 ODER 9218:03.10
* Danach k�nnen eigene Felder hinzugef�gt werden.
*/
var message_text = $('string')
/* Speichern der Nachricht und den Parametern f�r die Funktion
* Erster Parameter ist der message_text,
* der zweite Parameter ist der Delimiter, der Key-Value Pairs trennt, 
* in diesem Fall ":"
* Der optionale dritte Parameter gibt an, welches Zeichen die Keys und Values umgibt
* in diesem Fall gibt es kein Zeichen, aber es w�re zB m�glich die Nachricht so zu kodieren:
* %Satzidentifikation%:%6301% 
* %Version GDT%:%03.10%
* dann w�re der dritte Parameter "%"
*/
var parameters = [message_text,":"];
/*
* Der Parser kann konfiguriert werden, sodass zu einer Nachricht ein Satzende hinzugef�gt wird
* standard-m��ig wird dies nicht gemacht
*/
// parser.configure("satzende",true);

//Ausf�hren des Parsers und Speichern als String
var GDTmessage = parser.process(parameters);
/*logger.warn(GDTmessage);
//bday.substring(6,8)+bday.substring(4,6)+bday.substring(0,4)

var split = GDTmessage.split("\r\n");
var outgoing = "";
for (var i=0;i<split.length;i++) {
	if (split[i].contains("0173103")) {
		outgoing += "0173103"+split[i].substring(13,15)+split[i].substring(11,13)+split[i].substring(7,11)+"\r\n";
	} else {
		if (split[i].contains("0103110")) {
			outgoing+= split[i].replace("M","1").replace("W","2")+"\r\n";
		} else {
		outgoing += split[i]+"\r\n";
		}
	}
}
// Speichern des Texts in der ChannelMap
*/
globalChannelMap.put('outgoingMessage',GDTmessage);// Javacode zum L�schen des letzten carriage return Zeichens am Ende der letzten Zeile.
// Diese Anforderung wurde am 28.06.2022 von KK erfolgreich umgesetzt auf Wunsch der Firma MediSoft (i.P. Frau Rogall).
//const regex = "[\\r\\n]+$" //ISO
//const regex = "[\\n]+$" //UTF-8
const regex = "[(?<!\r)\n]+$|[\r\n]+$" //UTF-8 / ISO
var str = connectorMessage.getRawData();
msg = str.replaceAll(regex, '');//Setup MSH
// var processflag = false; -> Kilian zu Hintergrund fragen.

//logger.debug("Starting Transformer");
tmp['MSH']['MSH.1'] = "|";
tmp['MSH']['MSH.2'] = "^~\\&";
tmp['MSH']['MSH.3']['MSH.3.1'] = 'BOSO'; // $('strGDT-ID_Sender');
tmp['MSH']['MSH.4']['MSH.4.1'] = $('strGeraet');
tmp['MSH']['MSH.5']['MSH.5.1'] = "ORBIS"
tmp['MSH']['MSH.6']['MSH.6.1'] = "JAIF";
tmp['MSH']['MSH.7']['MSH.7.1'] = DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['MSH']['MSH.9']['MSH.9.1'] = "MDM";
tmp['MSH']['MSH.9']['MSH.9.2'] = "T09";
tmp['MSH']['MSH.10']['MSH.10.1'] = connectorMessage.getMessageId();
tmp['MSH']['MSH.12']['MSH.12.1'] = "2.3";

//Setup EVN
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['EVN']['EVN.3']['EVN.3.1']=  $('dateTagDerSpeicherung')+ $('dateStundeDerSpeicherung');


//setup PID
tmp['PID']['PID.1']['PID.1.1'] = "1";
tmp['PID']['PID.2']['PID.2.1'] = $('strPID');
tmp['PID']['PID.3']['PID.3.1'] = $('strPID');
//tmp['PID']['PID.3']['PID.3.4'] = "UKB";
//tmp['PID']['PID.3']['PID.3.5'] = "PID";
tmp['PID']['PID.5']['PID.5.1'] = $('strNachname');
tmp['PID']['PID.5']['PID.5.2'] = $('strVorname');
if (!($('dateGeburtsdatum')== "")) tmp['PID']['PID.7']['PID.7.1'] = $('dateGeburtsdatum');
tmp['PID']['PID.8']['PID.8.1'] = $('strGeschlecht');
tmp['PID']['PID.11']['PID.11.1'] = $('strWohnort');
tmp['PID']['PID.11']['PID.11.3'] =$('strStrasse');
//tmp['PID']['PID.18']['PID.18.1'] = $('strVersichertenNummer');

//setup PV1
tmp['PV1']['PV1.1']['PV1.1.1'] = "1";
tmp['PV1']['PV1.19']['PV1.19.1'] = $('strVersichertenNummer');; //Boso kennt keine Fallnummern, wir missbrauchen dazu die Vers. Nr.
//Setup TXA
// tmp['TXA']['TXA.2']['TXA.2.1'] = $('strDateiInhalt'); wird in OMT festgelegt.
// tmp['TXA']['TXA.3']['TXA.3.1'] = $('strDateiformat'); wird in OMT festgelegt.
tmp['TXA']['TXA.8']['TXA.8.1'] = $('dateTagDerSpeicherung')+ $('dateStundeDerSpeicherung');
tmp['TXA']['TXA.12']['TXA.12.1'] = $('strFileName');
tmp['TXA']['TXA.12']['TXA.12.2'] = "BOSO";
tmp['TXA']['TXA.12']['TXA.12.3'] = $('strArchivnummerDatei');
// tmp['TXA']['TXA.13']['TXA.13.1'] = ""; //Parent Doc Number?!
tmp['TXA']['TXA.16']['TXA.16.1'] = $('strDateipfad');
//TS:Timestamp
//CE: kodierte/textuelle
//NM: Numerisch
//DT: Date
//ED: bin�rdaten
//ST: String

/*

if (processflag) {
var entries = 0;
var count = 0;
// schauen, ob es bereits OBX-Eintr�ge in der Nachricht gibt (meistens nein, aber falls WENN)
for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		entries=entries+1;
		count=count+1;
	}
}
// erstelle Groesse in CM eintrag

if ($('numGroesseCM')!=null && ($('numGroesseCM')!= "")) {
	if (count == 0) {createSegment('OBX', tmp);} else {createSegmentAfter('OBX', tmp['OBX'][entries]);entries=entries+1;};
	tmp['OBX'][entries]['OBX.1']['OBX.1.1'] = entries;
	tmp['OBX'][entries]['OBX.2']['OBX.2.1'] = "NM";
	tmp['OBX'][entries]['OBX.3']['OBX.3.1'] = "Groesse in cm";
	tmp['OBX'][entries]['OBX.5']['OBX.5.1'] = $('numGroesseCM');
	tmp['OBX'][entries]['OBX.6']['OBX.6.2'] = "cm";
	count=count+1;
}
// erstelle Gewicht in KG eintrag
if ($('numgewichtKG')!=null && ($('numgewichtKG')!= "")) {
	if (count == 0) {createSegment('OBX', tmp);} else {createSegmentAfter('OBX', tmp['OBX'][entries]);entries=entries+1;};
	tmp['OBX'][entries]['OBX.1']['OBX.1.1'] = entries;
	tmp['OBX'][entries]['OBX.2']['OBX.2.1'] = "NM";
	tmp['OBX'][entries]['OBX.3']['OBX.3.1'] = "Gewicht in kg";
	tmp['OBX'][entries]['OBX.5']['OBX.5.1'] = $('numgewichtKG');
	tmp['OBX'][entries]['OBX.6']['OBX.6.2'] = "kg";
	count=count+1;
}
if ($('strTabelle')!=null && ($('strTabelle')!= "")) {
	if (count == 0) {createSegment('OBX', tmp);} else {createSegmentAfter('OBX', tmp['OBX'][entries]);entries=entries+1;};
	tmp['OBX'][entries]['OBX.1']['OBX.1.1'] = entries;
	tmp['OBX'][entries]['OBX.2']['OBX.2.1'] = "ST";
	tmp['OBX'][entries]['OBX.3']['OBX.3.1'] = "Tabelle in csv, ';' Separator";
	tmp['OBX'][entries]['OBX.5']['OBX.5.1'] = $('strTabelle');
	tmp['OBX'][entries]['OBX.6']['OBX.6.2'] = "";
	count=count+1;
}

if ($('strComment')!=null && ($('strComment')!= "")) {
	if (count == 0) {createSegment('OBX', tmp);} else {createSegmentAfter('OBX', tmp['OBX'][entries]);entries=entries+1;};
	tmp['OBX'][entries]['OBX.1']['OBX.1.1'] = entries;
	tmp['OBX'][entries]['OBX.2']['OBX.2.1'] = "ST";
	tmp['OBX'][entries]['OBX.3']['OBX.3.1'] = "Kommentare in csv, ';' Separator";
	tmp['OBX'][entries]['OBX.5']['OBX.5.1'] = $('strComment');
	tmp['OBX'][entries]['OBX.6']['OBX.6.2'] = "";
	count=count+1;
}

//Iteriere �ber alle Eintr�ge aus der Tabelle und erstelle OBX Records
// Diabled via processflag, da Tabelle nicht geparst werden soll.

for each(key in channelMap.keySet().toArray()) {
 var strKey = String(key);
 if (strKey.indexOf('table_') !== -1) {
 	if (channelMap.get(key)!=null && !(channelMap.get(key)== "")){
 		if (count == 0) {createSegment('OBX', tmp);} else {createSegmentAfter('OBX', tmp['OBX'][entries]);entries=entries+1;};
 		tmp['OBX'][entries]['OBX.1']['OBX.1.1'] = entries;
 		tmp['OBX'][entries]['OBX.2']['OBX.2.1'] = "ST";
 		tmp['OBX'][entries]['OBX.3']['OBX.3.1'] = strKey.replace('table_','');
 		tmp['OBX'][entries]['OBX.5']['OBX.5.1'] = channelMap.get(key);
 		count=count+1;		
	}
 }
}
}
//logger.debug("Transformer ended!");

*/// Transformation f�r Jaif Mdm Import.

var src = new java.io.File($('vPDFFilePath'));
var destDir = new java.io.File('\\\\dfs-c.isi3a.ukb.intern\\dfs-c$\\KAR-EPU\\BARD\\DONE\\PDF');

msg['MSH']['MSH.9']['MSH.9.2'] = 'T09';
msg['EVN']['EVN.1']['EVN.1.1'] = 'T09';

	msg['TXA'][0]['TXA.2']['TXA.2.1'] = 'EPU-Bericht - #0505#'; // z.B. "EPU-Bericht" !!! -- muss noch korrekt angelegt werde ---!!!
	//msg['TXA'][0]['TXA.3']['TXA.3.1'] = 'PDF';
	msg['TXA'][0]['TXA.16']['TXA.16.1']= $('vPathToKHVJaifukb1488') + $('vAttachmentFileName') + ".pdf";
		
		try {
			var moveFileToDirectory = new Packages.org.apache.commons.io.FileUtils.moveFileToDirectory(src, destDir, false);
		} catch (exp) {
			logger.debug(exp);
		}	
				
//delete msg['ORC'];
//delete msg['OBR'];

/*
var src = new java.io.File($('vPDFFilePath'));
var destDir = new java.io.File('\\\\dfs-c.isi3a.ukb.intern\\\dfs-c$\\\KAR-EPU\\\BARD\\\DONE\\\PDF');

msg['MSH']['MSH.9']['MSH.9.2'] = 'T09';

for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		
		var strValueTyp = seg['OBX.2']['OBX.2.1'].toString();
		
		if (strValueTyp == 'PDF') {

			var strDokumenttyp = seg['OBX.3']['OBX.3.1'].toString(); 	// Obersation Identifier.
			seg['OBX.3']['OBX.3.1'] = strDokumenttyp + ' #0505#'; // z.B. "EPU-Bericht" !!! -- muss noch korrekt angelegt werde ---!!!
			seg['OBX.5']['OBX.5.1'] = $('vPathToKHVJaifukb1488') + $('vAttachmentFileName') + ".pdf";
			try {
				var moveFileToDirectory = new Packages.org.apache.commons.io.FileUtils.moveFileToDirectory(src, destDir, false);
			} catch (exp) {
				logger.debug(exp);
			}	
		}
				
	}
}	

*/

/*
// Transformation f�r Jaif Mdm Import.

// MSH Anpassungen:

// sende die MDM Nachricht immer als �nderungsnachricht T09.
// wird im Outbound Template festgelegt.
tmp['MSH']['MSH.7']['MSH.7.1']   = msg['MSH']['MSH.7']['MSH.7.1'].toString();
tmp['MSH']['MSH.10']['MSH.10.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

// EVN
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();

// PID
tmp['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString();
tmp['PID']['PID.4']['PID.4.1'] = msg['PID']['PID.3']['PID.3.1'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['PID']['PID.5']['PID.5.1'].toString();
tmp['PID']['PID.5']['PID.5.2'] = msg['PID']['PID.5']['PID.5.2'].toString();
tmp['PID']['PID.7']['PID.7.1'] = msg['PID']['PID.7']['PID.7.1'].toString();
tmp['PID']['PID.8']['PID.8.1'] = msg['PID']['PID.8']['PID.8.1'].toString();

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString();

// TXA Anpassungen:

// TXA AnpassungBelegartkuerzel fuer HYDMedia setzen

// Gleiches Vorgehen wie im Source Tansformer. Der Dokumententyp wird aus dem OBX Segment genommen, dass vom Typ "ED" ist.

for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		
		var strValueTyp = seg['OBX.2']['OBX.2.1'].toString();
		
		if (strValueTyp == 'PDF') {

			var strDokumenttyp = seg['OBX.3']['OBX.3.1'].toString(); 	// Obersation Identifier.
		}
	}
}

tmp['TXA']['TXA.2']['TXA.2.1'] 	= strDokumenttyp + ' #0314#'; // z.B. "Elektrophysiologie" !!! -- muss noch korrekt angelegt werde ---!!!
tmp['TXA']['TXA.4']['TXA.4.1']	= msg['MSH']['MSH.7']['MSH.7.1'].toString();	// Zeitpunkt der �bertragung; activity date
tmp['TXA']['TXA.6']['TXA.6.1']	= msg['OBR']['OBR.7']['OBR.7.1'].toString(); // Dokumentendatum wird hier mit dem Befunderstellungsdatum bef�llt.
tmp['TXA']['TXA.12']['TXA.12.1'] 	= msg['OBR']['OBR.2']['OBR.2.1'].toString(); 	// eindeutige Befundbezeichner (alphanumerisch).
tmp['TXA']['TXA.12']['TXA.12.2'] 	= 'BOSTONSCIENTIFIC';		// Pflichtfeld, seit 09.12.2019 in ORBIS


// Velocity Variablen soll sicherstellen, dass keine Abweichung der Ausgabepfade in der Destination und dem MDM TXA.16 Feld entstehen k�nnen.
tmp['TXA']['TXA.16']['TXA.16.1'] = $('vPathToIkasJaifukb1489') + $('vAttachmentFileName')+".pdf";

*///Setup MSH
// var processflag = false; -> Kilian zu Hintergrund fragen.

//logger.debug("Starting Transformer");
tmp['MSH']['MSH.1'] = "|";
tmp['MSH']['MSH.2'] = "^~\\&";
tmp['MSH']['MSH.3']['MSH.3.1'] = 'BOSO'; // $('strGDT-ID_Sender');
tmp['MSH']['MSH.4']['MSH.4.1'] = $('strGeraet');
tmp['MSH']['MSH.5']['MSH.5.1'] = "ORBIS"
tmp['MSH']['MSH.6']['MSH.6.1'] = "JAIF";
tmp['MSH']['MSH.7']['MSH.7.1'] = DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['MSH']['MSH.9']['MSH.9.1'] = "MDM";
tmp['MSH']['MSH.9']['MSH.9.2'] = "T09";
tmp['MSH']['MSH.10']['MSH.10.1'] = connectorMessage.getMessageId();
tmp['MSH']['MSH.12']['MSH.12.1'] = "2.3";

//Setup EVN
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['EVN']['EVN.3']['EVN.3.1']=  $('dateTagDerSpeicherung')+ $('dateStundeDerSpeicherung');


//setup PID
tmp['PID']['PID.1']['PID.1.1'] = "1";
tmp['PID']['PID.2']['PID.2.1'] = $('strPID');
tmp['PID']['PID.3']['PID.3.1'] = $('strPID');
//tmp['PID']['PID.3']['PID.3.4'] = "UKB";
//tmp['PID']['PID.3']['PID.3.5'] = "PID";
tmp['PID']['PID.5']['PID.5.1'] = $('strNachname');
tmp['PID']['PID.5']['PID.5.2'] = $('strVorname');
if (!($('dateGeburtsdatum')== "")) tmp['PID']['PID.7']['PID.7.1'] = $('dateGeburtsdatum');
tmp['PID']['PID.8']['PID.8.1'] = $('strGeschlecht');
tmp['PID']['PID.11']['PID.11.1'] = $('strWohnort');
tmp['PID']['PID.11']['PID.11.3'] =$('strStrasse');
//tmp['PID']['PID.18']['PID.18.1'] = $('strVersichertenNummer');

//setup PV1
tmp['PV1']['PV1.1']['PV1.1.1'] = "1";
tmp['PV1']['PV1.19']['PV1.19.1'] = $('strVersichertenNummer');; //Boso kennt keine Fallnummern, wir missbrauchen dazu die Vers. Nr.
//Setup TXA
// tmp['TXA']['TXA.2']['TXA.2.1'] = $('strDateiInhalt'); wird in OMT festgelegt.
// tmp['TXA']['TXA.3']['TXA.3.1'] = $('strDateiformat'); wird in OMT festgelegt.
tmp['TXA']['TXA.8']['TXA.8.1'] = $('dateTagDerSpeicherung')+ $('dateStundeDerSpeicherung');
tmp['TXA']['TXA.12']['TXA.12.1'] = $('strFileName');
tmp['TXA']['TXA.12']['TXA.12.2'] = "BOSO";
tmp['TXA']['TXA.12']['TXA.12.3'] = $('strArchivnummerDatei');
// tmp['TXA']['TXA.13']['TXA.13.1'] = ""; //Parent Doc Number?!
tmp['TXA']['TXA.16']['TXA.16.1'] = $('strDateipfad');
//TS:Timestamp
//CE: kodierte/textuelle
//NM: Numerisch
//DT: Date
//ED: bin�rdaten
//ST: String

/*

if (processflag) {
var entries = 0;
var count = 0;
// schauen, ob es bereits OBX-Eintr�ge in der Nachricht gibt (meistens nein, aber falls WENN)
for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		entries=entries+1;
		count=count+1;
	}
}
// erstelle Groesse in CM eintrag

if ($('numGroesseCM')!=null && ($('numGroesseCM')!= "")) {
	if (count == 0) {createSegment('OBX', tmp);} else {createSegmentAfter('OBX', tmp['OBX'][entries]);entries=entries+1;};
	tmp['OBX'][entries]['OBX.1']['OBX.1.1'] = entries;
	tmp['OBX'][entries]['OBX.2']['OBX.2.1'] = "NM";
	tmp['OBX'][entries]['OBX.3']['OBX.3.1'] = "Groesse in cm";
	tmp['OBX'][entries]['OBX.5']['OBX.5.1'] = $('numGroesseCM');
	tmp['OBX'][entries]['OBX.6']['OBX.6.2'] = "cm";
	count=count+1;
}
// erstelle Gewicht in KG eintrag
if ($('numgewichtKG')!=null && ($('numgewichtKG')!= "")) {
	if (count == 0) {createSegment('OBX', tmp);} else {createSegmentAfter('OBX', tmp['OBX'][entries]);entries=entries+1;};
	tmp['OBX'][entries]['OBX.1']['OBX.1.1'] = entries;
	tmp['OBX'][entries]['OBX.2']['OBX.2.1'] = "NM";
	tmp['OBX'][entries]['OBX.3']['OBX.3.1'] = "Gewicht in kg";
	tmp['OBX'][entries]['OBX.5']['OBX.5.1'] = $('numgewichtKG');
	tmp['OBX'][entries]['OBX.6']['OBX.6.2'] = "kg";
	count=count+1;
}
if ($('strTabelle')!=null && ($('strTabelle')!= "")) {
	if (count == 0) {createSegment('OBX', tmp);} else {createSegmentAfter('OBX', tmp['OBX'][entries]);entries=entries+1;};
	tmp['OBX'][entries]['OBX.1']['OBX.1.1'] = entries;
	tmp['OBX'][entries]['OBX.2']['OBX.2.1'] = "ST";
	tmp['OBX'][entries]['OBX.3']['OBX.3.1'] = "Tabelle in csv, ';' Separator";
	tmp['OBX'][entries]['OBX.5']['OBX.5.1'] = $('strTabelle');
	tmp['OBX'][entries]['OBX.6']['OBX.6.2'] = "";
	count=count+1;
}

if ($('strComment')!=null && ($('strComment')!= "")) {
	if (count == 0) {createSegment('OBX', tmp);} else {createSegmentAfter('OBX', tmp['OBX'][entries]);entries=entries+1;};
	tmp['OBX'][entries]['OBX.1']['OBX.1.1'] = entries;
	tmp['OBX'][entries]['OBX.2']['OBX.2.1'] = "ST";
	tmp['OBX'][entries]['OBX.3']['OBX.3.1'] = "Kommentare in csv, ';' Separator";
	tmp['OBX'][entries]['OBX.5']['OBX.5.1'] = $('strComment');
	tmp['OBX'][entries]['OBX.6']['OBX.6.2'] = "";
	count=count+1;
}

//Iteriere �ber alle Eintr�ge aus der Tabelle und erstelle OBX Records
// Diabled via processflag, da Tabelle nicht geparst werden soll.

for each(key in channelMap.keySet().toArray()) {
 var strKey = String(key);
 if (strKey.indexOf('table_') !== -1) {
 	if (channelMap.get(key)!=null && !(channelMap.get(key)== "")){
 		if (count == 0) {createSegment('OBX', tmp);} else {createSegmentAfter('OBX', tmp['OBX'][entries]);entries=entries+1;};
 		tmp['OBX'][entries]['OBX.1']['OBX.1.1'] = entries;
 		tmp['OBX'][entries]['OBX.2']['OBX.2.1'] = "ST";
 		tmp['OBX'][entries]['OBX.3']['OBX.3.1'] = strKey.replace('table_','');
 		tmp['OBX'][entries]['OBX.5']['OBX.5.1'] = channelMap.get(key);
 		count=count+1;		
	}
 }
}
}
//logger.debug("Transformer ended!");

*/var src = new java.io.File($('vPDFFilePath'));
var destDir = new java.io.File('\\\\dfs-c.isi3a.ukb.intern\\dfs-c$\\KAR-EPU\\BARD\\DONE\\PDF');



for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		
		var strValueTyp = seg['OBX.2']['OBX.2.1'].toString();
		
		if (strValueTyp == 'PDF') {

			var strDokumenttyp = seg['OBX.3']['OBX.3.1'].toString(); 	// Obersation Identifier.
			//seg['OBX.3']['OBX.3.1'] = strDokumenttyp + ' #0505#'; // z.B. "EPU-Bericht" !!! -- muss noch korrekt angelegt werde ---!!!
			//seg['OBX.5']['OBX.5.1'] = $('vPathToKHVJaifukb1488') + $('vAttachmentFileName') + ".pdf";
msg['OBR']['OBR.27']['OBR.27.4'].toString()
			tmp['TXA']['TXA.2']['TXA.2.1'] = 'EPU-Bericht - #0505#'; // z.B. "EPU-Bericht" !!! -- muss noch korrekt angelegt werde ---!!!
			tmp['TXA']['TXA.3']['TXA.3.1'] =strValueTyp; 
			tmp['TXA']['TXA.8']['TXA.8.1'] = msg['OBR']['OBR.27']['OBR.27.4'].toString();
			tmp['TXA']['TXA.12']['TXA.12.1'] = msg['ORC']['ORC.3']['ORC.3.1'].toString();
			tmp['TXA']['TXA.12']['TXA.12.2'] = msg['MSH']['MSH.4']['MSH.4.1'].toString();
			tmp['TXA']['TXA.16']['TXA.16.1'] = $('vPathToKHVJaifukb1488') + $('vAttachmentFileName') + ".pdf";
			try {
				var moveFileToDirectory = new Packages.org.apache.commons.io.FileUtils.moveFileToDirectory(src, destDir, false);
			} catch (exp) {
				logger.debug(exp);
			}	
		}
				
	}
}
delete msg['ORC'];
delete msg['OBR'];
delete msg['OBX'];var src = new java.io.File($('vPDFFilePath'));
var destDir = new java.io.File('\\\\dfs-c.isi3a.ukb.intern\\dfs-c$\\KAR-EPU\\BARD\\DONE\\PDF');

msg['MSH']['MSH.9']['MSH.9.2'] = 'T09';
msg['EVN']['EVN.1']['EVN.1.1'] = 'T09';

	msg['TXA'][0]['TXA.2']['TXA.2.1'] = 'EPU-Bericht - #0505#'; // z.B. "EPU-Bericht" !!! -- muss noch korrekt angelegt werde ---!!!
	msg['TXA'][0]['TXA.3']['TXA.3.1'] = 'PDF';
	msg['TXA'][0]['TXA.16']['TXA.16.1']= $('vPathToKHVJaifukb1488') + $('vAttachmentFileName') + ".pdf";
			
		try {
			var moveFileToDirectory = new Packages.org.apache.commons.io.FileUtils.moveFileToDirectory(src, destDir, false);
		} catch (exp) {
			logger.debug(exp);
		}	
				
delete msg['ORC'];
delete msg['OBR'];// Anpassung im TXA Segment.

// Voranstellen des ftp Pfades:
msg['TXA']['TXA.16']['TXA.16.1'] = 'ftp://csd:caresd2015!@ukb218.klinik.bn/CSD/PDF/' + msg['TXA']['TXA.16']['TXA.16.1'].toString();

// Setzen des Namensraumbezeichners (hier 'CARESD')
msg['TXA']['TXA.12']['TXA.12.2'] = 'CARESD';// Initialer Abfragewert zur Kontrolle:
channelMap.put('vDokumentenabfrageErfolgreich','Nein');

// Ermitteln des Nachrichtensendezeitpunktes.
// Format YYYYMMDD24HHMISS.
var strMsgZeitpunkt = msg['MSH']['MSH.7']['MSH.7.1'].toString();

// Ggf. alternativ verwenden.
// Ermitteln des Auftragszeitpunktes
// Format YYYYMMDD24HHMI. (ohne Sekunden!)
// var strLSTMAuftragsDat = msg['ORC']['ORC.9']['ORC.9.1'].toString()

// Ermitteln der Fallnummer aus der LSTM ORM-Auftragsnachricht.
var strFallnr = msg['PV1']['PV1.19']['PV1.19.1'].toString();

var paramList = new Packages.java.util.ArrayList();
paramList.add(strFallnr);
paramList.add(strMsgZeitpunkt);

// Get Data from Oracel SQL Database
var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@ukb289:1521:PHYD','hydmediasqlread','sql2013read');

//Create a SQL Statement to be executed
// Abfrage aller bisherigen Dokumente zur Fallnummer aus der HL7 ORM Nachricht.

var sqlStr ="select " +
			"TO_CHAR(sysdate, 'YYYYMMDDHH24MISS') AS HL7DateTime, " +								// (1)
			"bpd.objectid, " +																// (2)
			"bpd.orbisdokumentenid, " +														// (3)
			"bpd.dokumentenherkunft, " + 														// (4)
			"bpd.dokumentendatum, " + 														// (5)
			"TO_CHAR(bpd.dokumentendatum, 'YYYYMMDDHH24MISS') AS HL7DateTimeDokuDatum, " +				// (6)
			"bpd.Auftragsnummer, " + 														// (7)
			"bpd.anforderndeoe, " +															// (8)
			"bpd.containerclassname, " +														// (9)
			"bpd.doctypeclassname, " +														// (10)
			"BPD.DOKINFO, " +																// (11)
			"di.archkey, " +																// (12)	
			"di.documentid, " +																// (13)
			"di.externalid, " +																// (14)
			"di.creationdate, " +															// (15)
			"TO_CHAR(di.creationdate, 'YYYYMMDDHH24MISS') HL7DateTimeCreationDate, " +					// (16)
			"di.changedate, " +																// (17)
			"TO_CHAR(di.changedate, 'YYYYMMDDHH24MISS') HL7DateTimeChangeDate, " +					// (18)
			"di.doc_version, " +															// (19)
			"dc.case_checkin_date, " +														// (20)
			"dc.case_checkout_date, " +														// (21)
			"dc.case_station, " +															// (22)
			"dc.case_organisation_unit, " +													// (23)
			"dp.patient_id, " +																// (24)
			"dp.patient_id PID, " +															// (25)
			"dpers.firstname, " +															// (26)
			"dpers.lastname, " +															// (27)
			"dpers.birthday, " +															// (28)
			"sfe.filename, " +																// (29)
			"doc.MIMETYPE, " +																// (30)
			"dc.case_id, " +																// (31)
			"SFE.STORAGELEVEL " +															// (32)
			"FROM " +
			"G5.dc_dyn_basepatientdocclass bpd, G5.doc_instance di, g5.dc_case dc, g5.dc_patient dp, " +
			"g5.dc_person dpers, G5.dc_address dadr, G5.sto_storagefileentry sfe,  " +
			"G5.STO_STORAGELEVELCONF SLC, G5.STO_STORAGELEVELCONFENTRY SLCE, " +
			"g5.doc_content doc " +
			"where " +
			"bpd.objectid = di.baseobjectid and " +
			"di.archkey = sfe.archkey and " +       
			"SFE.STORAGELEVEL = SLC.STORAGELEVEL(+) and SLC.ID = SLCE.STORAGELEVEL and SLCE.CONFKEY = 'FILEARCHIVE' and " +
			"di.id = doc.docinstanceid and " +
			"BPD.CASES = DC.BASE_ID and dc.patient_base_id = dp.base_id and dp.base_id = dpers.base_id and " +
			"dpers.address1 = dadr.base_id and dc.case_id is not null and BPD.EINRICHTUNG = 'UKB' AND " +
			"bpd.dokumentenherkunft = 'ORBIS_10470' AND " +
			"DC.CASE_ID = ? AND " +
			"BPD.DOKINFO IN ('Sozialdienst', 'Entlassungsbericht Pflege','Reha-Barthel-Index','Reha-Befundbericht') AND " +
			"DI.CREATIONDATE <= TO_DATE(?, 'YYYYMMDDHH24MISS')";

// Execute SQL Statement and save them as results
var result = dbConn.executeCachedQuery(sqlStr, paramList);

while(result.next()) {

			// neue Nachricht generieren
			// Spalten den XML-Feldern zuordnen
			// MDM Nachrichten zu gefundenen Dokumenten erstellen und einzeln intern weiterleiten.

			tmp['hl7datetime']				= result.getString(1);
			tmp['objectid']				= result.getString(2);
			tmp['orbisdokumentenid']			= result.getString(3);
			tmp['dokumentenherkunft']		= result.getString(4);
			tmp['dokumentendatum']			= result.getString(5);
			tmp['hl7datetimedokudatum']		= result.getString(6);
			tmp['auftragsnummer']			= result.getString(7);
			tmp['anforderndeoe']			= result.getString(8);
			tmp['containerclassname']		= result.getString(9);
			tmp['doctypeclassname']			= result.getString(10);
			tmp['dokinfo']					= result.getString(11);
			tmp['archkey']					= result.getString(12);
			tmp['externalid']				= result.getString(14);
			tmp['documentid']				= result.getString(13);
			tmp['creationdate']				= result.getString(15);
			tmp['hl7datetimecreationdate']	= result.getString(16);
			tmp['changedate']				= result.getString(17);
			tmp['hl7datetimechangedate']		= result.getString(18);
			tmp['doc_version']				= result.getString(19);
			tmp['case_checkin_date']			= result.getString(20);
			tmp['case_station']				= result.getString(22);
			tmp['case_organisation_unit']		= result.getString(23);
			tmp['patient_id']				= result.getString(24);
			tmp['pid']					= result.getString(25);
			tmp['firstname']				= result.getString(26);
			tmp['lastname']				= result.getString(27);
			tmp['birthday']				= result.getString(28);
			tmp['filename']				= result.getString(29);
			tmp['mimetype']				= result.getString(30);
			tmp['case_id']					= result.getString(31);
			tmp['storagelevel']				= result.getString(32);
			
			router.routeMessage('cPhydG5CareSdMdmInitial', tmp);

			channelMap.put('vDokumentenabfrageErfolgreich','Ja');
};

dbConn.close();// Alle Fachabteilungsaufenthalte, in denen das Einwilligung_ab Datum liegt ermitteln, in ADT Nachrichten schreiben und versenden.


// Anhand des Einwilligungsdatums aus dem ORBIS Biobank Einwilliungsformulars wird die zeitliche Abgrenzung
// vorgenommen, f�r die �bermittlung von Diagnosedaten zum Patienten.
// D.h. alle Diagnosen und Prozeduren, die in ORBIS hinterlegt wurden mit einem Erfassungsdatums gr��er, gleich dem Einwillungsdatum
// werden einmalig abgefragt und �bermittelt.

// Parameter f�r die SQL Abfrage sind
// (1) Einwilligungsdatum
// (2) PID

// Parameter, die an Centraxx �bermittelt werden sind:
// (1) Fallnummer
// (2) Aufnahmedatum
// (3) Station oder Ambulanz
// (4) Fachabteilung oder Insitut
// (5) Entlassdatum (bei station�ren F�llen)
// (6) Versorungsart (ambulant oder station�r)

var paramList = new Packages.java.util.ArrayList();
paramList.add($('vPID'));
paramList.add($('vPID'));

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');
// dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.54:1521:IKAS','orbis_rep','REPORTTEST');


var strSql = 	"SELECT " +		// Ambulante F�lle
			"F.FALLNR, " +
			"PF.FREMD_PERSNR PID, " +
			"TO_CHAR(TRUNC(F.AUFNDAT), 'YYYYMMDDHH24MISS') AUFNDAT, " +
			"TO_CHAR( (ADD_MONTHS(TRUNC(F.AUFNDAT, 'q'), 3) - 1), 'YYYYMMDDHH24MISS') ENTLDAT, " +	// Ende des Quartals berechnen, siehe auch https://asktom.oracle.com/pls/apex/f?p=100:11:0::::P11_QUESTION_ID:7661455036098
			"OE_INST.OEBENEKURZ AMBU_KLINIK, " +
			"'O' AS VERSORGUNGSART, " +
			"OE_AMBU.OEBENEKURZ AMBU_KLINIK_U, " +
			"TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') ABFRAGEZEIT, " +
			"LAG(FALLNR) OVER (ORDER BY FALLNR) AS PREVIOUS, " +
			"NAT.NAME, " +
			"NAT.VORNAME, " +
			"TO_CHAR(NAT.GEBDAT, 'YYYYMMDD') GEBDAT, NAT.GESCHLECHT, " +	
			"TO_CHAR(TS.TODESDATUM, 'YYYYMMDDHH24MISS') TODESDATUM, " +	
			"'' AS BEGINN " +
			"FROM " +
			"FALL F, FALL_AMBU FA, PERSON_FREMD PF, ORGAEBENE OE_AMBU, ORGA_STRUK OS, ORGAEBENE OE_INST, PM_MANDANT PM, " +
			"GESELLSCHAFT GE, NATPERSON NAT, TOTENSCHEIN TS " +
			"WHERE "  +
			"F.FALLID = FA.FALLID(+) AND " +
			"F.PERSNR = PF.PERSNR AND " +
			"F.PERSNR = NAT.PERSNR AND " +
			"F.PERSNR = TS.PERSNR(+) AND " +
			"F.AKTSTATNR = 1 AND " +
			"FA.OEBENEID = OE_AMBU.OEBENEID(+) AND " +
			"FA.OEBENEID = OS.U_OEBENEID AND " +
			"OS.O_OEBENEID = OE_INST.OEBENEID(+) AND " +
			"F.MANDANTID = PM.PERSNR AND PM.KH_PERSNR = GE.PERSNR AND GE.G_KURZ = 'UKB' AND " +
			"F.STORNO_DATUM is null AND " +
			"PF.FREMD_PERSNR= ? " +			// PID
			"UNION ALL " +
			"SELECT " +		// Station�re F�lle
			"F.FALLNR,  " +
			"PF.FREMD_PERSNR PID, " +
			"TO_CHAR(TRUNC(F.AUFNDAT), 'YYYYMMDDHH24MISS') AUFNDAT, " +
			"TO_CHAR(TRUNC(F.ENTLDAT), 'YYYYMMDDHH24MISS') ENTLDAT, " +
			"OE_FACH.OEBENEKURZ AMBU_KLINIK, " +
			"'I' AS VERSORGUNGSART, " +
			"OE_STAT.OEBENEKURZ AMBU_KLINIK_U, " +
			"TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') ABFRAGEZEIT, " +
			"LAG(FALLNR) OVER (ORDER BY FALLNR) AS PREVIOUS, " +
			"NAT.NAME, " +
			"NAT.VORNAME, " +
			"TO_CHAR(NAT.GEBDAT, 'YYYYMMDD') GEBDAT, NAT.GESCHLECHT, " +	
			"TO_CHAR(TS.TODESDATUM, 'YYYYMMDDHH24MISS') TODESDATUM, " +	
			"TO_CHAR(FA.BEGINN, 'YYYYMMDDHH24MISS') BEGINN " +
			"FROM  " +
			"FALL F, PERSON_FREMD PF, FALL_AUFENTHALT FA, ORGAEBENE OE_FACH, ORGAEBENE OE_STAT, PM_MANDANT PM, GESELLSCHAFT GE, NATPERSON NAT, TOTENSCHEIN TS " +
			"WHERE " +
			"F.PERSNR = PF.PERSNR AND " +
			"F.PERSNR = NAT.PERSNR AND " +
			"F.PERSNR = TS.PERSNR(+) AND " +
			"F.AKTSTATNR != 1 AND " +
			"F.FALLID = FA.FALLID AND " +
			"SUBSTR(FA.CHANGEPATTERN,1,1) = '1'AND " +
			"FA.OEBENEID_DEPARTMENT = OE_FACH.OEBENEID(+) AND " +
			"FA.OEBENEID_STATION = OE_STAT.OEBENEID AND " +
			"PF.FREMD_PERSNR= ? AND " +																					// PID
			"F.MANDANTID = PM.PERSNR AND PM.KH_PERSNR = GE.PERSNR AND GE.G_KURZ = 'UKB' AND " +
			"F.STORNO_DATUM is null " +
			"ORDER BY 6,1,3 " ;

// logger.error(strSql);
result = dbConn.executeCachedQuery(strSql, paramList);
resultSize = result.size();
channelMap.put('vAnzahldatensaetze ADT', resultSize);		// zu Dokumentationszwecken.

while (result.next()) {

	var strFALLNR		= result.getString(1);
	var strPID   		= result.getString(2);
 	var strHL7AUFNDAT	= result.getString(3);
 	var strHL7ENTLDAT	= result.getString(4);
	var strOEBENEKL_INS	= result.getString(5); 
	var strVERSSTATUS	= result.getString(6); // Versorgungsstatum (ambulant, station�r)
	var strOEBENEAMBST  = result.getString(7); 
	var strAbfragezeit	= result.getString(8);  // Abfragezeit auf KHV
	var strVorherFallnr	= result.getString(9);  // Vorherige Fallnummer in der Ergebnisliste
	var strPatName		= result.getString(10);  // Pat. Name
	var strPatVorname	= result.getString(11);  // Pat. Vorname
	var strPatGebdat	= result.getString(12);  // Pat. Gebdat
	var strPatGeschl	= result.getString(13);  // Pat. Gebdat
	var strPatTodeszeit	= result.getString(14);  // Pat. Todeszeitpunkt
	var strVerlegungzeit= result.getString(15);  // Zeitpunkt der station�ren Verlegung (Klinikwechsel)
	
	tmp['MSH']['MSH.7']['MSH.7.1']	=	strAbfragezeit;	// Date7Time of Message
	tmp['MSH']['MSH.10']['MSH.10.1'] 	= 	UUIDGenerator.getUUID();	// Message Control ID
	// EVN
	// wird weiter unten bestimmt
	
	// PID
	tmp['PID']['PID.2']['PID.2.1']	=	strPID;	// PID
	tmp['PID']['PID.3']['PID.3.1']	=	strPID;	// PID
	tmp['PID']['PID.5']['PID.5.1']	= 	strPatName;	// Nachname
	tmp['PID']['PID.5']['PID.5.2']	= 	strPatVorname;	// Vorname
	tmp['PID']['PID.7']['PID.7.1']	=	strPatGebdat;	// Gebdat Patient
	tmp['PID']['PID.8']['PID.8.1']	= 	strPatGeschl;	// Pat Sex	
	if(strPatTodeszeit != null) {
		tmp['PID']['PID.29']['PID.29.1']	=    strPatTodeszeit // Todeszeit nur bef�llen, wenn vorhanden (kein "null" String eintragen)
	}
	
	// PV1
	tmp['PV1']['PV1.19']['PV1.19.1']	=	strFALLNR; 	// FALLNR
	tmp['PV1']['PV1.44']['PV1.44.1']	=	strHL7AUFNDAT	// Aufnahme


	if(strVERSSTATUS == 'O') {		// Outpatient = ambulanter Fall

		tmp['MSH']['MSH.9']['MSH.9.2'] 	= 'A04';				// Nachrichtentyp "Ambulante Aufnahme" = A04
		tmp['EVN']['EVN.1']['EVN.1.1']	= 'A04'

		tmp['EVN']['EVN.2']['EVN.2.1']	= 	strHL7AUFNDAT;	// Recorded Date/Time
		tmp['EVN']['EVN.3']['EVN.3.1']	=	strHL7AUFNDAT;	// Planned Event Date/Time

	
		tmp['PV1']['PV1.3']['PV1.3.1']	= '';				// Station
		tmp['PV1']['PV1.3']['PV1.3.4']	= strOEBENEAMBST;		// Ambulanz, wenn ambulanter Fall, Klinik/Fachabteilung, wenn station�rer Fall
		tmp['PV1']['PV1.3']['PV1.3.5']	= strOEBENEKL_INS;		// Institut, wenn ambulanter Fall, sonst leer
		tmp['PV1']['PV1.45']['PV1.45.1']	= strHL7ENTLDAT;		// Entlassung, nur bei station�ren F�llen, aufgehoben: Wunsch der BB ist es, dass das Quartalsende im ambulanten Entlassdatumsfeld geschrieben wird.
		
	} else if(strVERSSTATUS == 'I') {	// Inpatient = station�rer Fall

		if(strVorherFallnr != strFALLNR) {
			
			tmp['MSH']['MSH.9']['MSH.9.2'] 	= 'A01';				// Nachrichtentyp "station�re Aufnahme" = A01
			tmp['EVN']['EVN.1']['EVN.1.1']	= 'A01';
			tmp['EVN']['EVN.2']['EVN.2.1']	= 	strHL7AUFNDAT;	// Recorded Date/Time
			tmp['EVN']['EVN.3']['EVN.3.1']	=	strHL7AUFNDAT;	// Planned Event Date/Time
			
			strA01Flag = true;
		} else {

			tmp['MSH']['MSH.9']['MSH.9.2'] 	= 'A02';				// Nachrichtentyp "Ambulante Aufnahme" = A04		
			tmp['EVN']['EVN.1']['EVN.1.1']	= 'A02'
			tmp['EVN']['EVN.2']['EVN.2.1']	= 	strVerlegungzeit;	// Recorded Date/Time
			tmp['EVN']['EVN.3']['EVN.3.1']	=	strVerlegungzeit;	// Planned Event Date/Time
			
		}

		tmp['PV1']['PV1.3']['PV1.3.1']	= strOEBENEAMBST;		// Station
		tmp['PV1']['PV1.3']['PV1.3.4']	= strOEBENEKL_INS;		// Ambulanz, wenn ambulanter Fall, Klinik/Fachabteilung, wenn station�rer Fall
		tmp['PV1']['PV1.3']['PV1.3.5']	='';					// Institut, wenn ambulanter Fall, sonst leer
		tmp['PV1']['PV1.45']['PV1.45.1']	= strHL7ENTLDAT;		// Entlassung, nur bei station�ren F�llen
	}

router.routeMessage('cCentraXX4Hl7Out', SerializerFactory.getSerializer('HL7V2').fromXML(tmp) );		// Weiterleiten an Sende-Channel
// logger.error(tmp);

}

dbConn.close();// Initialer Abfragewert zur Kontrolle:
channelMap.put('vDokumentenabfrageErfolgreich','Nein');

// Ermitteln des Nachrichtensendezeitpunktes.
// Format YYYYMMDD24HHMISS.
var strMsgZeitpunkt = msg['MSH']['MSH.7']['MSH.7.1'].toString();

// Ggf. alternativ verwenden.
// Ermitteln des Auftragszeitpunktes
// Format YYYYMMDD24HHMI. (ohne Sekunden!)
// var strLSTMAuftragsDat = msg['ORC']['ORC.9']['ORC.9.1'].toString()

// Ermitteln der Fallnummer aus der LSTM ORM-Auftragsnachricht.
var strFallnr = msg['PV1']['PV1.19']['PV1.19.1'].toString();

var paramList = new Packages.java.util.ArrayList();
paramList.add(strFallnr);
paramList.add(strMsgZeitpunkt);

// Get Data from Oracel SQL Database
var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@ukb289:1521:PHYD','hydmediasqlread','sql2013read');

//Create a SQL Statement to be executed
// Abfrage aller bisherigen Dokumente zur Fallnummer aus der HL7 ORM Nachricht.

var sqlStr ="select " +
			"TO_CHAR(sysdate, 'YYYYMMDDHH24MISS') AS HL7DateTime, " +								// (1)
			"bpd.objectid, " +																// (2)
			"bpd.orbisdokumentenid, " +														// (3)
			"bpd.dokumentenherkunft, " + 														// (4)
			"bpd.dokumentendatum, " + 														// (5)
			"TO_CHAR(bpd.dokumentendatum, 'YYYYMMDDHH24MISS') AS HL7DateTimeDokuDatum, " +				// (6)
			"bpd.Auftragsnummer, " + 														// (7)
			"bpd.anforderndeoe, " +															// (8)
			"bpd.containerclassname, " +														// (9)
			"bpd.doctypeclassname, " +														// (10)
			"BPD.DOKINFO, " +																// (11)
			"di.archkey, " +																// (12)	
			"di.documentid, " +																// (13)
			"di.externalid, " +																// (14)
			"di.creationdate, " +															// (15)
			"TO_CHAR(di.creationdate, 'YYYYMMDDHH24MISS') HL7DateTimeCreationDate, " +					// (16)
			"di.changedate, " +																// (17)
			"TO_CHAR(di.changedate, 'YYYYMMDDHH24MISS') HL7DateTimeChangeDate, " +					// (18)
			"di.doc_version, " +															// (19)
			"dc.case_checkin_date, " +														// (20)
			"dc.case_checkout_date, " +														// (21)
			"dc.case_station, " +															// (22)
			"dc.case_organisation_unit, " +													// (23)
			"dp.patient_id, " +																// (24)
			"dp.patient_id PID, " +															// (25)
			"dpers.firstname, " +															// (26)
			"dpers.lastname, " +															// (27)
			"dpers.birthday, " +															// (28)
			"sfe.filename, " +																// (29)
			"doc.MIMETYPE, " +																// (30)
			"dc.case_id, " +																// (31)
			"SFE.STORAGELEVEL " +															// (32)
			"FROM " +
			"G5.dc_dyn_basepatientdocclass bpd, G5.doc_instance di, g5.dc_case dc, g5.dc_patient dp, " +
			"g5.dc_person dpers, G5.dc_address dadr, G5.sto_storagefileentry sfe,  " +
			"G5.STO_STORAGELEVELCONF SLC, G5.STO_STORAGELEVELCONFENTRY SLCE, " +
			"g5.doc_content doc " +
			"where " +
			"bpd.objectid = di.baseobjectid and " +
			"di.archkey = sfe.archkey and " +       
			"SFE.STORAGELEVEL = SLC.STORAGELEVEL(+) and SLC.ID = SLCE.STORAGELEVEL and SLCE.CONFKEY = 'FILEARCHIVE' and " +
			"di.id = doc.docinstanceid and " +
			"BPD.CASES = DC.BASE_ID and dc.patient_base_id = dp.base_id and dp.base_id = dpers.base_id and " +
			"dpers.address1 = dadr.base_id and dc.case_id is not null and BPD.EINRICHTUNG = 'UKB' AND " +
			"bpd.dokumentenherkunft = 'ORBIS_10470' AND " +
			"DC.CASE_ID = ? AND " +
			"BPD.DOKINFO IN ('Sozialdienst', 'Entlassungsbericht Pflege','Reha-Barthel-Index','Reha-Befundbericht') AND " +
			"DI.CREATIONDATE <= TO_DATE(?, 'YYYYMMDDHH24MISS')";

// Execute SQL Statement and save them as results
var result = dbConn.executeCachedQuery(sqlStr, paramList);

while(result.next()) {

			// neue Nachricht generieren
			// Spalten den XML-Feldern zuordnen
			// MDM Nachrichten zu gefundenen Dokumenten erstellen und einzeln intern weiterleiten.

			tmp['hl7datetime']				= result.getString(1);
			tmp['objectid']				= result.getString(2);
			tmp['orbisdokumentenid']			= result.getString(3);
			tmp['dokumentenherkunft']		= result.getString(4);
			tmp['dokumentendatum']			= result.getString(5);
			tmp['hl7datetimedokudatum']		= result.getString(6);
			tmp['auftragsnummer']			= result.getString(7);
			tmp['anforderndeoe']			= result.getString(8);
			tmp['containerclassname']		= result.getString(9);
			tmp['doctypeclassname']			= result.getString(10);
			tmp['dokinfo']					= result.getString(11);
			tmp['archkey']					= result.getString(12);
			tmp['externalid']				= result.getString(14);
			tmp['documentid']				= result.getString(13);
			tmp['creationdate']				= result.getString(15);
			tmp['hl7datetimecreationdate']	= result.getString(16);
			tmp['changedate']				= result.getString(17);
			tmp['hl7datetimechangedate']		= result.getString(18);
			tmp['doc_version']				= result.getString(19);
			tmp['case_checkin_date']			= result.getString(20);
			tmp['case_station']				= result.getString(22);
			tmp['case_organisation_unit']		= result.getString(23);
			tmp['patient_id']				= result.getString(24);
			tmp['pid']					= result.getString(25);
			tmp['firstname']				= result.getString(26);
			tmp['lastname']				= result.getString(27);
			tmp['birthday']				= result.getString(28);
			tmp['filename']				= result.getString(29);
			tmp['mimetype']				= result.getString(30);
			tmp['case_id']					= result.getString(31);
			tmp['storagelevel']				= result.getString(32);
			
			router.routeMessage('cPhydG5CareSdMdmInitial', tmp);

			channelMap.put('vDokumentenabfrageErfolgreich','Ja');
};

dbConn.close();// Anhand des Einwilligungsdatums aus dem ORBIS Biobank Einwilliungsformulars wird die zeitliche Abgrenzung
// vorgenommen, f�r die �bermittlung von Diagnosedaten zum Patienten.
// D.h. alle Diagnosen und Prozeduren, die in ORBIS hinterlegt wurden mit einem Erfassungsdatums gr��er, gleich dem Einwillungsdatum
// werden einmalig abgefragt und �bermittelt.

// Parameter f�r die SQL Abfrage sind
// (1) Einwilligungsdatum
// (2) PID

// Parameter, die an Centraxx �bermittelt werden sind:
// (1) Fallnummer
// (2) ICD bzw. OPS Code
// (3) ICD bzw. OPS Langtext
// (4) ICD bzw. OPS Orbis-ID (intern)
// (5) ICD bzw. OPS Feststelldatum (Erfassungsdatum)
// (6) Ggf. Lokalisationsangaben
// (7) ICD bzw. OPS Katalogjahr

var paramList = new Packages.java.util.ArrayList();
paramList.add($('vPID'));
paramList.add($('vPID'));

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');
// dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.54:1521:IKAS','orbis_rep','REPORTTEST');


var strSql = 	"SELECT " +
			"CASE  " +
			"WHEN SUB.HAUPTNEBEN = 'H' THEN '1.1'   " +
			"WHEN (SUB.HAUPTNEBEN = 'N' AND SUB.TYP = 'P') THEN '2.1'   " +
			"WHEN (SUB.HAUPTNEBEN = 'N' AND SUB.TYP = 'SEK') THEN '2.2'   " +
			"END AS HL7HN, " +
			"SUB.PID, " +
			"SUB.FALLNR, " +
			"SUB.LOKALISATION, " +
			"SUB.OEBENEKURZ, " +
			"SUB.HL7FSDATUM, " +
			"SUB.FREMDDIAGID, " +
			"SUB.DIAGKURZ, " +
			"SUB.DIAGBEZ, " +
			"SUB.HL7KURZ, " +
			"TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') ABFRAGEZEIT " +
			"FROM " +
			"( " +
				"SELECT " +
				"PF.FREMD_PERSNR PID, " +
				"F.FALLNR, " + 
				"FD.LOKALISATION, " +
				"FDA.HAUPTNEBEN, " +
				"OE.OEBENEKURZ, " +
				"FDA.FESTSTDATUM, " +
				"TO_CHAR(FDA.FESTSTDATUM, 'YYYYMMDDHH24MI') HL7FSDATUM, " +
				"FDA.FREMDDIAGID, " +
				"'P' AS TYP, " +
				"D.DIAGKURZ , " +
				"D.DIAGBEZ , " +
				"DT.HL7KURZ " +
				"FROM " +
				"PERSON_FREMD PF, FALL F, " +
				"FALL_DIAGNOSEN FD, " +
				"DIAGNOSEN D, " +
				"FALL_DIAG_ARTEN FDA, " +
				"DIAGNOSETYP DT, " +
				"ORGAEBENE OE, " +
				"GESELLSCHAFT GE, PM_MANDANT PM " +
				"WHERE " +
				"F.PERSNR = PF.PERSNR AND " +
				"F.FALLID = FD.FALLID AND " +
				"F.MANDANTID = PM.PERSNR AND PM.KH_PERSNR = GE.PERSNR AND GE.G_KURZ = 'UKB' AND " +
				"FD.FALL_DIAGNOSENID = FDA.FALL_DIAGNOSENID AND " +
				"FD.DIAGNOSEID = D.DIAGNOSEID AND " +
				"D.DIAGTYPID = DT.DIAGTYPID AND  " +
				"FDA.OEBENEID = OE.OEBENEID(+) AND " +
				"FDA.STORNO_DATUM is null AND " +
				"(FDA.DIAGARTID = 5 OR (FDA.DIAGARTID = 10 AND FDA.FALL_FACHRICHTID is null) ) AND " +
				"PF.FREMD_PERSNR = ? " +
				"UNION ALL " +
				"SELECT " +
				"PF.FREMD_PERSNR PID, " +
				"F.FALLNR, " +
				"FD.LOKALISATION, " +
				"FDA.HAUPTNEBEN, " +
				"OE.OEBENEKURZ, " +
				"FDA.FESTSTDATUM, " +
				"TO_CHAR(FDA.FESTSTDATUM, 'YYYYMMDDHH24MI') HL7FSDATUM, " +
				"FDA.SEKFREMDDIAGID FREMDDIAGID, " +	// Anpassung 08.03.2019, in Abstimmung mit Jochen Kamuf.
				"'SEK' AS TYP, " +
				"SEK.DIAGKURZ , " +
				"SEK.DIAGBEZ , " +
				"DT.HL7KURZ " +
				"FROM " + 
				"PERSON_FREMD PF, FALL F, " +
				"FALL_DIAGNOSEN FD, " +
				"DIAGNOSEN SEK, " +
				"FALL_DIAG_ARTEN FDA, " +
				"DIAGNOSETYP DT, " +
				"ORGAEBENE OE, " +
				"GESELLSCHAFT GE, PM_MANDANT PM " +
				"WHERE " +
				"F.PERSNR = PF.PERSNR AND " +
				"F.FALLID = FD.FALLID AND " +
				"F.MANDANTID = PM.PERSNR AND PM.KH_PERSNR = GE.PERSNR AND GE.G_KURZ = 'UKB' AND " + // keine MVZ Patienten
				"FD.FALL_DIAGNOSENID = FDA.FALL_DIAGNOSENID AND " +
				"FD.SEKDIAGNOSEID = SEK.DIAGNOSEID AND " +
				"SEK.DIAGTYPID = DT.DIAGTYPID AND  " +
				"FDA.OEBENEID = OE.OEBENEID(+) AND " +
				"FDA.STORNO_DATUM is null AND " +
				"(FDA.DIAGARTID = 5 OR (FDA.DIAGARTID = 10 AND FDA.FALL_FACHRICHTID is null) ) AND " + // station�re Entl. Diagnosen oder ambulante Beh.Diag.
				"PF.FREMD_PERSNR = ? " +
			") SUB ";

// logger.error(strSql);
result = dbConn.executeCachedQuery(strSql, paramList);
resultSize = result.size();
channelMap.put('vAnzahldatensaetze BAR', resultSize);		// zu Dokumentationszwecken.
	
while (result.next()) {


	var strHL7HN 		= result.getString(1);
	var strPID   		= result.getString(2);
	var strFALLNR		= result.getString(3); 
	var strLOKALISATION = result.getString(4); 
	var strOEBENEKURZ	= result.getString(5); 
	var strHL7FSDATUM	= result.getString(6); 
	var strFREMDDIAGID	= result.getString(7); 
	var strDIAGKURZ	= result.getString(8); 
	var strDIAGBEZ		= result.getString(9); 
	var strHL7KURZ		= result.getString(10);  // Katalog
	var strAbfragezeit	= result.getString(11);  // Abfragezeit auf KHV
	
	tmp['MSH']['MSH.7']['MSH.7.1']	=	strAbfragezeit;	// Date7Time of Message
	tmp['MSH']['MSH.10']['MSH.10.1'] 	= 	UUIDGenerator.getUUID();	// Message Control ID
	// EVN
	tmp['EVN']['EVN.2']['EVN.2.1']	= 	strAbfragezeit;	// Recorded Date/Time
	tmp['EVN']['EVN.3']['EVN.3.1']	=	strAbfragezeit;	// Planned Event Date/Time
	// PID
	tmp['PID']['PID.2']['PID.2.1']	=	strPID;	// PID
	tmp['PID']['PID.3']['PID.3.1']	=	strPID;	// PIDK
	// PV1
	tmp['PV1']['PV1.19']['PV1.19.1']	=	strFALLNR; 	// FALLNR
	// DG1
	tmp['DG1']['DG1.1']['DG1.1.1']	=	strFREMDDIAGID;	// DiagnoseID (ORBIS interne)
	tmp['DG1']['DG1.2']['DG1.2.1']	= 	strHL7KURZ;	// ICD10 Version (Jahr) ?
	tmp['DG1']['DG1.3']['DG1.3.1']	=    strDIAGKURZ;	// Diagnosis Code
	tmp['DG1']['DG1.3']['DG1.3.2']	= 	strDIAGBEZ;	// Diagnosis Description
	tmp['DG1']['DG1.3']['DG1.3.3']	= 	strHL7KURZ;
	tmp['DG1']['DG1.5']['DG1.5.1']	=	strHL7FSDATUM;	// FESTSTDATUM
	tmp['DG1']['DG1.6']['DG1.6.1']	= 	'EL';		// Diagniseart (nur EL)
	tmp['DG1']['DG1.11']['DG1.11.1']	=	strOEBENEKURZ;	// Fachabteilungszuordnung
	tmp['DG1']['DG1.15']['DG1.15.1']	=	strHL7HN;		// Diagnose Priority = Haupt/Nebendiagnose

	router.routeMessage('cCentraXX3BarTransformation', SerializerFactory.getSerializer('HL7V2').fromXML(tmp) );		// Weiterleiten an Sende-Channel
// logger.error(tmp);

}

dbConn.close();// Mit der Einwilligungs�bermittlung zu einem Patienten aus dem Biobankformular in ORBIS d�rfen zum Patienten (PID) alle
// bisherigen Labordaten an das Biobanksystem CentraXX nachgereicht werden.

// Parameter f�r die SQL Abfrage sind
// (1) PID

// Parameter, die an Centraxx �bermittelt werden sind:
// (1) Fallnummer
// (2) PID
// (3) Laborparameterk�rzel
// (4) Laborparameterbezeichnung
// (5) Laborwert
// (6) Laboreinheit
// (7) Referenzbereich
// (8) Validierer
// (9) Befundauftragsnummer (=Protokollnummer)
// (10) Befundungsdatum
// (11) Beobachtungsmethode (Observationmethode)


var paramList = new Packages.java.util.ArrayList();
paramList.add($('vPID'));

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');
// dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.54:1521:IKAS','orbis_rep','REPORTTEST');


var strSqlAuftragnr = "SELECT DISTINCT CW_LAB.PROTOKOLLNUMMER " +
				  "FROM " +
				  "FALL F, " +
				  "PERSON_FREMD PF, " +
				  "CW_LABORBEFUND CW_LAB, " +
				  "GESELLSCHAFT GE, PM_MANDANT PM " +
				  "WHERE " +
				  "F.FALLID = CW_LAB.FALLNUMMER AND " +
				  "F.PERSNR = PF.PERSNR AND " +
				  "F.MANDANTID = PM.PERSNR AND PM.KH_PERSNR = GE.PERSNR AND GE.G_KURZ = 'UKB' AND " +
				  "CW_LAB.ISTAKTUELLAUFTRAG = 1 AND " +
				  "SUBSTR(CW_LAB.PROTOKOLLNUMMER, -1) = 'K' AND " +
				  "PF.FREMD_PERSNR = ? ";

// logger.error(strSql);
result = dbConn.executeCachedQuery(strSqlAuftragnr, paramList);
resultSize = result.size();
channelMap.put('vAnzahldatensaetze Oru bzw. ORU Nachrichten aus Swisslab', resultSize);		// zu Dokumentationszwecken.

var strAuftragsnr		= '';
var paramListAuftrag = new Packages.java.util.ArrayList();

while (result.next()) {		// Wenn Auftragsnummern abgefragt wurden, dann lauf die Ergebnisliste zeilenweise durch...

	paramListAuftrag.clear();
	strAuftragsnr		= result.getString(1); 
	paramListAuftrag.add(strAuftragsnr);

	var strSqlORU ="SELECT  " + 		// Frage alle Untersuchungswerte zu einer Auftragsnummer ab...
			  	"F.FALLNR, " +
         			"PF.FREMD_PERSNR PID, " +
         			"T1_CW_LABORBEFUND.PROTOKOLLNUMMER, " +
		  		"T2_CW_LABORKATALOG.CODE,   " +
		     	"T3_CW_LABORKATALOGHISTORY.BEZEICHNUNG ,   " +
				"CASE WHEN T1_CW_LABORBEFUND.WERT IS NOT NULL THEN TRIM(TO_CHAR( (ROUND(T1_CW_LABORBEFUND.WERT, T1_CW_LABORBEFUND.ANZNACHKOMMA)), '9999999990.99' )) ELSE REPLACE(SUBSTR(T1_CW_LABORBEFUND.TEXT, 1, INSTR(T1_CW_LABORBEFUND.TEXT, CHR(13))), CHR(13), '') END AS WERT_HL7, " +
				"CASE WHEN T1_CW_LABORBEFUND.WERT IS NOT NULL THEN REPLACE(T1_CW_LABORBEFUND.TEXT, CHR(13), ' ## ') ELSE " + // Zeilenumbr�che ersetzen durch ##
				"	CASE WHEN REGEXP_COUNT(T1_CW_LABORBEFUND.TEXT, CHR(13)) = 0 THEN NULL ELSE REPLACE(SUBSTR(T1_CW_LABORBEFUND.TEXT, INSTR(T1_CW_LABORBEFUND.TEXT, CHR(13))), CHR(13), '') END " +
				"END AS KOMMENTAR, " +
      			"TO_CHAR(T1_CW_LABORBEFUND.BEFUNDDATUM, 'YYYYMMDDHH24MISS') BEFUNDDATUM,  " +
				"T1_CW_LABORBEFUND.EINHEIT, " +
         			"T1_CW_LABORBEFUND.NORMALWERTE, " +
         			"T1_CW_LABORBEFUND.OBSERVATIONMETHOD, " +
         			"T1_CW_LABORBEFUND.NORMALFLAG, " +
         			"TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') ABFRAGEZEIT " +
		    		"FROM   " +
        			"FALL F, " +
        			"PERSON_FREMD PF, " +
		    		"CW_LABORBEFUND T1_CW_LABORBEFUND, " +
		    		"CW_LABORKATALOG T2_CW_LABORKATALOG, " +
		    		"CW_LABORKATALOGHISTORY T3_CW_LABORKATALOGHISTORY   " +
		    		"WHERE   " +
        			"F.FALLID = T1_CW_LABORBEFUND.FALLNUMMER AND " +
        			"F.PERSNR = PF.PERSNR AND " +
		    		"T2_CW_LABORKATALOG.NUMMER = T1_CW_LABORBEFUND.BEFUNDNUMMER AND   " +
		    		"T3_CW_LABORKATALOGHISTORY.KATALOGNUMMER = T2_CW_LABORKATALOG.NUMMER AND   " +
		    		"T1_CW_LABORBEFUND.ISTAKTUELLAUFTRAG = 1 AND " +
		    		"T1_CW_LABORBEFUND.PROTOKOLLNUMMER = ? "
		    		"ORDER BY 2,1,3,4 ";

	// logger.error(strSql);
	resultORU = dbConn.executeCachedQuery(strSqlORU, paramListAuftrag);
	resultSizeORU = resultORU.size();

	var strFALLNR			= '';
	var strPID			= '';
	var strAuftragsnr		= '';
	var strCode			= '';
	var strCodeBezeichnung	= '';
	var strWERT_HL7		= '';
	var strKOMMENTAR		= '';
	var strWERT			= '';
	var strBefunddatum		= '';
	var strEinheit			= '';
	var strRefBereich		= '';
	var strObersvMetho		= '';
	var strAbfragezeit		= '';
	var strAnfKostenstelle	= '';
	
	// erster Anasatz: der Einfachkeit halber: eine Nachricht je Befundwert.
	var ersteZeile = true;
	// create new HL7 ORU template
	var hl7_tmp = tmp.copy();
	
	while (resultORU.next()) {
	
	strCode			= '';
	strCodeBezeichnung	= '';
	strWERT_HL7		= '';
	strKOMMENTAR		= '';
	strWERT			= '';
	strBefunddatum		= '';
	strEinheit		= '';
	strRefBereich		= '';
	strObersvMetho		= '';
	strAbfragezeit		= '';
	strAnfKostenstelle	= '';

	if(ersteZeile == true) {

		strFALLNR			= resultORU.getString(1); 
		strPID   			= resultORU.getString(2);
		strAuftragsnr		= resultORU.getString(3).replace('K', '');		// 18092123561326K -> Achtung, hier gibt es eine Abweichung zu Centraxx, das Postfix wird nicht mitgeliefert. 
															// CentraXX erh�lt die Swisslab Auftragsnummer.
		strBefunddatum		= resultORU.getString(8); 
		strAbfragezeit 	= resultORU.getString(13);  				// z.B. 20180924151807
		
		// MSH
		hl7_tmp['MSH']['MSH.7']['MSH.7.1']		=	strAbfragezeit;		// Date7Time of Message
		hl7_tmp['MSH']['MSH.10']['MSH.10.1'] 	= 	UUIDGenerator.getUUID();	// Message Control ID
	
		// PID
		hl7_tmp['PID']['PID.2']['PID.2.1']	=	strPID;	// PID
		hl7_tmp['PID']['PID.3']['PID.3.1']	=	strPID;	// PID
		
		// PV1
		hl7_tmp['PV1']['PV1.19']['PV1.19.1']	=	strFALLNR; 	// FALLNR
	
		// ORC
		hl7_tmp['ORC']['ORC.2']['ORC.2.1']	= 	strAuftragsnr;
		hl7_tmp['ORC']['ORC.9']['ORC.9.1']	= 	strBefunddatum;
		hl7_tmp['ORC']['ORC.12']['ORC.12.1']	=strAnfKostenstelle;

		ersteZeile = false;
		
	} 
	
		strCode			= resultORU.getString(4); 
		strCodeBezeichnung	= resultORU.getString(5); 					// Bezeichnung
		strWERT_HL7		= resultORU.getString(6); 
		strKOMMENTAR		= resultORU.getString(7); 					// z.B. ">70.00;Validierer: Hentschel"
		strBefunddatum		= resultORU.getString(8); 
		strEinheit		= resultORU.getString(9);  					// z.B. T/l
		strRefBereich		= resultORU.getString(10);  				// z.B. 4.3 - 5.75
		strObersvMetho		= resultORU.getString(11);  				// z.B. indirekte Potentiome
		strNormalflag  	= resultORU.getString(12);  				// z.B. 0 oder 1


		// Anlage eines OBR Segments
		var OBRCount = hl7_tmp['OBR'].length();		// Aktuelle Anzahl an OBR Segmenten in HL7 Nachricht
		createSegment(['OBR'], hl7_tmp, OBRCount);
	
		//	OBR
		hl7_tmp['OBR'][OBRCount]['OBR.1']['OBR.1.1']      =	OBRCount +1;
		hl7_tmp['OBR'][OBRCount]['OBR.2']['OBR.2.1']		= 	strAuftragsnr;
		hl7_tmp['OBR'][OBRCount]['OBR.7']['OBR.7.1']		= 	strBefunddatum;
		hl7_tmp['OBR'][OBRCount]['OBR.16']['OBR.16.1']	= 	strAnfKostenstelle;
		hl7_tmp['OBR'][OBRCount]['OBR.25']['OBR.25.1']	= 	'F';
		
		var OBXCount = hl7_tmp['OBX'].length();		// Aktuelle Anzahl an OBX Segmenten in HL7 Nachricht
		createSegment(['OBX'], hl7_tmp, OBXCount);
		
		//	OBX
		hl7_tmp['OBX'][OBRCount]['OBX.1']['OBX.1.1']		= OBXCount+1;
		hl7_tmp['OBX'][OBXCount]['OBX.2']['OBX.2.1']		= 'NM';			// Value Typ, zB. Numeric
		hl7_tmp['OBX'][OBXCount]['OBX.3']['OBX.3.1']		= strCode;		// Obersavtion Identifier, z.B. "K_NA"
		hl7_tmp['OBX'][OBXCount]['OBX.3']['OBX.3.2']		= strCodeBezeichnung; 	// Text
		// logger.error(strWERT_HL7 + ': ' + strTEXT_HL7);
		if(strWERT_HL7 	!= null) hl7_tmp['OBX'][OBXCount]['OBX.5']['OBX.5.1']		= strWERT_HL7; // wieder R�ckg�nge gemacht, nach Anf. von JK und BB .replace('.',',');	// CentraXX erwartet ein "," als Dezimaltrennzeichen, kein "."; i.Absprache mit B. Bayerer, Biobank
		if(strEinheit 		!= null) hl7_tmp['OBX'][OBXCount]['OBX.6']['OBX.6.1']		= strEinheit;
		if(strRefBereich 	!= null) hl7_tmp['OBX'][OBXCount]['OBX.7']['OBX.7.1']		= strRefBereich;
		hl7_tmp['OBX'][OBRCount]['OBX.11']['OBX.11.1']	= 'F';
		if(strObersvMetho 	!= null) hl7_tmp['OBX'][OBXCount]['OBX.17']['OBX.17.1']	= strObersvMetho;
		
		//	NTE
		if(strKOMMENTAR != null) {

			var NTECount = hl7_tmp['NTE'].length();		// Aktuelle Anzahl an OBX Segmenten in HL7 Nachricht
			createSegment(['NTE'], hl7_tmp, NTECount);	// Segment nur setzen, wenn wirklich ein Kommentar vorliegt;
			hl7_tmp['NTE'][NTECount]['NTE.1']['NTE.1.1']		=  NTECount + 1;
			hl7_tmp['NTE'][NTECount]['NTE.3']['NTE.3.1']		=  strKOMMENTAR;

		}

	}	// HL7 Nachricht fertiggestellt mit n OBR-OBX P�achen
	
	router.routeMessage('cCentraXX4Hl7Out', SerializerFactory.getSerializer('HL7V2').fromXML(hl7_tmp) );		// Weiterleiten an Sende-Channel
	// logger.error(tmp);
}

dbConn.close();// Mit der Einwilligungs�bermittlung zu einem Patienten aus dem Biobankformular in ORBIS d�rfen zum Patienten (PID) alle
// bisherigen Labordaten an das Biobanksystem CentraXX nachgereicht werden.

// Parameter f�r die SQL Abfrage sind
// (1) PID

// Parameter, die an Centraxx �bermittelt werden sind:
// (1) Fallnummer
// (2) PID
// (3) PathoPro Auftragsnummer
// (4) PathoPro Befundtext
// (5) PathoPro Auftragsdatum
// (6) PathoPro Befundatum



var paramList = new Packages.java.util.ArrayList();
paramList.add($('vPID'));
paramList.add($('vPID'));

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');
// dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.54:1521:IKAS','orbis_rep','REPORTTEST');

var strSql = 	"SELECT " +
			"MASTER2.ABFRAGEZEIT, " +
			"MASTER2.FORMULARID,  " +
			"MASTER2.PID, " +
			"MASTER2.FALLNR, " +
			"MASTER2.UEBERSCHRIFT, " +
			"MASTER2.BEFUNDSUB1,  " +
      		"MASTER2.BEFUNDSUB2,  " +
			"MASTER2.BEFUNDSUB3,  " +
			"MASTER2.AUFERT, " +
			"MASTER2.BEFERST, " +
			"MASTER2.AUFTRAGSNUMMER " +
			"FROM " +
			"( " +
			"SELECT " +
			"TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') ABFRAGEZEIT, " +
			"MASTER1.FORMULARID,  " +
			"MAX(MASTER1.PID) PID, " +
			"MAX(MASTER1.FALLNR) FALLNR, " +
			"MAX(MASTER1.UEBERSCHRIFT) UEBERSCHRIFT, " +
			"MAX(MASTER1.BEFUNDSUB1) BEFUNDSUB1, " +
			"MAX(MASTER1.BEFUNDSUB2) BEFUNDSUB2, " +
			"MAX(MASTER1.BEFUNDSUB3) BEFUNDSUB3, " +
			"TO_CHAR(MAX(MASTER1.AUFERT), 'YYYYMMDDHH24MISS') AUFERT,  " +
			"TO_CHAR(MAX(MASTER1.BEFERST),'YYYYMMDDHH24MISS') BEFERST, " +
			"MAX(MASTER1.Auftragsnummer) Auftragsnummer " +
			"FROM " +
			"( " +
			"	SELECT  " +
			"	SUBFRMBEF.PID, " +
			"	SUBFRMBEF.FALLNR, " +
			"	SUBFRMBEF.BEZEICHNUNG, " +
			"	SUBFRMBEF.FORMULARID, " +
			"	CASE WHEN SUBFRMBEF.CODE =  '�berschrift'       THEN TO_CHAR(SUBFRMBEF.TEXT) ELSE NULL END AS UEBERSCHRIFT, " +
			"	CASE WHEN SUBFRMBEF.CODE =  'BefundSub'         THEN SUBFRMBEFTXT.LT1 ELSE NULL END AS BEFUNDSUB1, " +
			"	CASE WHEN SUBFRMBEF.CODE =  'BefundSub'         THEN SUBFRMBEFTXT.LT2 ELSE NULL END AS BEFUNDSUB2, " +
			"	CASE WHEN SUBFRMBEF.CODE =  'BefundSub'         THEN SUBFRMBEFTXT.LT3 ELSE NULL END AS BEFUNDSUB3, " + 
			"	CASE WHEN SUBFRMBEF.CODE =  'AufErt'            THEN SUBFRMBEF.DATUM ELSE NULL END AS AUFERT, " +
			"	CASE WHEN SUBFRMBEF.CODE =  'BefErst'           THEN SUBFRMBEF.DATUM ELSE NULL END AS BEFERST, " +
			"	CASE WHEN SUBFRMBEF.CODE =  'Auftragsnummer'    THEN TO_CHAR(SUBFRMBEF.TEXT) ELSE NULL END AS Auftragsnummer " +
			"	FROM " +
			"	(   	SELECT    " +
    			"		PF.FREMD_PERSNR PID, " +
    			"		F.FALLNR, " +
    			"		KL.BEZEICHNUNG, " +
    			"		FCOD.CODE, " +
    			"		PR.PRIMITIVUMNUMMER FORMULARID,  " +
    			"		TO_DATE(TO_CHAR(FDAT.DATUM, 'YYYYMMDD') || TO_CHAR(FDAT.ZEIT, 'HH24MISS'), 'YYYYMMDDHH24MISS') AS DATUM, " +
    			"		FTXT.TEXT, " +
    			"		FDAT.KATALOG, " +
    			"		TO_CHAR(PR.MEDDATE, 'DD.MM.YYYY') MEDDAT " +
    			"		FROM CW_PRIMITIVUM PR " +
    			"		INNER JOIN CW_FELDDATEN FDAT     ON FDAT.PRIMITIVUMNUMMER = PR.PRIMITIVUMNUMMER " +
    			"		LEFT OUTER JOIN CW_FELDTEXT FTXT    ON FTXT.NUMMER = FDAT.FELDTEXT " +
			"		INNER JOIN OS_CW.CW_KLASSENVERSION ON OS_CW.CW_KLASSENVERSION.KLASSE  = PR.KLASSE AND OS_CW.CW_KLASSENVERSION.NUMMER = PR.KLASSENVERSION  " +
			"		INNER JOIN CW_KLASSE KL ON KL.NUMMER = OS_CW.CW_KLASSENVERSION.KLASSE " +
			"		INNER JOIN CW_FELDCODE FCOD ON FDAT.FELDDEFINITION    = FCOD.NUMMER " +
			"		LEFT JOIN FALL F ON PR.FALL = F.FALLID " +
			"		LEFT JOIN NATPERSON NAT ON F.PERSNR = NAT.PERSNR " +
			"		LEFT JOIN PM_MANDANT PM ON F.MANDANTID = PM.PERSNR " +
			"		LEFT JOIN GESELLSCHAFT GE ON PM.KH_PERSNR = GE.PERSNR " +
			"		LEFT JOIN PERSON_FREMD PF ON F.PERSNR = PF.PERSNR " +
			"		WHERE  " +
			"		1=1 " +
			"		AND KL.BEZEICHNUNG = 'SSST HL7Befund' " +
			"		AND FCOD.CODE in ('BefundSub', 'Befundtext', 'AnforderndeKG', 'Auftragsnummer', 'ImportDatum', 'AufErt', 'BefErst', '�berschrift', 'ExtraVerweisText') " +
          	// "		AND F.FALLNR = '1054378' " +
          	"		AND PF.FREMD_PERSNR = ? " +
			"		AND F.STORNO_DATUM IS NULL  " +
			"		AND F.KENNZEICHEN NOT IN (2,5,10)  " +
			"		AND GE.G_KURZ = 'UKB' " +
			"	) SUBFRMBEF, " +
			"	( 	SELECT    " +
          	"		PR.PRIMITIVUMNUMMER FORMULARID,  " +
          	"		CW_REMOVEFORMATINFO(OS_CW.GETFELDMEMO (FDAT.FELDMEMO,8))    AS LT1, " +
          	"		CW_REMOVEFORMATINFO(OS_CW.GETFELDMEMO (FDAT.FELDMEMO,4008)) AS LT2, " +
          	"		CW_REMOVEFORMATINFO(OS_CW.GETFELDMEMO (FDAT.FELDMEMO,8008)) AS LT3  " +
          	"		FROM CW_PRIMITIVUM PR " +
          	"		INNER JOIN CW_FELDDATEN FDAT	ON FDAT.PRIMITIVUMNUMMER = PR.PRIMITIVUMNUMMER " +
          	"		LEFT OUTER JOIN CW_FELDTEXT FTXT ON FTXT.NUMMER = FDAT.FELDTEXT " +
          	"		INNER JOIN OS_CW.CW_KLASSENVERSION ON OS_CW.CW_KLASSENVERSION.KLASSE  = PR.KLASSE AND OS_CW.CW_KLASSENVERSION.NUMMER = PR.KLASSENVERSION " +
          	"		INNER JOIN CW_KLASSE KL  ON KL.NUMMER = OS_CW.CW_KLASSENVERSION.KLASSE " +
          	"		INNER JOIN CW_FELDCODE FCOD  ON FDAT.FELDDEFINITION    = FCOD.NUMMER " +
          	"		LEFT JOIN FALL F  ON PR.FALL = F.FALLID " +
          	"		LEFT JOIN NATPERSON NAT  ON F.PERSNR = NAT.PERSNR " +
          	"		LEFT JOIN PM_MANDANT PM  ON F.MANDANTID = PM.PERSNR " +
          	"		LEFT JOIN GESELLSCHAFT GE ON PM.KH_PERSNR = GE.PERSNR " +
          	"		LEFT JOIN PERSON_FREMD PF ON F.PERSNR = PF.PERSNR " +
          	"		WHERE  " +
          	"		1=1 " +
          	"		AND KL.BEZEICHNUNG IN ('HL7BT BefundText Sub') AND FCOD.CODE IN ('Befundtext') " +
          	// "		AND F.FALLNR = '1054378' " +
          	"		AND PF.FREMD_PERSNR = ? " +
          	"		AND F.STORNO_DATUM IS NULL AND F.KENNZEICHEN NOT IN (2,5,10) AND GE.G_KURZ = 'UKB' " +
			"	) SUBFRMBEFTXT " +
			"WHERE " +
			"SUBFRMBEF.KATALOG = SUBFRMBEFTXT.FORMULARID(+) AND " +
			"ROWNUM <= 1000 " +
			"ORDER BY SUBFRMBEF.FORMULARID, SUBFRMBEF.CODE " +
			") MASTER1 " +
			"GROUP BY MASTER1.FORMULARID " +
			"ORDER BY MAX(MASTER1.AUFERT)" +
			") MASTER2 " +
			"WHERE " +
			"MASTER2.UEBERSCHRIFT in ('Feingewebliche Untersuchung', 'Textbefund : Feingewebliche Untersuchung', 'Dermatohistopathologischer Befund', 'Textbefund : Dermatohistopathologischer Befund')";

// logger.error(strSql);
result = dbConn.executeCachedQuery(strSql, paramList);
resultSize = result.size();
channelMap.put('vAnzahldatensaetze Oru Swisslab', resultSize);		// zu Dokumentationszwecken.

// erster Ansatz: der Einfachkeit halber: eine Nachricht je Befundwert.
while (result.next()) {

	// create new HL7 ORU template
	var hl7_tmp = tmp.copy();

	// initialize variables
	var strAbfragezeit		= '';
	var strFormularID		= '';
	var strPID			= '';
	var strFALLNR			= '';
	var strUeberschrift		= '';
	var strBefundtext_1		= '';
	var strBefundtext_2		= '';
	var strBefundtext_3		= '';
	var strAuftragsdatum	= '';
	var strBefunddatum		= '';
	var strAuftragsnr		= '';

	// assign values to variables
	
	strAbfragezeit		= result.getString(1);  				// z.B. 20180924151807
	strFormularID		= '';	
	strPID			= result.getString(3); 
	strFALLNR   		= result.getString(4);
	strUeberschrift	= result.getString(5);
	strBefundtext_1	= result.getString(6); 
	strBefundtext_2	= result.getString(7); 				// Bezeichnung
	strBefundtext_3	= result.getString(8); 						// z.B. ">70.00;Validierer: Hentschel"
	strAuftragsdatum	= result.getString(9); 
	strBefunddatum		= result.getString(10);
	strAuftragsnr		= result.getString(11); 

	
	hl7_tmp['MSH']['MSH.7']['MSH.7.1']		=	strAbfragezeit;		// Date7Time of Message
	hl7_tmp['MSH']['MSH.10']['MSH.10.1'] 	= 	UUIDGenerator.getUUID();	// Message Control ID

	// PID
	hl7_tmp['PID']['PID.2']['PID.2.1']		=	strPID;	// PID
	hl7_tmp['PID']['PID.3']['PID.3.1']		=	strPID;	// PID
	// PV1
	hl7_tmp['PV1']['PV1.19']['PV1.19.1']	=	strFALLNR; 	// FALLNR
	// ORC
	hl7_tmp['ORC']['ORC.2']['ORC.2.1']		=	strAuftragsnr;		// Anpassung 08.03.2019, in Absprache mit Jochen Kamuf, IMBIE
	hl7_tmp['ORC']['ORC.3']['ORC.3.1']		= 	strAuftragsnr;
	hl7_tmp['ORC']['ORC.15']['ORC.15.1']	= 	strAuftragsdatum;
	//	OBR
	hl7_tmp['OBR']['OBR.2']['OBR.2.1']		= 	strAuftragsnr;		// Anpassung 08.03.2019, in Absprache mit Jochen Kamuf, IMBIE
	hl7_tmp['OBR']['OBR.3']['OBR.3.1']		= 	strAuftragsnr;
	hl7_tmp['OBR']['OBR.4']['OBR.4.2']		= 	strUeberschrift;
	hl7_tmp['OBR']['OBR.6']['OBR.6.1']		= 	strAuftragsdatum;		// Date of request
	hl7_tmp['OBR']['OBR.7']['OBR.7.1']		= 	strBefunddatum;		// Date of observation

	//	OBX
	if (strBefundtext_2 == null) {strBefundtext_2 = '' } else (strBefundtext_2 = strBefundtext_2.replace('\n', '').replace('\r', '\\.br\\'));
	if (strBefundtext_3 == null) {strBefundtext_3 = '' } else (strBefundtext_3 = strBefundtext_3.replace('\n', '').replace('\r', '\\.br\\'));;

	hl7_tmp['OBX']['OBX.5']['OBX.5.1']		= 	strBefundtext_1.replace( '\n', '').replace('\r', '\\.br\\') + 
										strBefundtext_2 + 
										strBefundtext_3;	

	router.routeMessage('cCentraXX4Hl7Out', SerializerFactory.getSerializer('HL7V2').fromXML(hl7_tmp) );		// Weiterleiten an Sende-Channel
	// logger.error(tmp);
}

dbConn.close();delete msg['OBX'][1];	// zweites OBX Segement l�schen// ersetzen von Punkt durch Komma; CentraXX ben�tigt ein Komma als Dezimaltrenner.

/*
for each (seg in msg.children()) {
	
	if (seg.name().toString() == "OBX") {

		seg['OBX.5']['OBX.5.1'] = seg['OBX.5']['OBX.5.1'].toString().replace('.',',');

	}
}
*/// Anhand des Einwilligungsdatums aus dem ORBIS Biobank Einwilliungsformulars wird die zeitliche Abgrenzung
// vorgenommen, f�r die �bermittlung von Diagnosedaten zum Patienten.
// D.h. alle Diagnosen und Prozeduren, die in ORBIS hinterlegt wurden mit einem Erfassungsdatums gr��er, gleich dem Einwillungsdatum
// werden einmalig abgefragt und �bermittelt.

// Parameter f�r die SQL Abfrage sind
// (1) Einwilligungsdatum
// (2) PID

// Parameter, die an Centraxx �bermittelt werden sind:
// (1) Fallnummer
// (2) ICD bzw. OPS Code
// (3) ICD bzw. OPS Langtext
// (4) ICD bzw. OPS Orbis-ID (intern)
// (5) ICD bzw. OPS Feststelldatum (Erfassungsdatum)
// (6) Ggf. Lokalisationsangaben, entf�llt bei OPS
// (7) ICD bzw. OPS Katalogjahr

var paramList = new Packages.java.util.ArrayList();
paramList.add($('vPID'));


var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');
// dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.54:1521:IKAS','orbis_rep','REPORTTEST');


var strSql = 	"SELECT " +
			"F.FALLNR, " +						// Spalte 1
			"PF.FREMD_PERSNR PID, " +			// Spalte 2
			"FI.FALLICPMID, " +					// Spalte 3
			"IV.HL7KURZ, " +					// Spalte 4 (OPS Katalog/Jahr)
			"I.ICPM, " +						// Spalte 5
			"I.ICPMTEXT, " +					// Spalte 6
			"OE_FACH.OEBENEKURZ, " +				// Spalte 7
			"TO_CHAR(FI.DURCHF_DATUM, 'YYYYMMDDHH24MI') HL7FSDATUM, " +	// Spalte 8
			"FI.OPHAUPTICPM, " + 	// -- PR1.9					// Spalte 9
			"FI.FALLHAUPTICPM, " + 	// -- PR1.14					// Spalte 10
			"TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') ABFRAGEZEIT " +		// Spalte 11
			"FROM " +
			"FALL F, " +
			"FALL_ICPM FI, " +
			"ICPM I, " +
			"ICPM_VER IV, " +
			"PERSON_FREMD PF, " +
			"ORGAEBENE OE_FACH, " +
			"GESELLSCHAFT GE, PM_MANDANT PM " +
			"WHERE " +
			"F.FALLID = FI.FALLID AND " +
			"F.PERSNR = PF.PERSNR AND " +
			"FI.ICPMID = I.ICPMID AND " +
			"FI.OEBENEID = OE_FACH.OEBENEID AND " +
			"I.ICPMVERID = IV.ICPMVERID AND " +
			"FI.STORNO_DATUM IS NULL AND " +
			"F.MANDANTID = PM.PERSNR AND PM.KH_PERSNR = GE.PERSNR AND GE.G_KURZ = 'UKB' AND " +
			"PF.FREMD_PERSNR =  ? ";

// logger.error(strSql);
result = dbConn.executeCachedQuery(strSql, paramList);
resultSize = result.size();
channelMap.put('vAnzahldatensaetze BAR', resultSize);		// zu Dokumentationszwecken.
	
while (result.next()) {

	var strFALLNR		= result.getString(1); 
	var strPID   		= result.getString(2);
	var strFREMDOPSID	= result.getString(3); 
	var strHL7KURZ		= result.getString(4);  // Katalog
	var strOPSKURZ		= result.getString(5); 
	var strOPSBEZ		= result.getString(6); 
	var strOEBENEKURZ	= result.getString(7); // Klinik- bzw. Ambulanzk�rzel �ber die der OPS Code erfasst wurde
	var strHL7FSDATUM	= result.getString(8); 
	var strOPSHAUPT	= result.getString(9); 
	var strOPSFALLHAUPT	= result.getString(10); 
	var strAbfragezeit	= result.getString(11);  // Abfragezeit auf KHV
	
	tmp['MSH']['MSH.7']['MSH.7.1']	=	strAbfragezeit;	// Date7Time of Message
	tmp['MSH']['MSH.10']['MSH.10.1'] 	= 	UUIDGenerator.getUUID();	// Message Control ID
	// EVN
	tmp['EVN']['EVN.2']['EVN.2.1']	= 	strAbfragezeit;	// Recorded Date/Time
	tmp['EVN']['EVN.3']['EVN.3.1']	=	strAbfragezeit;	// Planned Event Date/Time
	// PID
	tmp['PID']['PID.2']['PID.2.1']	=	strPID;			// PID
	tmp['PID']['PID.3']['PID.3.1']	=	strPID;			// PIDK
	// PV1
	tmp['PV1']['PV1.19']['PV1.19.1']	=	strFALLNR; 		// FALLNR
	// PR1
	tmp['PR1']['PR1.1']['PR1.1.1']	=	strFREMDOPSID;		// ProzedurenID (ORBIS interne)
	tmp['PR1']['PR1.2']['PR1.2.1']	= 	strHL7KURZ;		// OPS Version (Jahr) ?
	tmp['PR1']['PR1.3']['PR1.3.1']	=    strOPSKURZ;		// Procedure Code
	tmp['PR1']['PR1.3']['PR1.3.2']	= 	strOPSBEZ;		// Procedure Text
	tmp['PR1']['PR1.3']['PR1.3.3']	= 	strHL7KURZ;
	tmp['PR1']['PR1.5']['PR1.5.1']	=	strHL7FSDATUM;		// Erfassungsdatum
	tmp['PR1']['PR1.8']['PR1.8.1']	=	strOEBENEKURZ;		// Fachabteilungszuordnung
	tmp['PR1']['PR1.9']['PR1.9.1']	= 	strOPSHAUPT;		// OPS Hauptkennzeichen
	tmp['PR1']['PR1.14']['PR1.14.1']	= 	strOPSFALLHAUPT;	// OPS Hauptfallkennzeichen

	router.routeMessage('cCentraXX3BarTransformation', SerializerFactory.getSerializer('HL7V2').fromXML(tmp) );		// Weiterleiten an Sende-Channel
// logger.error(tmp);

}

dbConn.close();// Wichtig im Outbound template muss der Wert des OBX.2 (Value Typ) auf "FT" (formatted Text) gesetzt sein,
// damit CentraXX die \.br\-Zeichenfolge als Zeilenumbruch richtig imterpretiert.

tmp['MSH'] = msg['MSH'].copy();
tmp['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString();
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString();
tmp['OBR'] = msg['OBR'].copy();

var strBefundtext = '';
var bolSUIDflag = false;
var strObservationDate = msg['OBX'][0]['OBX.14']['OBX.14.1'].toString();

for each (seg in msg.children()) {
	
	if (seg.name().toString() == "OBX") {
		if (seg['OBX.3']['OBX.3.2'].toString() == 'SR Instance UID') {
				bolSUIDflag = true;	// Annahme: es gibt nur eine SUID je Befund, d.h. nur ein Segment mit diesem Label
				var strSUID = seg['OBX.5']['OBX.5.1'].toString();
		}
		
		strBefundtext += seg['OBX.5']['OBX.5.1'].toString() + '\\.br\\';
	}
}

tmp['OBX']['OBX.5']['OBX.5.1'] = strBefundtext;	// willk�rlich gew�hltes obx segment mit Uhrzeit
tmp['OBX']['OBX.14']['OBX.14.1'] = strObservationDate;
		
// wenn es eine SUID gibt, dann soll diese in das OBT im zweiten OBX Segement geschrieben werden.
if (bolSUIDflag == true) {

		var OBXCount = tmp['OBX'].length();
		createSegment(['OBX'], tmp, OBXCount)
		tmp['OBX'][OBXCount]['OBX.1']['OBX.1.1'] 	= OBXCount + 1;
		tmp['OBX'][OBXCount]['OBX.2']['OBX.2.1'] 	= 'FT';
		tmp['OBX'][OBXCount]['OBX.3']['OBX.3.1'] 	= 'SUID';
		tmp['OBX'][OBXCount]['OBX.5']['OBX.5.1'] 	= strSUID;
		tmp['OBX'][OBXCount]['OBX.14']['OBX.14.1'] 	= strObservationDate;
}

// OBX|1|TX|SUID|1|1.2.276.0.24.0.5.0.1406260074.3.1.1146860074.978730||||||F|||20171019115013||// Einlesen des PV1.19 Feldinhalts = FALLNR des ORBIS Patienten.
// Ggf. abpr�fen mit anderen Felder.



// Ausf�hren einer SQL Abfrage auf die KHV.

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');

//Create a SQL Statement to be executed

var strQRYFALLNR = msg['QRD']['QRD.8']['QRD.8.1'].toString();
// Ausgeschaltet am 28.01.2015, PK
//logger.error("FALLNR : " + strQRYFALLNR);

var sqlStr ="\
SELECT \
F.FALLNR, 	\
NAT.NAME,	\
NAT.VORNAME, \
TO_CHAR(NAT.GEBDAT,'YYYYMMDD') GEBDAT,	\
NAT.GESCHLECHT, \
PF.FREMD_PERSNR PID,	\
TO_CHAR(SYSDATE, 'YYYYMMDDhh24miss') ABFRAGEZEIT \
FROM \
FALL F,	\
NATPERSON NAT,	\
PERSON_FREMD PF	\
WHERE	\
F.PERSNR = NAT.PERSNR  AND	\
NAT.PERSNR = PF.PERSNR AND	\
F.STORNO_DATUM IS NULL AND	\
F.FALLNR = '" + strQRYFALLNR + "'";

// Ausgeschaltet am 28.01.2015, PK
// logger.error("SQL String" + sqlStr);

// Execute SQL Statement and save them as results

var results = dbConn.executeCachedQuery(sqlStr);

var resultSize = results.size();


// Aufbereiten des Resultsets. // hier nur eine Ergebniszeile durch Abfrage.
if(resultSize>0){

	for(var i = 0;i<resultSize;i++){

		results.next();

	var strFALLNR 		= results.getString(1); 
	var strNAME 		= results.getString(2); 
	var strVORNAME 		= results.getString(3); 
	var strGEBDAT 		= results.getString(4); 
	var strGESCHLECHT 	= results.getString(5); 
	var strPID 			= results.getString(6); 
	var strSYSDATE		= results.getString(7); 

	}
}

// Kopieren der Resultsetdaten in das OMT.

// MSH
// MSH.7.1 Date/Time of Message = Abfragezeit der SQL Abfrage
tmp['MSH']['MSH.7']['MSH.7.1'] = strSYSDATE;

// MSA
// MSA.2.1 Message Control ID (= Msg ID der Anfragenachricht)
tmp['MSA']['MSA.2']['MSA.2.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

// QRD
// R�ck�bermittlung des eingegangenen QRD Segments.
tmp['QRD'] = msg['QRD'].copy();

// PID
// PID.2.1 External ID Number
tmp['PID']['PID.2']['PID.2.1'] = strPID;
// PID.3.1 Internal ID Number
tmp['PID']['PID.3']['PID.3.1'] = strPID;
// PID.5.1 Family Name
tmp['PID']['PID.5']['PID.5.1'] = strNAME;
// PID.5.2 Given Name
tmp['PID']['PID.5']['PID.5.2'] = strVORNAME;
// PID.7.1 Date of Birth
tmp['PID']['PID.7']['PID.7.1'] = strGEBDAT;
// PID.8.1 Sex
if (strGESCHLECHT == 'W') strGESCHLECHT = 'F'; 
tmp['PID']['PID.8']['PID.8.1'] = strGESCHLECHT;

// PV1
// PV1.19 Fallnummer
tmp['PV1']['PV1.19']['PV1.19.1'] = strQRYFALLNR;

// Schliessen der Connection.

dbConn.close();


// Erstellen der AckMessage.
var ackMessage = SerializerFactory.getSerializer('HL7V2').fromXML(tmp);

// F�llen der Antwortvariablen (ResponseMap f�r Source ACK).
// responseMap.put("customResponse", ResponseFactory.getSuccessResponse(ackMessage));
// Austausch der Funktion gemaess MIRTH Empfehlung, PK, 02.06.2015.

responseMap.put("customResponse", ResponseFactory.getSentResponse(ackMessage));

// L�schen der Abfrageergebnisvariablen.
results = "";//Setup MSH
//logger.debug("Starting Transformer");
tmp['MSH']['MSH.3']['MSH.3.1'] 	= 'ORBIS-LSTM';
tmp['MSH']['MSH.4']['MSH.4.1'] 	= 'LSTM';
tmp['MSH']['MSH.5']['MSH.5.1'] 	= "KKA";
tmp['MSH']['MSH.6']['MSH.6.1'] 	= "KHV";
tmp['MSH']['MSH.7']['MSH.7.1'] 	= DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['MSH']['MSH.9']['MSH.9.1'] 	= "ORM";
tmp['MSH']['MSH.9']['MSH.9.2'] 	= "O01";
tmp['MSH']['MSH.10']['MSH.10.1'] 	= connectorMessage.getMessageId();
tmp['MSH']['MSH.11']['MSH.11.1'] 	= "P";
tmp['MSH']['MSH.12']['MSH.12.1'] 	= "2.3";
tmp['MSH']['MSH.15']['MSH.15.1'] 	= "AL";

//setup PID
tmp['PID']['PID.1']['PID.1.1'] 	= "1";
tmp['PID']['PID.3']['PID.3.1'] 	= $('strPID');
tmp['PID']['PID.4']['PID.4.1']	= $('strPID');
tmp['PID']['PID.5']['PID.5.1'] 	= $('strName');
tmp['PID']['PID.5']['PID.5.2'] 	= $('strVorname');
if ($('strDOB')!="") tmp['PID']['PID.7']['PID.7.1'] = $('strDOB');
tmp['PID']['PID.8']['PID.8.1'] 	= $('strGeschlecht');

//setup PV1
tmp['PV1']['PV1.1']['PV1.1.1'] 	= "1";
tmp['PV1']['PV1.2']['PV1.2.1'] 	= "O";
tmp['PV1']['PV1.19']['PV1.19.1'] 	= $('strFallNummer');
tmp['PV1']['PV1.44']['PV1.44.1'] = $('strAufnahme'); // Aufnahmedatum in FHIR Nachricht verf�gbar? JA JJJJMMDD
tmp['PV1']['PV1.50']['PV1.50.1'] 	= $('strAnforderungsUID');

// setup ORC
tmp['ORC']['ORC.1']['ORC.1.1'] 	= "NW";
tmp['ORC']['ORC.2']['ORC.2.1'] 	= $('strAnforderungsUID');
tmp['ORC']['ORC.3']['ORC.3.1'] 	= $('strAnforderungsUID');
tmp['ORC']['ORC.9']['ORC.9.1'] = $('strErstellDatum'); //Date of Transaction 20200429113509
tmp['ORC']['ORC.10']['ORC.10.1'] = $('strAnfordererKennung'); // Orbis Nutzerk�rzel, Z.B.: BARCEDOZP 
tmp['ORC']['ORC.10']['ORC.10.2'] = $('strAnfordererNachname');//Name des Anforderers
tmp['ORC']['ORC.10']['ORC.10.3'] = $('strAnfordererVorname');//Vorname des Anforderers
tmp['ORC']['ORC.12']['ORC.12.1'] = $('strAnfordererKennung'); // Orbis Nutzerk�rzel, Z.B.: BARCEDOZP
tmp['ORC']['ORC.12']['ORC.12.2'] = $('strAnfordererNachname');//Name des Anforderers
tmp['ORC']['ORC.12']['ORC.12.3'] = $('strAnfordererVorname');//Vorname des Anforderers
tmp['ORC']['ORC.17']['ORC.17.5'] = $('strAnfordererAbteilungText');

// setup OBR
tmp['OBR']['OBR.1']['OBR.1.1'] 	= "1";
tmp['OBR']['OBR.2']['OBR.2.1'] 	= $('strAnforderungsUID');
tmp['OBR']['OBR.3']['OBR.3.1'] 	= $('strAnforderungsUID');
tmp['OBR']['OBR.4']['OBR.4.1'] 	= 'KINDERKARDIO-NOTANFORDERUNG';
tmp['OBR']['OBR.4']['OBR.4.2'] 	= 'KKA Notfallanforderung';
tmp['OBR']['OBR.4']['OBR.4.3'] 	= 'KKA Notfallanforderung';
tmp['OBR']['OBR.4']['OBR.4.5'] 	= 'NOTANF';
tmp['OBR']['OBR.16']['OBR.16.1'] = $('strAnfordererKennung'); // Orbis Nutzerk�rzel, Z.B.: BARCEDOZP
tmp['OBR']['OBR.16']['OBR.16.2'] = $('strAnfordererNachname')//Name des Anforderers
tmp['OBR']['OBR.16']['OBR.16.3'] = $('strAnfordererVorname')//Vorname des Anforderers
tmp['OBR']['OBR.22']['OBR.22.1'] = $('strErstellDatum'); //Date of Transaction 20200429113509 gleich wie ORC.9
tmp['OBR']['OBR.24']['OBR.24.1']	= 'NOTANF';
tmp['OBR']['OBR.25']['OBR.25.1'] 	= 'S';
tmp['OBR']['OBR.36']['OBR.36.1'] = $('strErstellDatum'); //Date of Transaction 20200429113509 gleich wie ORC.9

// logger.info("cCustoMedFhir2Hl7Orm | " + tmp);if (msg['PV1']['PV1.8']['PV1.8.2'].toString().indexOf("Dermatologie") != -1){
	msg['OBR']['OBR.2']='';
}// Ziel ist es aus der ORU Nachricht mit dem OBX[1] (zweites OBX Segment) 
// eine MDM Nachricht zu erzeugen, die erfolgreich von ORBIS/JAIF verarbeitet
// werden kann.

// Beispiel-(Ziel-)Nachricht:
/*
MSH|^~\&|PAT|PAT|ORBIS|JAIF|||MDM^T01|0288740||2.5
EVN|T01|20150715155200|20150715110300 EVN-2 = OBR-8 EVN-3 = OBR-7
PID||0|6129361|||Telohe^Karin||19560925|
PV1||I|||||||||||||||||9167020|
TXA|1|Pathologiebefund|PDF|||||20150715155200||||0288740^PATHOPRO||||DM2015001585.pdf| 
TXA.8 = OBR-8 , TXA.12.1 = ORC.2 (besser), TXA.16 = OBX[1].5.1
*/

// MSH
tmp['MSH']['MSH.7']['MSH.7.1']	= msg['MSH']['MSH.7']['MSH.7.1'].toString();
tmp['MSH']['MSH.10']['MSH.10.1'] 	= msg['MSH']['MSH.10']['MSH.10.1'].toString();

// EVN
tmp['EVN']['EVN.2']['EVN.2.1']	= msg['OBR']['OBR.8']['OBR.8.1'].toString();
tmp['EVN']['EVN.3']['EVN.3.1']	= msg['OBR']['OBR.7']['OBR.7.1'].toString();

// PID
tmp['PID']['PID.1']['PID.1.1'] 	= '1';
tmp['PID']['PID.2']['PID.2.1']	= msg['PID']['PID.3']['PID.3.1'].toString();
tmp['PID']['PID.3']['PID.3.1']  	= msg['PID']['PID.3']['PID.3.1'].toString();
tmp['PID']['PID.3']['PID.3.1']	= msg['PID']['PID.3']['PID.3.1'].toString();
tmp['PID']['PID.6']['PID.6.1']	= msg['PID']['PID.6']['PID.6.1'].toString();
tmp['PID']['PID.6']['PID.6.2']	= msg['PID']['PID.6']['PID.6.2'].toString();

// PV1
tmp['PV1']['PV1.19']['PV1.19.1']	= msg['PV1']['PV1.19']['PV1.19.1'].toString();

// TXA
tmp['TXA']['TXA.2']['TXA.2.1']	= msg['OBR']['OBR.4']['OBR.4.2'].toString();		// Document Typ = hier Leistungsbezeichnung, z.B. Ergometrie-, Spiroergomietrie-Befund
tmp['TXA']['TXA.8']['TXA.8.1']	= msg['OBR']['OBR.7']['OBR.7.1'].toString();		// Edit Date/Time (Befundzeit) = hier Observation Date/Time
tmp['TXA']['TXA.12']['TXA.12.1']	= msg['ORC']['ORC.2']['ORC.2.1'].toString();		// unique document number
tmp['TXA']['TXA.12']['TXA.12.2']	= 'CUSTOMED';								// namespace ID
tmp['TXA']['TXA.13']['TXA.13.1']   = msg['OBR']['OBR.2']['OBR.2.1'].toString();		// parent document number (�bergeordnete Auftragsnummer) gibt es nicht

// Zuweisung des im Source-Transformer erstellten Dateinamens (ohne Pfad, da dieser fest im JIAF ukb494 hinterlegt ist)
tmp['TXA']['TXA.16']['TXA.16.1'] = $('vPathToJaifukb1488') + $('vAttachmentFileName');// unique document file name// MSH
tmp['MSH']['MSH.7']['MSH.7.1']	= msg['MSH']['MSH.7']['MSH.7.1'].toString();
tmp['MSH']['MSH.10']['MSH.10.1'] 	= msg['MSH']['MSH.10']['MSH.10.1'].toString();

// Als Acknowledge Typ wird "AL" (show always) hinterlegt im MSH-16
// https://www.hl7.org/documentcenter/public_temp_01133A0F-1C23-BA17-0C540196E606408E/wg/conf/HL7MSH.htm

// PID
tmp['PID']['PID.1']['PID.1.1'] 	= '1';
tmp['PID']['PID.2']['PID.2.1']	= msg['PID']['PID.3']['PID.3.1'].toString();
tmp['PID']['PID.3']['PID.3.1']  	= msg['PID']['PID.3']['PID.3.1'].toString();		// PID
tmp['PID']['PID.3']['PID.3.1']	= msg['PID']['PID.3']['PID.3.1'].toString();		// PID
tmp['PID']['PID.5']['PID.5.1']	= msg['PID']['PID.5']['PID.5.1'].toString();		// Nachname
tmp['PID']['PID.5']['PID.5.2']	= msg['PID']['PID.5']['PID.5.2'].toString();		// Vorname
tmp['PID']['PID.7']['PID.7.1']	= msg['PID']['PID.7']['PID.7.1'].toString();		// DoB

// PV1
tmp['PV1']['PV1.19']['PV1.19.1']	= msg['PV1']['PV1.19']['PV1.19.1'].toString();

// ORC
tmp['ORC']['ORC.3']['ORC.3.1']	= msg['OBR']['OBR.2']['OBR.2.1'].toString();					// Placer Order Number (LSTM-Auftragsnummer)
tmp['ORC']['ORC.9']['ORC.9.1']	= msg['ORC']['ORC.9']['ORC.9.1'].toString();					// Date/Time of Transaction
// OBR
tmp['OBR']['OBR.3']['OBR.3.1']	= msg['OBR']['OBR.2']['OBR.2.1'].toString();					// Placer Order Number (LSTM-Auftragsnummer)
tmp['OBR']['OBR.4']['OBR.4.1']	= 'Befund ' + msg['OBR']['OBR.4']['OBR.4.2'].toString();		// Universal service ID
tmp['OBR']['OBR.7']['OBR.7.1']	= msg['OBR']['OBR.7']['OBR.7.1'].toString();					// Observation Date/Time

// OBX
var strBefundText1 = msg['OBX'][0]['OBX.3']['OBX.3.2'].toString() + ' ' +  // Bezeichner ("Gewicht")
				 msg['OBX'][0]['OBX.5']['OBX.5.1'].toString() + ' ' +	// Gewicht in Kg
				 msg['OBX'][0]['OBX.6']['OBX.6.1'].toString(); 		// Einheit

var strBefundText2 = msg['OBX'][1]['OBX.5']['OBX.5.1'].toString(); 		// Zusammenfassung
var strBefundText3 = msg['OBX'][2]['OBX.5']['OBX.5.1'].toString();		// Messwerte; Langfassung; tabellarische Darstellung
var strBefundText  = strBefundText1 + '\\.br\\\\.br\\' + strBefundText2 + '\\.br\\\\.br\\' + strBefundText3;

tmp['OBX']['OBX.3']['OBX.3.2']	= msg['OBR']['OBR.4']['OBR.4.2'].toString();		// Observation Idenfifier Text = hier Unique Service ID Text 
																	// entspricht der Leistungsbezeichnung, z.B. Spireoergometrie
tmp['OBX']['OBX.5']['OBX.5.1']	= strBefundText;// Scheduled Date, Termin der Durchf�hrung
msg['MSH']['MSH.15']['MSH.15.1'] = 'AL'; // Acknowledge anfordern
msg['ORC']['ORC.16']['ORC.16.2'] = '';	 // hier r�ber kann eine Klinische Fragestellung �bermittelt werden.
msg['OBR']['OBR.36']['OBR.36.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();
var datestring = DateUtil.convertDate('yyyyMMdd', 'yyyyMMdd', msg['PID']['PID.7']['PID.7.1'].toString());
msg['PID']['PID.7']['PID.7.1'] = datestring;
// ORC, Auftragsnummer LSTM eingesetzt f�r CustoMed, Umstellung 05.05.2020, i.Ab. mit Hr. Chojnak (Diamedik)
msg['ORC']['ORC.2']['ORC.2.1'] = msg['ORC']['ORC.3']['ORC.3.1'].toString();

// OBR, Auftragsnummer LSTM eingesetzt f�r CustoMed, Umstellung 05.05.2020, i.Ab. mit Hr. Chojnak (Diamedik)
msg['OBR']['OBR.2']['OBR.2.1'] = msg['OBR']['OBR.3']['OBR.3.1'].toString();

// IN1 Segment l�schen (keine Relevanz).
delete msg['IN1'];
// ZDS Segment l�schen (keine Relevanz).
delete msg['ZDS'];var MessageIndex = 0;
var OBXIndex = 0;
for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		if (seg['OBX.3']['OBX.3.1'].toString().equals("V_covE")) {
		OBXIndex = parseInt(seg['OBX.1']['OBX.1.1'].toString());
		MessageIndex = parseInt(seg.childIndex());
	}
	}
}
var NTECount = 0;
//Check if after OBXindex comes an NTE
for (var i = MessageIndex; i < msg.children().length();i++) {
	if (msg.child(i).name().toString() == "NTE") {
		NTECount++;
	}
	if (msg.child(i).name().toString() == "OBR") {
		break;
	}
}
var NTEIndex = 0;
if (NTECount >= 1) {
createSegmentAfter('NTE', msg['NTE'][NTECount-1]);
NTEIndex = NTECount;
} else {
createSegmentAfter('NTE', msg['OBX'][OBXIndex-1]);	
NTEIndex = NTECount;
}

msg['NTE'][NTECount]['NTE.1']['NTE.1.1']=NTEIndex+1;
msg['NTE'][NTECount]['NTE.2']['NTE.2.1']="O";
msg['NTE'][NTECount]['NTE.3']['NTE.3.1']=channelMap.get('responseStatus');
msg['NTE'][NTECount]['NTE.4']['NTE.4.1']="";
tmp=msg;var MessageIndex = 0;
var OBXIndex = 0;
var OBXthere = false;
var OBXCount = 0;
for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		if (seg['OBX.3']['OBX.3.1'].toString().equalsIgnoreCase("V_COW70") || seg['OBX.3']['OBX.3.1'].toString().equalsIgnoreCase("V_S271") || seg['OBX.3']['OBX.3.1'].toString().equalsIgnoreCase("V_S271E") || 
		    seg['OBX.3']['OBX.3.1'].toString().equalsIgnoreCase("V_S2P70") || seg['OBX.3']['OBX.3.1'].toString().equalsIgnoreCase("V_S271C")) {
		OBXthere = true;
		OBXIndex = parseInt(seg['OBX.1']['OBX.1.1'].toString());
		MessageIndex = parseInt(seg.childIndex())+1;
		OBXCount++;
		break;
	} else {
		OBXCount++;
	}
	}
}
if (OBXthere) {
var NTECount = 0;
var NTEIndex = 0;
//Check if after OBXindex comes an NTE
for (var i = MessageIndex; i < msg.children().length();i++) {
	if (msg.child(i).name().toString() == "NTE") {
		NTECount++;
		NTEIndex = parseInt(tmp['NTE'][0]['NTE.1']['NTE.1.1'].toString());
	}
	if (msg.child(i).name().toString() == "OBR" || msg.child(i).name().toString() == "OBX") {
		break;
	}
}
//var NTEIndex = 0;
if (NTECount > 0) {
createSegmentAfter('NTE', msg['NTE'][NTECount-1]);
//NTEIndex = NTECount;
} else {
createSegmentAfter('NTE', msg['OBX'][OBXCount-1]);	
//NTEIndex = NTECount;
}

msg['NTE'][NTECount]['NTE.1']['NTE.1.1']=NTEIndex+1;
msg['NTE'][NTECount]['NTE.2']['NTE.2.1']="O";
msg['NTE'][NTECount]['NTE.3']['NTE.3.1']=channelMap.get('responseStatus');
msg['NTE'][NTECount]['NTE.4']['NTE.4.1']="";
}
tmp=msg;var SMSBody = "{\"messages\":{\"authentication\":{\"producttoken\":\"53E47836-56C3-488E-B553-39EB6177E56B\"},\"msg\":[{\"allowedChannels\":[\"SMS\"],\
			\"from\":\""+$('senderName')+"\",\"to\":[{\"number\":\""+$('recieverNumber')+"\"}],\"minimumNumberOfMessageParts\":1,\
			\"maximumNumberOfMessageParts\":8,\"body\":{\"type\":\"auto\",\"content\":\""+$('SMSText')+"\"},\"reference\":\"MIRTH-SENDSMS\"}]}}";
channelMap.put('SMSBody',SMSBody);
tmp = SMSBody;
//logger.info("SMS body build:" + SMSBody);var SMSBody = "{\"messages\":{\"authentication\":{\"producttoken\":\"7CA98D59-5FE0-4FBE-BFF8-D58F6B362472\"},\"msg\":[{\"allowedChannels\":[\"SMS\"],\
			\"from\":\""+$('senderName').substring(0,11)+"\",\"to\":[{\"number\":\""+$('recieverNumber')+"\"}],\"minimumNumberOfMessageParts\":1,\
			\"maximumNumberOfMessageParts\":8,\"body\":{\"type\":\"auto\",\"content\":\""+$('SMSText')+"\"},\"reference\":\"MIRTH-SENDSMS\"}]}}";
channelMap.put('SMSBody',SMSBody);/* 
Beispiel ORU Nachricht:

MSH|^~\&|DBLVIRO|Virologie der Universitt Bonn|ORBIS|LAWP|||ORU^R01|201402101431450335|P|2.3|||NE|NE|DE|8859/1
PID|1||6655266||Roggendorf^Theo||19440514|M
PV1|||||||||||||||||||7473327
ORC||1002141107SP3V|||CM||||20140210|||MED2^Zentrum fr Innere Medizin
OBR|1|1002141107SP3V|||||20140210||||||||||||||||||F
OBX||TX|V_H21C^Anti-HIV-1/2, p24-Ag [CMIA]||negativ|||N|||F
OBX||TX|V_BEMERKUNG^Bemerkungen|||||N|||F
NTE|||Patient: Theo Roggendorf, *14.05.1944
NTE|||Untersuchungsmaterial: Serum vom 10.02.2014, 14/03623
NTE|||Bei kurzem Krankheitsverlauf bzw. bei V. a. krzlich erfolgte Infektion
NTE|||Verlaufskontrolle erforderlich.
NTE|||Befund vorab per Fax.
NTE|||Sandra Pietzonka*5728*
*/

for (var i=0; i<msg['Befund'].length(); i++) {


// Befundweite g�ltige Z�hlervariablen f�r OBX und NTE Segmente.
var OBXCount = 0;
var NTECount = 0;

// Neue HL7 Nachricht
hl7_msg	= new XML('<HL7Message/>');

createSegment('MSH', hl7_msg);
hl7_msg['MSH']['MSH.1'] = "|";
hl7_msg['MSH']['MSH.2'] = "^~\\&";		// Achtung "\" in Javascript immer "\\" schreiben.
hl7_msg['MSH']['MSH.3']['MSH.3.1'] = "Virologie UKB";
hl7_msg['MSH']['MSH.4']['MSH.4.1'] = "DBLVIRO";
hl7_msg['MSH']['MSH.5']['MSH.5.1'] = "ORBIS";
hl7_msg['MSH']['MSH.6']['MSH.6.1'] = "LAWP";
// For formating see http://www.mirthcorp.com/community/wiki/display/mirth/Working+with+Dates .
hl7_msg['MSH']['MSH.7']['MSH.7.1'] = DateUtil.getCurrentDate('yyyyMMddHHmmss');
hl7_msg['MSH']['MSH.8']['MSH.8.1'] = "";
hl7_msg['MSH']['MSH.9']['MSH.9.1'] = "ORU";
hl7_msg['MSH']['MSH.9']['MSH.9.2'] = "R01";
hl7_msg['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID(); // MSH.10.1 = Message Controll ID.
hl7_msg['MSH']['MSH.11']['MSH.11.1'] = "P";
hl7_msg['MSH']['MSH.12']['MSH.12.1'] = "2.3";
hl7_msg['MSH']['MSH.13']['MSH.13.1'] = "";
hl7_msg['MSH']['MSH.14']['MSH.14.1'] = "";
hl7_msg['MSH']['MSH.15']['MSH.15.1'] = "NE"; // keine ACKs gewuenscht.
hl7_msg['MSH']['MSH.16']['MSH.16.1'] = "NE"; // keine ACKs gewuenscht.
hl7_msg['MSH']['MSH.17']['MSH.17.1'] = "DE"; // Laendercode.
hl7_msg['MSH']['MSH.18']['MSH.18.1'] = "8859/1";	// Format Code ISO 8859.

// PID
createSegment(['PID'], hl7_msg);  
hl7_msg['PID']['PID.3']['PID.3.1'] = msg['Befund'][i]['PSegment']['PFeld'][15].toString();			// PID.3.1 = ASTM.P.15
hl7_msg['PID']['PID.5']['PID.5.1'] = msg['Befund'][i]['PSegment']['PFeld'][5].toString();			// Family Name PID5.1
hl7_msg['PID']['PID.5']['PID.5.2'] = msg['Befund'][i]['PSegment']['PFeld'][6].toString();			// Given Name
hl7_msg['PID']['PID.7']['PID.7.1'] = msg['Befund'][i]['PSegment']['PFeld'][8].toString();			// Geburtsdatum
hl7_msg['PID']['PID.8']['PID.8.1'] = msg['Befund'][i]['PSegment']['PFeld'][7].toString();			// Geschlecht

// PV1
createSegment(['PV1'], hl7_msg);	
hl7_msg['PV1']['PV1.19']['PV1.19.1'] = msg['Befund'][i]['PSegment']['PFeld'][2].toString();			// PV1.19 = ASTM.P.2

// ORC
createSegment(['ORC'], hl7_msg);	
hl7_msg['ORC']['ORC.2']['ORC.2.1']   = msg['Befund'][i]['PSegment']['PFeld'][4].toString() + 'V' ;		// Befundstatus (fertig = 'CM' oder vorlaeufig = 'IP')
//	if (msg['Befund'][i]['PSegment']['PFeld'][14].toString() == ">") {										// ORC.5.1 = f(ASTM.P.15), wenn P.15 = '>' dann ORC.5.1 = 'IP', sonst ORC.5.1 = 'CM'
																											// P.15 lt. Doku entspricht der P.14 im JavaScript Array.		
		hl7_msg['ORC']['ORC.5']['ORC.5.1']	= "CM";															// ORC.2.1 = ASTM.P.4 - AuftragsID mit Postfix "V" versehen.

//	} else {

//		hl7_msg['ORC']['ORC.5']['ORC.5.1']	= "CM";

//	}
// hl7_msg['ORC']['ORC.9']['ORC.9.1']   = msg['Befund'][i]['PSegment']['PFeld'][10].toString();			// ORC.9.1 = ASTM.P.12 Zeitpunkt der Auftragseingabe bzw.-�nderung (ASTM Materialeingangsdatum)
//hl7_msg['ORC']['ORC.9']['ORC.9.1']   = msg['Befund'][i]['PSegment']['PFeld'][12].toString();				// ORC.9.1 = Befunddatum, Anpassung am 19.04.2017, i.A. der UKB �rzte. 
																						// Als Probenentnahmedatum wird das Befunddatum eingesetzt. Dies ist auch bei den Swisslab HL7 Nachrichten so.
hl7_msg['ORC']['ORC.9']['ORC.9.1'] = msg['LSegment']['LFeld'][3].toString() + msg['LSegment']['LFeld'][4].toString().replace(new RegExp(':','g'), '');		//


hl7_msg['ORC']['ORC.12']['ORC.12.1'] = msg['Befund'][i]['ASegment']['AFeld'][2].toString();				// ORC.12.1 = A2
hl7_msg['ORC']['ORC.12']['ORC.12.2'] = msg['Befund'][i]['ASegment']['AFeld'][4]['ASubfeld'][0].toString();	// ORC.12.2. = A4.0

// OBR
createSegment(['OBR'], hl7_msg);
hl7_msg['OBR']['OBR.2']['OBR.2.1'] = msg['Befund'][i]['PSegment']['PFeld'][4].toString() + 'V' ;		// Entity Identifier = ASTM.P.4 - AuftragsID mit Postfix "V" versehen.
//hl7_msg['OBR']['OBR.7']['OBR.7.1'] = msg['Befund'][i]['PSegment']['PFeld'][12].toString();				// ASTM.P.12 Befundungsdatum 
hl7_msg['OBR']['OBR.7']['OBR.7.1'] = msg['LSegment']['LFeld'][3].toString() + msg['LSegment']['LFeld'][4].toString().replace(new RegExp(':','g'), '');		//

	if (msg['Befund'][i]['PSegment']['PFeld'][14].toString() == ">") {

		hl7_msg['OBR']['OBR.25']['OBR.25.1']	= "P";

	} else {

		hl7_msg['OBR']['OBR.25']['OBR.25.1']	= "F";

	}



// Befundresultat-Segmentestruktur:
// { OBX
// {[NTE]} }

	var anzahl_tsegmente = msg['Befund'][i]['TSegment'].length();										// logger.error("Anzahl TSegmente in Befund " + i + ": " + anzahl_tsegmente);

	for (var j=0; j<anzahl_tsegmente;j++) {		

		// iterieren durch Befundresultate...
		
		OBXCount = hl7_msg['OBX'].length();		// Aktuelle Anzahl an OBX Segmenten in HL7 Nachricht

		createSegment(['OBX'], hl7_msg, OBXCount);
		hl7_msg['OBX'][OBXCount]['OBX.1']['OBX.1.1'] = OBXCount+1;													// Segmentzaehler
		hl7_msg['OBX'][OBXCount]['OBX.2']['OBX.2.1'] = "TX";	// Formatkonstante "TX"
		hl7_msg['OBX'][OBXCount]['OBX.3']['OBX.3.1'] = "V_" + msg['Befund'][i]['TSegment'][j]['TFeld'][2].toString();
		hl7_msg['OBX'][OBXCount]['OBX.3']['OBX.3.2'] = msg['Befund'][i]['TSegment'][j]['TFeld'][3].toString();
		hl7_msg['OBX'][OBXCount]['OBX.5']['OBX.5.1'] = msg['Befund'][i]['TSegment'][j]['TFeld'][4]['TSubfeld'][0].toString()

		hl7_msg['OBX'][OBXCount]['OBX.8']['OBX.8.1'] = "N";
		
		hl7_msg['OBX'][OBXCount]['OBX.14']['OBX.14.1'] = msg['LSegment']['LFeld'][3].toString() + msg['LSegment']['LFeld'][4].toString().replace(new RegExp(':','g'), '');

		if (msg['Befund'][i]['PSegment']['PFeld'][14].length >0) {							// Pr�fen auf die Existenz des Feldes, sonst gibt es in vielen F�llen einen Error.

			if (msg['Befund'][i]['PSegment']['PFeld'][14].toString() == ">") {										// Regel aus eGate.

				hl7_msg['OBX'][OBXCount]['OBX.11']['OBX.11.1']	= "S";

			} else {

				hl7_msg['OBX'][OBXCount]['OBX.11']['OBX.11.1']	= "F";
			}
		} else {

				hl7_msg['OBX'][OBXCount]['OBX.11']['OBX.11.1']	= "F";
			}
//logger.error("Anzahl TSubfelder in TSegment"+j+"  " +msg['Befund'][i]['TSegment'][j]['TFeld'][4]['TSubfeld'].length() );

		if (msg['Befund'][i]['TSegment'][j]['TFeld'][4]['TSubfeld'].length() >1) {							// (Feld 1 exisitert) Wenn es ein "msg['Befund'][0]['TSegment']['T4']['T4.1'].toString()" gibt, 
																										// dann an dieser Stelle ein NTE Segment anlegen.
			NTECount = hl7_msg['NTE'].length();		// Aktuelle Anzahl an NTE Segmenten in HL7 Nachricht

			createSegment('NTE', hl7_msg, NTECount); 				// NTE in Befundresultat
			hl7_msg['NTE'][NTECount]['NTE.1']['NTE.1.1'] = OBXCount +1; 	// Zaehler des letzten OBX (Segmentvorg�ngers)
			hl7_msg['NTE'][NTECount]['NTE.2']['NTE.2.1'] = "TX";
			hl7_msg['NTE'][NTECount]['NTE.3']['NTE.3.1'] = msg['Befund'][i]['TSegment'][j]['TFeld'][4]['TSubfeld'][1].toString();
		}
	}

// Finales OBX Resultat
OBXCount = hl7_msg['OBX'].length();		// Aktuelle Anzahl an OBX Segmenten in HL7 Nachricht

createSegment('OBX', hl7_msg, OBXCount); // finales OBX reinschreieben.
hl7_msg['OBX'][OBXCount]['OBX.1'] = OBXCount +1 ;
hl7_msg['OBX'][OBXCount]['OBX.2'] = "TX";
hl7_msg['OBX'][OBXCount]['OBX.3']['CE.1'] = "V_BEMERKUNG";
hl7_msg['OBX'][OBXCount]['OBX.3']['CE.2'] = "Bemerkungen";

// Finale NTE Kommentare zu selbst generiertem letzten OBX. Anzahl der Kommentare h�ngen von 
// S�tzen im Feld ['CSegment']['CFeld'][2]['CSubfeld'] ab.

NTECount = hl7_msg['NTE'].length();			// Aktuelle Anzahl an NTE Segmenten in HL7 Nachricht

createSegment('NTE', hl7_msg, NTECount); 	// Erstes konstantes NTE Segement
hl7_msg['NTE'][NTECount]['NTE.1']['NTE.1.1']	= OBXCount + 1;
hl7_msg['NTE'][NTECount]['NTE.2']['NTE.2.1'] = "TX";


	if (msg['Befund'][i]['PSegment']['P7'].toString() == "W") {		// Geschlecht weibl.

		hl7_msg['NTE'][NTECount]['NTE.3']['NTE.3.1'] = "Patientin: " + 
											  msg['Befund'][i]['PSegment']['PFeld'][6].toString() + " " +
											  msg['Befund'][i]['PSegment']['PFeld'][5].toString() + ", *" //+
											 // DateUtil.convertDate("yyyyMMdd", "dd.MM.yyyy" , msg['Befund'][i]['PSegment']['PFeld'][8].toString()) ;

	} else {														// sonstig.

		hl7_msg['NTE'][NTECount]['NTE.3']['NTE.3.1'] = "Patient: " + 
											  msg['Befund'][i]['PSegment']['PFeld'][6].toString() + " " +
											  msg['Befund'][i]['PSegment']['PFeld'][5].toString() + ", *" //+
											 // DateUtil.convertDate("yyyyMMdd", "dd.MM.yyyy" , msg['Befund'][i]['PSegment']['PFeld'][8].toString()) ;
	}

	if(msg['Befund'][i]['PSegment']['PFeld'][8].toString()!= "") {		//Geburtsdatum bekannt

		hl7_msg['NTE'][NTECount]['NTE.3']['NTE.3.1'] = hl7_msg['NTE'][NTECount]['NTE.3']['NTE.3.1'].toString() + DateUtil.convertDate("yyyyMMdd", "dd.MM.yyyy" , msg['Befund'][i]['PSegment']['PFeld'][8].toString()) ;
	} else {															//Geburtsdatum unbekannt

		hl7_msg['NTE'][NTECount]['NTE.3']['NTE.3.1'] = hl7_msg['NTE'][NTECount]['NTE.3']['NTE.3.1'].toString() + "unbekannt" ;

	}


NTECount = hl7_msg['NTE'].length();			// Aktuelle Anzahl an NTE Segmenten in HL7 Nachricht

createSegment('NTE', hl7_msg, NTECount);	// Zweites konstantes NTE Segment
hl7_msg['NTE'][NTECount]['NTE.1']['NTE.1.1'] = OBXCount + 1;
hl7_msg['NTE'][NTECount]['NTE.2']['NTE.2.1'] = "TX";
hl7_msg['NTE'][NTECount]['NTE.3']['NTE.3.1'] = "Untersuchungsmaterial: " + 
									    msg['Befund'][i]['PSegment']['PFeld'][9].toString() +
										" vom " +
										DateUtil.convertDate("yyyyMMdd", "dd.MM.yyyy" , msg['Befund'][i]['PSegment']['PFeld'][10].toString()) +
										", " +
										msg['Befund'][i]['PSegment']['PFeld'][3].toString();


    var anzahl_kommentare = msg['Befund'][i]['CSegment']['CFeld'][2]['CSubfeld'].length();		// Dynamische NTE Segment, i.A. von Kommentaren in ASTM C-Segment

	for (var k=0; k< anzahl_kommentare;k++) {													// erste drei NTE Segmente sind fix, danach variable NTE Segmente

		NTECount = hl7_msg['NTE'].length();			// Aktuelle Anzahl an NTE Segmenten in HL7 Nachricht

		createSegment('NTE', hl7_msg, NTECount);	 // zwei NTE wurden zuvor schon angelegt.
		hl7_msg['NTE'][NTECount]['NTE.1']['NTE.1.1'] = OBXCount + 1;
		hl7_msg['NTE'][NTECount]['NTE.2']['NTE.2.1'] = "TX";
		hl7_msg['NTE'][NTECount]['NTE.3']['NTE.3.1'] = msg['Befund'][i]['CSegment']['CFeld'][2]['CSubfeld'][k].toString();
	}


NTECount = hl7_msg['NTE'].length();					// Aktuelle Anzahl an NTE Segmenten in HL7 Nachricht

createSegment('NTE', hl7_msg, NTECount);				// Abschliessenden NTE Segment;
hl7_msg['NTE'][NTECount]['NTE.1']['NTE.1.1'] = OBXCount + 1;
hl7_msg['NTE'][NTECount]['NTE.2']['NTE.2.1'] = "TX";
hl7_msg['NTE'][NTECount]['NTE.3']['NTE.3.1'] = msg['Befund'][i]['CSegment']['CFeld'][3].toString();


// Absenden der Templatenachricht an DBL Viro Out.
//router.routeMessage("cDblviroKhvOruOut", SerializerFactory.getHL7Serializer().fromXML(hl7_msg));
router.routeMessage("cDblviroKhvOruOut", SerializerFactory.getSerializer('HL7V2').fromXML(hl7_msg));
sleep(1000);

}

tmp = msg;		// Durchreichen der original NAchricht an den Ausgang.var tests = "";	
var matcode = "";
var nteseg = "";
	
//richtiges NTE-Segment mit dem Matcode am Ende raussuchen:
for (var i=0; i<(msg['NTE']['NTE.3']['NTE.3.1'].length()); i++) {
	nteseg = msg['NTE'][i]['NTE.3']['NTE.3.1'].toString().substr(0,21);

//MATCODE-Substring in der CSV-Datei f�llen 
	if (nteseg == "Untersuchungsmaterial")	
		matcode = msg['NTE'][i]['NTE.3']['NTE.3.1'].toString();
		tmp['row']['MATCODE'] = matcode.substr(matcode.length - 8).toString();	
		tmp['row']['MATERIAL'] = matcode;
}

//�brige Spalten (Name, Vorname, Geburtstdatun, Fallnummer, Eingangsdatum, Einsender) in der CSV-Datei f�llen
	tmp['row']['NAME'] = msg['PID']['PID.5']['PID.5.1'].toString();
	tmp['row']['VORNAME'] = msg['PID']['PID.5']['PID.5.2'].toString();

	if (msg['PID']['PID.7']['PID.7.1'].toString().length > 0){
		tmp['row']['GEBDATUM'] = DateUtil.convertDate('yyyyMMdd', 'dd.MM.yyyy', msg['PID']['PID.7']['PID.7.1'].toString());
		}
 	
	tmp['row']['FALLNR'] = msg['PV1']['PV1.19']['PV1.19.1'].toString();
	tmp['row']['EINGANG'] = DateUtil.convertDate('yyyyMMdd', 'dd.MM.yyyy', msg['ORC']['ORC.9']['ORC.9.1'].toString());
	tmp['row']['EINSENDER'] = msg['ORC']['ORC.12']['ORC.12.1'].toString();

//aus allen OBX-Segmenten alle Leistungsk�rzel extrahieren
for (var i=0; i<(msg['OBX']['OBX.3']['OBX.3.1'].length()-1); i++) {

	tests += msg['OBX'][i]['OBX.3']['OBX.3.1'].toString().slice(2,msg['OBX'][i]['OBX.3']['OBX.3.1'].toString().length);
	tests += ", ";
}

//Leistungsk�rzel in die entsprechende Spalte der CSV-Tabelle schreiben
	tmp['row']['TESTS'] =  tests;var famName = msg['PID']['PID.5']['PID.5.1'].toString();
var givName = msg['PID']['PID.5']['PID.5.2'].toString();
var maidName = msg['PID']['PID.6']['PID.6.1'].toString();


//anonymisieren der Patientendaten, erster Buchstabe bleibt stehen.
msg['PID']['PID.5']['PID.5.1'] = famName.substring(0,1);
msg['PID']['PID.5']['PID.5.2'] = givName.substring(0,1);

if (maidName.length>0) {
	msg['PID']['PID.6']['PID.6.1'] = maidName.substring(0,1);
}


//Auftragnummer setzen
var orderNumberZeile = msg['NTE'][1]['NTE.3']['NTE.3.1'].toString();

var orderNumber = orderNumberZeile.substring(orderNumberZeile.length-8);
msg['OBR']['OBR.2']['OBR.2.1'] = orderNumber;

//andere Analysen aus der Nachricht rausl�schen

for each (seg in msg.children()) {
	if (seg.name().toString() == 'OBX' && (seg['OBX.3']['OBX.3.1'].toString()!='V_COW70' || seg['OBX.3']['OBX.3.1'].toString()!='V_S271' || 
							seg['OBX.3']['OBX.3.1'].toString()!='V_S271E' || seg['OBX.3']['OBX.3.1'].toString()!='V_S2P70'))
			delete seg;
}// Objekt "parser" h�lt den Parser des GDTInterfaces
var parser = new Packages.ukb.klinik.bn.gdtinterface.DelimitedTextToGDT();
var parameters = [$('string'),":"];

//logger.info(parser.getVersionInfo());

/*
* Der Parser kann konfiguriert werden, sodass zu einer Nachricht ein Satzende hinzugef�gt wird
* standard-m��ig wird dies nicht gemacht
*/
// parser.configure("satzende",true);

//Ausf�hren des Parsers und Speichern als String
var GDTmessage = parser.process(parameters);
/*
var split = GDTmessage.split("\r\n");
var outgoing = "";
for (var i=0;i<split.length;i++) {
	if (split[i].contains("0173103")) {
		outgoing += "0173103"+split[i].substring(13,15)+split[i].substring(11,13)+split[i].substring(7,11)+"\r\n";
	} else {
		if (split[i].contains("0103110")) {
			outgoing+= split[i].replace("M","1").replace("W","2").replace("X","0").replace("O","0")+"\r\n";
		} else {
		outgoing += split[i]+"\r\n";
		}
	}
}
*/

// Speichern des Texts in der ChannelMap
globalChannelMap.put('myMessage',GDTmessage);// Objekt "parser" h�lt den Parser des GDTInterfaces
var parser = new Packages.ukb.klinik.bn.gdtinterface.DelimitedTextToGDT();
var parameters = [$('string'),":"];

//logger.info(parser.getVersionInfo());

/*
* Der Parser kann konfiguriert werden, sodass zu einer Nachricht ein Satzende hinzugef�gt wird
* standard-m��ig wird dies nicht gemacht
*/
// parser.configure("satzende",true);

//Ausf�hren des Parsers und Speichern als String
var GDTmessage = parser.process(parameters);
/*
var split = GDTmessage.split("\r\n");
var outgoing = "";
for (var i=0;i<split.length;i++) {
	if (split[i].contains("0173103")) {
		outgoing += "0173103"+split[i].substring(13,15)+split[i].substring(11,13)+split[i].substring(7,11)+"\r\n";
	} else {
		if (split[i].contains("0103110")) {
			outgoing+= split[i].replace("M","1").replace("W","2").replace("X","0").replace("O","0")+"\r\n";
		} else {
		outgoing += split[i]+"\r\n";
		}
	}
}
*/

// Speichern des Texts in der ChannelMap
globalChannelMap.put('myMessage',GDTmessage);//Setup MSH
//logger.debug("Starting Transformer");
tmp['MSH']['MSH.1'] = "|";
tmp['MSH']['MSH.2'] = "^~\\&";
tmp['MSH']['MSH.3']['MSH.3.1'] 	= 'DIERS';
tmp['MSH']['MSH.4']['MSH.4.1'] 	= 'DIERS';
tmp['MSH']['MSH.5']['MSH.5.1'] = "ORBIS";
tmp['MSH']['MSH.6']['MSH.6.1'] = "JAIF";
tmp['MSH']['MSH.7']['MSH.7.1'] 	= DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['MSH']['MSH.9']['MSH.9.1'] 	= "MDM";
tmp['MSH']['MSH.9']['MSH.9.2'] 	= "T09";
tmp['MSH']['MSH.10']['MSH.10.1'] 	= connectorMessage.getMessageId();
tmp['MSH']['MSH.12']['MSH.12.1'] 	= "2.5";

//setup EVN
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = DateUtil.getCurrentDate('yyyyMMddHHmmss');
//08052020092947
tmp['EVN']['EVN.3']['EVN.3.1'] = DateUtil.convertDate("ddMMyyyyhhmm", 'yyyyMMddhhmm', $('AbnahmeDatum')+$('AbnahmeZeit'));

//setup PID
tmp['PID']['PID.1']['PID.1.1'] 	= "1";
tmp['PID']['PID.2']['PID.2.1'] = $('PID');
tmp['PID']['PID.3']['PID.3.1'] 	= $('PID')
//tmp['PID']['PID.3']['PID.3.4'] = "UKB";
//tmp['PID']['PID.3']['PID.3.5'] = "PID";
tmp['PID']['PID.5']['PID.5.1'] 	= $('Nachname')
tmp['PID']['PID.5']['PID.5.2'] 	= $('Vorname')
if (!($('DOB')== "")) tmp['PID']['PID.7']['PID.7.1'] = $('DOB');
tmp['PID']['PID.8']['PID.8.1'] 	= $('SEX');
if ($('SEX')=="2")tmp['PID']['PID.8']['PID.8.1'] = "W"
if ($('SEX')=="1")tmp['PID']['PID.8']['PID.8.1'] = "M"



//setup PV1
tmp['PV1']['PV1.1']['PV1.1.1'] 	= "1";
tmp['PV1']['PV1.19']['PV1.19.1'] 	= $('FallNr');
tmp['TXA']['TXA.2']['TXA.2.1'] = "Ganganalyse";
tmp['TXA']['TXA.8']['TXA.8.1']	= DateUtil.convertDate("ddMMyyyyhhmm", 'yyyyMMddhhmm', $('AbnahmeDatum')+$('AbnahmeZeit'));
if ($('VerweisAufDatei')!="") {
tmp['TXA']['TXA.12']['TXA.12.1'] = $('VerweisAufDatei').substring(0,$('VerweisAufDatei').lastIndexOf('.'));
tmp['TXA']['TXA.16']['TXA.16.1'] 	= "\\\\ukb218\\MIRTHP_WORK\\2348uzfgasejtzugf87xfjhasjdgvbm\\GDT_OUT\\"+$('VerweisAufDatei');
}
tmp['TXA']['TXA.12']['TXA.12.2'] = "DIERS";
tmp['TXA']['TXA.12']['TXA.12.3'] = $('FallNr')+$('PID')+$('AbnahmeDatum')+$('AbnahmeZeit');//Setup MSH
//logger.debug("Starting Transformer");
tmp['MSH']['MSH.1'] = "|";
tmp['MSH']['MSH.2'] = "^~\\&";
tmp['MSH']['MSH.3']['MSH.3.1'] 	= 'DIERS';
tmp['MSH']['MSH.4']['MSH.4.1'] 	= 'DIERS';
tmp['MSH']['MSH.5']['MSH.5.1'] = "ORBIS";
tmp['MSH']['MSH.6']['MSH.6.1'] = "JAIF";
tmp['MSH']['MSH.7']['MSH.7.1'] 	= DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['MSH']['MSH.9']['MSH.9.1'] 	= "MDM";
tmp['MSH']['MSH.9']['MSH.9.2'] 	= "T09";
tmp['MSH']['MSH.10']['MSH.10.1'] 	= connectorMessage.getMessageId();
tmp['MSH']['MSH.12']['MSH.12.1'] 	= "2.5";

//setup EVN
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = DateUtil.getCurrentDate('yyyyMMddHHmmss');
//08052020092947
tmp['EVN']['EVN.3']['EVN.3.1'] = DateUtil.convertDate("ddMMyyyyhhmm", 'yyyyMMddhhmm', $('AbnahmeDatum')+$('AbnahmeZeit'));

//setup PID
tmp['PID']['PID.1']['PID.1.1'] 	= "1";
tmp['PID']['PID.2']['PID.2.1'] = $('PID');
tmp['PID']['PID.3']['PID.3.1'] 	= $('PID')
//tmp['PID']['PID.3']['PID.3.4'] = "UKB";
//tmp['PID']['PID.3']['PID.3.5'] = "PID";
tmp['PID']['PID.5']['PID.5.1'] 	= $('Nachname')
tmp['PID']['PID.5']['PID.5.2'] 	= $('Vorname')
if (!($('DOB')== "")) tmp['PID']['PID.7']['PID.7.1'] = $('DOB');
tmp['PID']['PID.8']['PID.8.1'] 	= $('SEX');

//setup PV1
tmp['PV1']['PV1.1']['PV1.1.1'] 	= "1";
tmp['PV1']['PV1.19']['PV1.19.1'] 	= $('FallNr');
tmp['TXA']['TXA.2']['TXA.2.1'] = "Ganganalyse";
tmp['TXA']['TXA.8']['TXA.8.1']	= DateUtil.convertDate("ddMMyyyyhhmm", 'yyyyMMddhhmm', $('AbnahmeDatum')+$('AbnahmeZeit'));
if ($('VerweisAufDatei')!="") {
tmp['TXA']['TXA.12']['TXA.12.1'] = $('VerweisAufDatei').substring(0,$('VerweisAufDatei').lastIndexOf('.'));
tmp['TXA']['TXA.16']['TXA.16.1'] 	= "\\\\ukb218\\MIRTHP_WORK\\2348uzfgasejtzugf87xfjhasjdgvbm\\GDT_OUT\\"+$('VerweisAufDatei');
}
tmp['TXA']['TXA.12']['TXA.12.2'] = "DIERS";
tmp['TXA']['TXA.12']['TXA.12.3'] = $('FallNr')+$('PID')+$('AbnahmeDatum')+$('AbnahmeZeit');// Transformieren zu HL7 MDM

var strPID = msg['PID']['PID.3']['PID.3.1'].toString();
var strEOOrdNo = msg['ORC']['ORC.2']['ORC.2.1'].toString(); 		// EasyOne (EO) Auftragsnummer enth�lt die Fallnummer zus�tzlich 
														// zur zu LSTM-Auftragsnummer
														// Bsp.: LSTM-2020-074567_1091341 =>
														// Auftragsnummer = LSTM-2020-074567
														// Fallnummer = 1091341
// regexp Pr�fung auf g�ltige Auftragsnummer noch einf�gen

var arrEOOrdNo = strEOOrdNo.split('_');
var strLSTMNR  = arrEOOrdNo[0].toString();
var strFALLNR  = arrEOOrdNo[1].toString();

// MSH
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();
tmp['MSH']['MSH.10']['MSH.10.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

// PID
tmp['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['PID']['PID.5']['PID.5.1'].toString();
tmp['PID']['PID.5']['PID.5.2'] = msg['PID']['PID.5']['PID.5.2'].toString();
tmp['PID']['PID.7']['PID.7.1'] = msg['PID']['PID.7']['PID.7.1'].toString();
tmp['PID']['PID.8']['PID.8.1'] = msg['PID']['PID.8']['PID.8.1'].toString();

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = strFALLNR;

// TXA
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['ORC']['ORC.3']['ORC.3.2'].toString(); 	// Befunderstllungsdatum
tmp['TXA']['TXA.12']['TXA.12.1'] = strLSTMNR;
tmp['TXA']['TXA.12']['TXA.12.2'] = 'LUFU-KKASPAMB';

var strPfadDatei = '';
var valueType = '';
// Suchen und Einsetzen des Dokumentenpfads; hier iteratives Suchen, um ggf. dynamische �nderungen abzufangen (z.B. neues OBX Segment)
for each (obx in msg.children()) {
	
	if (obx.name().toString() == "OBX") {
		
		valueType = obx['OBX.2']['OBX.2.1'].toString();
		
		if (valueType == 'RP') {							// OBX|7|RP|||\\Ukb218.klinik.bn\mirthp_work\0kwgvcymahef762jdol\OUT\6972987_LSTM-2020-074567_1091341.pdf^^AP^PDF|||||||

			strPfadDatei = obx['OBX.5']['OBX.5.1'].toString();
		}
	}
}

tmp['TXA']['TXA.16']['TXA.16.1'] = strPfadDatei;/*
MSH|^~\&|MIRTH|UKB|PKARD|EKG|201708311330||ORM^O01|21904846|P|2.3|PID|1|3259323|3259323||Mosler^Philipp|Mosler|19900511|M|||^^^^^^PV1|1|O|^^^9008INZ^90 INZ^932295|^^301|||||||||||||||8200610IN1|ORC|NW|24139736|||||^^^201708311330^^normal||201708311330|INZ13850|||||||^^^|OBR|1|24139736||Ruhe EKG^Ruhe EKG

*/

if (msg['PV1']['PV1.3']['PV1.3.5'].toString() == '90 INZ') {
	
	msg['PV1']['PV1.3']['PV1.3.1'] = '90 INZ';
}
if (msg['PV1']['PV1.3']['PV1.3.5'].toString() == '97NNZ') {
	
	msg['PV1']['PV1.3']['PV1.3.1'] = '97NNZ';
}/*
MSH|^~\&|MIRTH|UKB|PKARD|EKG|201708311330||ORM^O01|21904846|P|2.3|PID|1|3259323|3259323||Mosler^Philipp|Mosler|19900511|M|||^^^^^^PV1|1|O|^^^9008INZ^90 INZ^932295|^^301|||||||||||||||8200610IN1|ORC|NW|24139736|||||^^^201708311330^^normal||201708311330|INZ13850|||||||^^^|OBR|1|24139736||Ruhe EKG^Ruhe EKG

*/

if (msg['PV1']['PV1.3']['PV1.3.5'].toString() == '90 INZ') {
	
	msg['PV1']['PV1.3']['PV1.3.1'] = '90 INZ';
}
if (msg['PV1']['PV1.3']['PV1.3.5'].toString() == '97NNZ') {
	
	msg['PV1']['PV1.3']['PV1.3.1'] = '97NNZ';
}// Voranstellen des FTP-Pfades:
var strFTPpath = 'ftp://pkard:pkard7skata!1@ukb218.klinik.bn/EKG/PDF/LangzeitEKG/' + msg['TXA']['TXA.16']['TXA.16.1'].toString();
msg['TXA']['TXA.16']['TXA.16.1'] = strFTPpath;

sleep(1000);// Voranstellen des FTP-Pfades:
//var strFTPpath = 'ftp://pkard:pkard7skata!1@ukb218.klinik.bn/EKG/PDF/BelastungEKG/' + msg['TXA']['TXA.16']['TXA.16.1'].toString();
//msg['TXA']['TXA.16']['TXA.16.1'] = strFTPpath;

var strWinpath = '//ukb1488.klinik.bn/m$/srv/transfer/mirth/pdf/' + msg['TXA']['TXA.16']['TXA.16.1'].toString();
msg['TXA']['TXA.16']['TXA.16.1'] = strWinpath;


sleep(1000);/*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung.// PID Segment anpassen.
//msg['PID']['PID.3']['PID.3.1'] = '3299570';	// test konstante

// PV1 Segment anpassen.
//msg['PV1']['PV1.19']['PV1.19.1'] = '7281635';	// test konstante

// MSH.10.1 Message Control ID
//var strMCID   = msg['MSH']['MSH.10']['MSH.10.1'].toString();
//var strPID    = msg['PID']['PID.3']['PID.3.1'].toString();
//var strFALLNR = msg['PV1']['PV1.19']['PV1.19.1'].toString();

// Erweiterung der MSH Control ID, f�r eine bessere Auswertungsm�glichkeit im ACK zu haben.
// Korrktur pk, 08.09.2014.

//msg['MSH']['MSH.10']['MSH.10.1'] = strMCID + '+' + strPID + '+' + strFALLNR;

// Voranstellen des Pfades:
var strFTPPfad = 'ftp://pkard:pkard7skata!1@ukb218.klinik.bn/EKG/PDF/' + msg['TXA']['TXA.16']['TXA.16.1'].toString();
msg['TXA']['TXA.16']['TXA.16.1'] = strFTPPfad;

//logger.error('Ausgabepfade FTP JAIF Aufruf: ' + strFTPPfad);

sleep(1000);/*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung./*



 */


 // m�sste hier ggf. zur EKG Auftragsnummer aus Fallnummer noch die Fachabteilung/Klinik hinzugef�gt werden?
 // z.B. um unterschiedliche WL zu bedienen nach einer Verlegung.// F�r Mortara: Anpassen der OE im PV1.5, z.B. wenn �ber die Notfallaufnahme ein Auftrag bzw. ORM Nachricht erzeugt wird,
// dann erscheint momentan die OE 9002INZ, was falsch ist; korrekt w�re die Institutskennung "90 INZ"

if (msg['PV1']['PV1.3']['PV1.3.4'].toString() == '90') {
	
	msg['PV1']['PV1.3']['PV1.3.5'] = '90 INZ';
	
}


// Immer Updates senden:
//if (msg['ORC']['ORC.1']['ORC.1.1'] == 'NW') {

//	msg['ORC']['ORC.1']['ORC.1.1'] = 'XO';
//}

// tempor�re L�sung, bis Herr Faix die Einmalanforderung umgestellt hat.
if (msg['PV1']['PV1.3']['PV1.3.5'].toString().length>0) {
	msg['ORC']['ORC.13']['ORC.13.1'] = msg['PV1']['PV1.3']['PV1.3.5'].toString();
}// USERNAME 
tmp['row']['column1'] = msg['username'].toString();
// NAME
tmp['row']['column2'] = msg['name'].toString();
// VORNAME
tmp['row']['column3'] = msg['vorname'].toString();// MSH
var dateString = DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['MSH']['MSH.7']['MSH.7.1'] 	= dateString;				// �bertragungsdatum  *current date/Datetime
tmp['MSH']['MSH.10']['MSH.10.1'] 	= UUIDGenerator.getUUID();	// MessageID

// EVN
// �bertragungsdatum
tmp['EVN']['EVN.2']['EVN.2.1'] = dateString;

// PID
tmp['PID']['PID.2']['PID.2.1'] = $('vPID');
tmp['PID']['PID.3']['PID.3.1'] = $('vPID');
tmp['PID']['PID.5']['PID.5.1'] =  $('vNachname');	// optional
tmp['PID']['PID.5']['PID.5.2'] = $('vVorname');	// optional
tmp['PID']['PID.7']['PID.7.1'] = $('vDOBHL7');	// optional

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = $('vFallNr');

// TXA
tmp['TXA']['TXA.8']['TXA.8.1']= $('vBehandlungsdatumHL7');
tmp['TXA']['TXA.12']['TXA.12.1'] = $('vBehandlungsdatumHL7');	// eindeutige DokumentenID
// tmp['TXA']['TXA.12']['TXA.12.2'] = 'PSY-EKT'; ist im Template gesetzt.
tmp['TXA']['TXA.16']['TXA.16.1'] = $('vSrcFolderPath');// MSH
var dateString = DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['MSH']['MSH.7']['MSH.7.1'] 	= dateString;				// �bertragungsdatum  *current date/Datetime
tmp['MSH']['MSH.10']['MSH.10.1'] 	= UUIDGenerator.getUUID();	// MessageID

// EVN
// �bertragungsdatum
tmp['EVN']['EVN.2']['EVN.2.1'] = dateString;

// PID
tmp['PID']['PID.2']['PID.2.1'] = $('vPID');
tmp['PID']['PID.3']['PID.3.1'] = $('vPID');
tmp['PID']['PID.5']['PID.5.1'] =  $('vNachname');	// optional
tmp['PID']['PID.5']['PID.5.2'] = $('vVorname');	// optional
tmp['PID']['PID.7']['PID.7.1'] = $('vDOBHL7');	// optional

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = $('vFallNr');

// TXA
tmp['TXA']['TXA.8']['TXA.8.1']= $('vBehandlungsdatumHL7');
tmp['TXA']['TXA.12']['TXA.12.1'] = $('vPID')+$('vFallNr')+$('vBehandlungsdatumHL7');	// eindeutige DokumentenID
// tmp['TXA']['TXA.12']['TXA.12.2'] = 'PSY-EKT'; ist im Template gesetzt.
tmp['TXA']['TXA.16']['TXA.16.1'] = "//ukb1488.klinik.bn/m$/srv/transfer/mirth/pdf/"+$('vOrigFileName');// Transformation f�r Jaif Mdm Import.

// MSH Anpassungen:
msg['MSH']['MSH.4']['MSH.4.1'] = 'ORBIS';
msg['MSH']['MSH.5']['MSH.5.1'] = 'JAIF';
msg['MSH']['MSH.6']['MSH.6.1'] = 'UKB';
msg['MSH']['MSH.12']['MSH.12.1'] = '2.3';
msg['MSH']['MSH.15']['MSH.15.1'] = 'AL';
msg['MSH']['MSH.16']['MSH.16.1'] = 'AL';

// sende die MDM Nachricht immer als �nderungsnachricht T09.
msg['MSH']['MSH.9']['MSH.9.2'] = 'T09';

// EVN
msg['EVN']['EVN.1']['EVN.1.1'] = 'T09';

// PV1
msg['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());	// f�hrende Null wegnehmen durch "number"-Konvertierung.

// TXA Anpassungen:

// TXA AnpassungBelegartkuerzel fuer HYDMedia setzen
msg['TXA']['TXA.2']['TXA.2.1'] = msg['TXA']['TXA.2']['TXA.2.1'].toString() + ' #0599#'; // gem�� DMS Aktenplan Belegart "5.Medizinische Formulare und Bescheinigungen" -> "5.99 Sonstiges"
																	   // in Absprache mit Dr. Randau, Mail 14.04.2021 20:18.
msg['TXA']['TXA.12']['TXA.12.2'] = 'ENDODOK';		// Pflichtfeld, muss vorher in ORBIS (ADM Global -> Alle Katologe -> NAMESPACE hinterliegt werden; seit 09.12.2019 in ORBIS


// Velocity Variablen soll sicherstellen, dass keine Abweichung der Ausgabepfade in der Destination und dem MDM TXA.16 Feld entstehen k�nnen.
// msg['TXA']['TXA.16']['TXA.16.1'] = 'M:\\WORK\\Test_ARIA\\OUT\\' + $('vDateiname');
msg['TXA']['TXA.16']['TXA.16.1'] = '//ukb1488.klinik.bn/m$/srv/transfer/mirth/pdf/' + $('vAttachmentFileName');

delete msg['OBX'];function hasNumber(myString) {
  return /\d/.test(myString);
}

function sanitize(myString) {
	if (myString == null) return "";
	return myString.trim().replaceAll(/^null$/,'').trim();
}

function removeLeadingSlash(myString) {
	if (myString.indexOf('/')==0) {
		return myString.substring(1);
    
	}
  return myString
}

function extractTitle(string) {
	var myReturn = "";
if (string.indexOf("Dr.")!==-1) myReturn ="Dr."
if (string.indexOf("Prof. Dr.")!==-1) myReturn ="Prof. Dr."
if (string.indexOf("Dr.Dr.med.")!==-1) myReturn ="Dr. Dr. med."
if (string.indexOf("Dipl.-Ing.")!==-1) myReturn ="Dipl.-Ing."
if (string.indexOf("Dr. Dr.")!==-1) myReturn ="Dr. Dr."
if (string.indexOf("Priv. Doz. Dr. med")!==-1) myReturn ="Priv. Doz. Dr. med"
if (string.indexOf("Dipl.Biol.")!==-1) myReturn ="Dipl. Biol."
if (string.indexOf("M.D.")!==-1) myReturn ="M.D."
if (string.indexOf("Priv.-Doz. Dr. med.")!==-1) myReturn ="Priv.-Doz. Dr. med."
if (string.indexOf("Dr. medic")!==-1) myReturn ="Dr. medic"
if (string.indexOf("Dr.med.")!==-1) myReturn ="Dr.med."
if (string.indexOf("Dr. rer. nat.")!==-1) myReturn ="Dr. rer. nat."
if (string.indexOf("PDDr. med. Dr. med. dent.")!==-1) myReturn ="PDDr. med. Dr. med. dent."
if (string.indexOf("Dr. med. ")!==-1) myReturn ="Dr. med. "
if (string.indexOf("Dipl.med.")!==-1) myReturn ="Dipl. med."
if (string.indexOf("Dr. Dr. med.")!==-1) myReturn ="Dr. Dr. med."
if (string.indexOf("DR. AGR.")!==-1) myReturn ="DR. AGR."
if (string.indexOf("Dr. Dr. Dr.")!==-1) myReturn ="Dr. Dr. Dr."
if (string.indexOf("Dr. Jur.")!==-1) myReturn ="Dr. Jur."
if (string.indexOf("Dr. Agr.")!==-1) myReturn ="Dr. Agr."
if (string.indexOf("Dr. Dr. Ing.")!==-1) myReturn ="Dr. Dr. Ing."
if (string.indexOf("Dr.Dr.")!==-1) myReturn ="Dr. Dr."
if (string.indexOf("DR.")!==-1) myReturn ="DR."
if (string.indexOf("Prof. Dr. phil.")!==-1) myReturn ="Prof. Dr. phil."
if (string.indexOf("Prof. Dr. med")!==-1) myReturn ="Prof. Dr. med"
if (string.indexOf("Priv. Doz. Dr.")!==-1) myReturn ="Priv. Doz. Dr."
if (string.indexOf("Dr. Ing.")!==-1) myReturn ="Dr. Ing."
if (string.indexOf("Dr. rer. nat. Dr. med.")!==-1) myReturn ="Dr. rer. nat. Dr. med."
if (string.indexOf("Dr. rer. nat")!==-1) myReturn ="Dr. rer. nat"
if (string.indexOf("Prof. Dr. med. Dr. h. c.")!==-1) myReturn ="Prof. Dr. med. Dr. h. c."
if (string.indexOf("PD Prof. Dr.")!==-1) myReturn ="PD Prof. Dr."
if (string.indexOf("Dr. med. univ.")!==-1) myReturn ="Dr. med. univ."
if (string.indexOf("Dr. h.c.")!==-1) myReturn ="Dr. h.c."
if (string.indexOf("Dr.med. univ.")!==-1) myReturn ="Dr.med. univ."
if (string.indexOf("PD Dr. med. MUDr.")!==-1) myReturn ="PD Dr. med. MUDr."
if (string.indexOf("Dr.Ing.")!==-1) myReturn ="Dr. Ing."
if (string.indexOf("Dr.phil.")!==-1) myReturn ="Dr. phil."
if (string.indexOf("Prof.Dr.Dr.")!==-1) myReturn ="Prof. Dr. Dr."
if (string.indexOf("Prof. Dr. Dr.")!==-1) myReturn ="Prof. Dr. Dr."
if (string.indexOf("PD Dr. med.")!==-1) myReturn ="PD Dr. med."
if (string.indexOf("Prof. Dr. med.")!==-1) myReturn ="Prof. Dr. med."
if (string.indexOf("Prof. Dr. rer. nat.")!==-1) myReturn ="Prof. Dr. rer. nat."
if (string.indexOf("PD Dr.med.")!==-1) myReturn ="PD Dr. med."
if (string.indexOf("DIPL. ing.")!==-1) myReturn ="DIPL. ing."
if (string.indexOf("Prof. Dr. h.c.")!==-1) myReturn ="Prof. Dr. h.c."
if (string.indexOf("Dipl.-Math.")!==-1) myReturn ="Dipl.-Math."
if (string.indexOf("Senator H.C.")!==-1) myReturn ="Senator H.C."
if (string.indexOf("Dr. Dipl.Psych.")!==-1) myReturn ="Dr. Dipl. Psych."
if (string.indexOf("Prof.")!==-1) myReturn ="Prof."
if (string.indexOf("DR. JUR.")!==-1) myReturn ="DR. JUR."
if (string.indexOf("Dipl.Phys.")!==-1) myReturn ="Dipl. Phys."
if (string.indexOf("Priv. Doz. Dr. med.")!==-1) myReturn ="Priv. Doz. Dr. med."
if (string.indexOf("Dr. ing.")!==-1) myReturn ="Dr. ing."
if (string.indexOf("Dr. med. Dr. rer. nat.")!==-1) myReturn ="Dr. med. Dr. rer. nat."
if (string.indexOf("Prof. Dr. med. Dr. med. d")!==-1) myReturn ="Prof. Dr. med. Dr. med. d"
if (string.indexOf("Univ.Prof.Dr.")!==-1) myReturn ="Univ.Prof.Dr."
if (string.indexOf("Univ.-Prof. Dr. med.")!==-1) myReturn ="Univ.-Prof. Dr. med."
if (string.indexOf("Prof. Dr. med. Dr. �s sci.")!==-1) myReturn ="Prof. Dr. med. Dr. �s sci."
if (string.indexOf("Prof. Dr. Dr. h. c.")!==-1) myReturn ="Prof. Dr. Dr. h. c."
if (string.indexOf("Dr.med.")!==-1) myReturn ="Dr. med."
if (string.indexOf("PD Dr.med. MUDr.")!==-1) myReturn ="PD Dr. med. MUDr."
if (string.indexOf("Dr. med. Dipl.-Phys. ")!==-1) myReturn ="Dr. med. Dipl.-Phys. "
if (string.indexOf("Prof.Dr.med.")!==-1) myReturn ="Prof. Dr. med."
if (string.indexOf("Dipl.")!==-1) myReturn ="Dipl."
if (string.indexOf("Priv. Doz. Dr. rer. nat.")!==-1) myReturn ="Priv. Doz. Dr. rer. nat."
if (string.indexOf("Dr. med. Dr. phil.")!==-1) myReturn ="Dr. med. Dr. phil."
if (string.indexOf("Dr. phil.")!==-1) myReturn ="Dr. phil."
if (string.indexOf("Dr. med. vet.")!==-1) myReturn ="Dr. med. vet."
if (string.indexOf("Dr. rer.")!==-1) myReturn ="Dr. rer."
if (string.indexOf("Dr. rer. Nat.")!==-1) myReturn ="Dr. rer. Nat."
if (string.indexOf("PHD")!==-1) myReturn ="PHD"
if (string.indexOf("Prof. Dr. med. .")!==-1) myReturn ="Prof. Dr. med. "
if (string.indexOf("R. med. dent.")!==-1) myReturn ="R. med. dent."
if (string.indexOf("Dottore")!==-1) myReturn ="Dr."
if (string.indexOf("Dr. med. habil.")!==-1) myReturn ="Dr. med. habil."
if (string.indexOf("Prof.Dr.")!==-1) myReturn ="Prof. Dr."
if (string.indexOf("Prof Dr Dr")!==-1) myReturn ="Prof. Dr. Dr."
if (string.indexOf("Dr")!==-1) myReturn ="Dr."
if (string.indexOf("Dr. med. Dr. med. dent.")!==-1) myReturn ="Dr. med. Dr. med. dent."
if (string.indexOf("PD")!==-1) myReturn ="PD"
if (string.indexOf("Dr. rer. pol.")!==-1) myReturn ="Dr. rer. pol."
if (string.indexOf("PROF. DR. JUR.")!==-1) myReturn ="PROF. DR. JUR."
if (string.indexOf("MU Dr.")!==-1) myReturn ="MU Dr."
if (string.indexOf("Prof.Dr.Dr.h.c.")!==-1) myReturn ="Prof. Dr. Dr. h.c."
if (string.indexOf("Dipl.Ing.")!==-1) myReturn ="Dipl. Ing."
if (string.indexOf("Dr. med.")!==-1) myReturn ="Dr. med."
if (string.indexOf("Ing.")!==-1) myReturn ="Ing."
if (string.indexOf("Dipl.Psych.")!==-1) myReturn ="Dipl. Psych."
if (string.indexOf("PD Dr.")!==-1) myReturn ="PD Dr."
if (string.indexOf("Dr. med. dent.")!==-1) myReturn ="Dr. med. dent."
if (string.indexOf("PD. Dr.")!==-1) myReturn ="PD. Dr."
if (string.indexOf("Prof. Dr. med. dent.")!==-1) myReturn ="Prof. Dr. med. dent."
if (string.indexOf("Priv. Doz. Dr. med. dent.")!==-1) myReturn ="Priv. Doz. Dr. med. dent."
if (string.indexOf("Dr.med.Dr.rer.nat")!==-1) myReturn ="Dr. med. Dr. rer. nat"
if (string.indexOf("Dipl.Chem.")!==-1) myReturn ="Dipl.Chem."
if (string.indexOf("Dr. med")!==-1) myReturn ="Dr. med"
if (string.indexOf("Prof. Dr. med. Dr. rer. n")!==-1) myReturn ="Prof. Dr. med. Dr. rer. n"
if (string.indexOf("DIPL. CH Dr.")!==-1) myReturn ="DIPL. CH Dr."
if (string.indexOf("PD Dr. Dr.")!==-1) myReturn ="PD Dr. Dr."
if (string.indexOf("Dipl.-Min.")!==-1) myReturn ="Dipl.-Min."
if (string.indexOf("Dipl.Geol.")!==-1) myReturn ="Dipl. Geol."
if (string.indexOf("Dr. Dr. h.c.")!==-1) myReturn ="Dr. Dr. h.c."
if (string.indexOf("Uni. Prof. Dr. med.")!==-1) myReturn ="Uni. Prof. Dr. med."
if (string.indexOf("MD Dr. med.")!==-1) myReturn ="MD Dr. med."
return myReturn
}

function checkNumber(string) {
	var patternArray = new Array();
	patternArray.push(/^((00)(49)|0)(15[0-9]{2}|16[0-9]{1}|17[0-9]{1})([0-9]{5,8})$/) //DE
	patternArray.push(/^((00)(32))(47[2-9]{1}|48[4-6]{1}|49[4-9]{1}|45[56]{1}|46[05-8]{1})([0-9]{6,8})$/) //BEL
	patternArray.push(/^((00)(352))(6[2|5-7|9]{1}1)([0-9]{6,8})$/) //LUX
	patternArray.push(/^((00)(33))(7[0-9]{2}|6[0-9]{2})([0-9]{6,8})$/) //FRA
	patternArray.push(/^((00)(41))(7[95]|774)([0-9]{6,8})$/) //CHE
	patternArray.push(/^((00)(43))(66[0459]{1}|650|67[06-7]{1}|68[018]{1}|690|6998)([0-9]{6,8})$/)//AUT
	patternArray.push(/^((00)(31))(6[1-58])([0-9]{6,8})$/) //NLD
	patternArray.push(/^((00)(45))(20|31|4[02]|5[03]|6[01]|71|81|9[13])([0-9]{6})$/)//DNK
	patternArray.push(/^((00)(48))(45|5[0137]|6[069]|7[2389]|88)([0-9]{7})$/) //PL
	patternArray.push(/^((00)(420))(60[1-8]|7[0237]|790|910)([0-9]{6,8})$/)//CZE
	patternArray.push(/^((00)(34))(6[0-9]|7[1-9])([0-9]{7})$/) //ES
	patternArray.push(/^((00)(44))(7[1|3-9|9112|9118])([0-9]{6,8})$/) //UK
	patternArray.push(/^((00)(39))(3[[2348][0-9]|6[0-8]|[0-3]|51])([0-9]{6,7})$/) //IT
	patternArray.push(/^((00)(351))(9[0126])([0-9]{6,7})$/) // PRT
	patternArray.push(/^((00)(380))(4[458]|322?|50|6[3678]|9[12456789]|73)([0-9]{6,7})$/) // UKR
	var found = false;
	for (var i = 0; i < patternArray.length; i++) {
		var pattern = patternArray[i];
		if (pattern.test(string)) {found=true;break;}
	}
	return found;
	
}// Allg. Anpassungen im MSH Segment
// MSH
tmp['MSH'] = msg['MSH'].copy();
tmp['MSH']['MSH.12']['MSH.12.1'] = '2.3';
tmp['MSH']['MSH.5']['MSH.5.1'] = 'MEDOS';

// MSH6.1 Anpassung.

var strErbringendeFEIn = msg['MSH']['MSH.6']['MSH.6.1'].toString();
var strErbringendeFEOut;

// [1] IM_960740
// [2] KR_960770
// [3] MR_945449
// [4] NR_960760
// [5] OF_960720
// [6] ST_945447
// [7] ZE_945490

// [1] FE INNERE MEDIZIN;FE Innere Medizin;;FE Innere Medizin;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [2] FE KINDERRADIOLOGIE;FE Kinderradiologie;;FE Kinderradiologie;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [3]FE MR-TOMOGRAPHIE;FE MR-Tomographie;;FE MR-Tomographie;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [4] FE NEURORADIOLOGIE;FE Neuroradiologie;;FE Neuroradiologie;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [5] FE OPERATIVE F�CHER;FE Operative F?cher;;FE Operative F?cher;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [6] FE STRAHLENTHERAPIE;FE Strahlentherapie;;FE Strahlentherapie;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [7] FE ZENTRALEINHEIT;FE Zentraleinheit;;FE Zentraleinheit;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// weitere Anpassungen 07.12.2017, PK:
// [8] Zentrale Terminvergabe = Kostenstelle 0000000
// [9] FE Godesh�he 		= Kostenstelle 0000001

switch(strErbringendeFEIn) {
    case 'FE Innere Medizin':
        strErbringendeFEOut = 'RAD.960740';
        break;
    case 'FE Kinderradiologie':
        strErbringendeFEOut = 'RAD.960770';
        break;
    case 'FE MR-Tomographie':
        strErbringendeFEOut = 'RAD.945449';
        break;
    case 'FE Neuroradiologie':
        strErbringendeFEOut = 'RAD.960760';
        break;
    case 'FE Operative F�cher':
        strErbringendeFEOut = 'RAD.960720';
        break;
    case 'FE Strahlentherapie':
        strErbringendeFEOut = 'RAD.945447';
        break;
    case 'FE Zentraleinheit':
        strErbringendeFEOut = 'RAD.945490';
        break;
    case 'FE Zentrale Terminvergabe':
        strErbringendeFEOut = 'RAD.0000000';
        break;
    case 'FE Godesh�he':
        strErbringendeFEOut = 'RAD.0000001';
        break;
    default:
        strErbringendeFEOut = 'RAD';
} 

tmp['MSH']['MSH.6']['MSH.6.1'] = strErbringendeFEOut;


//PID
tmp['PID'] = msg['PID'].copy();

// PID G f�r Godesh�he voran stellen
tmp['PID'] = 'G' + msg['PID']['PID.3']['PID.3.1'].toString();



// PV1
tmp['PV1'] = msg['PV1'].copy();

// Fallnummer G f�r Godesh�he voran stellen
tmp['PV1']['PV1.19']['PV1.19.1'] = 'G' + msg['PV1']['PV1.19']['PV1.19.1'].toString();


// ORC
tmp['ORC'] = msg['ORC'].copy();


// OBR

tmp['OBR'] = msg['OBR'].copy();

// OBX

// Herr Faix bittet um Umsetzung folgender Logik:
// WENN im OBX3.1 Feld "Kontraindikator" steht, DANN soll ein "-"
// und der Feldinhalt des "OBX5.1"  an den Feldinhalt angeh?ngt werden.
// Zudem soll im OBX5.1 ein "J" geschrieben werden.
// PK, 18.05.2015

for each (seg in msg.children()) {

	if (seg.name().toString() == "OBX") {

		var strVT   = seg['OBX.2']['OBX.2.1'].toString();
		var strOBX3 = seg['OBX.3']['OBX.3.1'].toString();
		// logger.error(strOBX3);

		if (strVT == 'ST') {

		var tmpOBXCount = tmp['OBX'].length();		// Aktuelle Anzahl an OBX Segmenten in tmp-Nachricht.
		createSegment('OBX', tmp, tmpOBXCount)	// neue OBX in tmp Nachricht anlegen

			if  (strOBX3 == "kontraindikationen" || strOBX3 == "infektion") {

				//		seg['OBX.3']['OBX.3.1'] = strOBX3 + '-' + seg['OBX.5']['OBX.5.1'].toString();
				// 		?nderung 31.08.2015, i.A. Hr. Faix
				// 		WENN im OBX-3 "Kontraindikation steht, dass soll der OBX-5 Feldinhalt in das
				//		OBX-3 Feld geschrieben werden.

				tmp['OBX'][tmpOBXCount]['OBX.2']['OBX.2.1'] = seg['OBX.2']['OBX.2.1'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.3']['OBX.3.1'] = seg['OBX.5']['OBX.5.1'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.5']['OBX.5.1'] = "J";

			} else {

				tmp['OBX'][tmpOBXCount] = seg.copy();

			}

		} else if (strVT == 'LOI') {

			// Herr Faix bittet um die Zusammensetzung des OBX5 Feldes aus
			// den Inhalten der Felder OBX.5.1 und OBX.6.1.
			// Hintergrund: das Zielsystem ben?tigt den Numerischen Wert mit der Ma?einheit.
			var strOBX5 			= seg['OBX.5']['OBX.5.1'].toString();
			var strOBX5Subfelder 	= strOBX5.split("#");
			var strOBX5_S1 			= strOBX5Subfelder[0];	// Analytwert.
			var strOBX5_S2 			= strOBX5Subfelder[1];	// Erbringungsdatum.
			var strOBX6 			= seg['OBX.6']['OBX.6.1'].toString();	// Masseinheit.

//			if (strOBX5_S1.trim() != '0.00') {		// trim()-Funktion l?scht die Leerzeichen; Original Textfeldeintrag = '0.00 '.

				var tmpOBXCount = tmp['OBX'].length();		// Aktuelle Anzahl an OBX Segmenten in tmp-Nachricht.
				createSegment('OBX', tmp, tmpOBXCount)	// neue OBX in tmp Nachricht anlegen

				tmp['OBX'][tmpOBXCount]['OBX.2']['OBX.2.1'] = seg['OBX.2']['OBX.2.1'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.3']['OBX.3.1'] = seg['OBX.3']['OBX.3.1'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.3']['OBX.3.2'] = seg['OBX.3']['OBX.3.2'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.5']['OBX.5.1'] = strOBX5_S1 + ' ' + strOBX6 + ' ' + strOBX5_S2;
//			}

		}

	}
}// Allg. Anpassungen im MSH Segment
// MSH
tmp['MSH'] = msg['MSH'].copy();
tmp['MSH']['MSH.12']['MSH.12.1'] = '2.3';
tmp['MSH']['MSH.5']['MSH.5.1'] = 'MEDOS';

// MSH6.1 Anpassung.

var strErbringendeFEIn = msg['MSH']['MSH.6']['MSH.6.1'].toString();
var strErbringendeFEOut;

// [1] IM_960740
// [2] KR_960770
// [3] MR_945449
// [4] NR_960760
// [5] OF_960720
// [6] ST_945447
// [7] ZE_945490

// [1] FE INNERE MEDIZIN;FE Innere Medizin;;FE Innere Medizin;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [2] FE KINDERRADIOLOGIE;FE Kinderradiologie;;FE Kinderradiologie;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [3]FE MR-TOMOGRAPHIE;FE MR-Tomographie;;FE MR-Tomographie;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [4] FE NEURORADIOLOGIE;FE Neuroradiologie;;FE Neuroradiologie;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [5] FE OPERATIVE F�CHER;FE Operative F?cher;;FE Operative F?cher;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [6] FE STRAHLENTHERAPIE;FE Strahlentherapie;;FE Strahlentherapie;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [7] FE ZENTRALEINHEIT;FE Zentraleinheit;;FE Zentraleinheit;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// weitere Anpassungen 07.12.2017, PK:
// [8] Zentrale Terminvergabe = Kostenstelle 0000000
// [9] FE Godesh�he 		= Kostenstelle 0000001

switch(strErbringendeFEIn) {
    case 'FE Innere Medizin':
        strErbringendeFEOut = 'RAD.960740';
        break;
    case 'FE Kinderradiologie':
        strErbringendeFEOut = 'RAD.960770';
        break;
    case 'FE MR-Tomographie':
        strErbringendeFEOut = 'RAD.945449';
        break;
    case 'FE Neuroradiologie':
        strErbringendeFEOut = 'RAD.960760';
        break;
    case 'FE Operative F�cher':
        strErbringendeFEOut = 'RAD.960720';
        break;
    case 'FE Strahlentherapie':
        strErbringendeFEOut = 'RAD.945447';
        break;
    case 'FE Zentraleinheit':
        strErbringendeFEOut = 'RAD.945490';
        break;
    case 'FE Zentrale Terminvergabe':
        strErbringendeFEOut = 'RAD.0000000';
        break;
    case 'FE Godesh�he':
        strErbringendeFEOut = 'RAD.0000001';
        break;
     case 'UKB':
        strErbringendeFEOut = 'RAD.0000001';
        break;
    default:
        strErbringendeFEOut = 'RAD';
} 

tmp['MSH']['MSH.6']['MSH.6.1'] = strErbringendeFEOut;


//PID
tmp['PID'] = msg['PID'].copy();

// PID G f�r Godesh�he voran stellen
tmp['PID']['PID.3']['PID.3.1'] = 'G' + msg['PID']['PID.3']['PID.3.1'].toString();



// PV1
tmp['PV1'] = msg['PV1'].copy();

// Fallnummer G f�r Godesh�he voran stellen
tmp['PV1']['PV1.19']['PV1.19.1'] = 'G' + msg['PV1']['PV1.19']['PV1.19.1'].toString();


// ORC
tmp['ORC'] = msg['ORC'].copy();

tmp['ORC']['ORC.2']['ORC.2.1'] = 'G' + msg['ORC']['ORC.2']['ORC.2.1'].toString();
tmp['ORC']['ORC.4']['ORC.4.1'] = 'G' + msg['ORC']['ORC.2']['ORC.2.1'].toString();

// OBR

tmp['OBR'] = msg['OBR'].copy();

tmp['OBR']['OBR.2']['OBR.2.1'] = 'G' + msg['OBR']['OBR.2']['OBR.2.1'].toString();

// OBX

// Herr Faix bittet um Umsetzung folgender Logik:
// WENN im OBX3.1 Feld "Kontraindikator" steht, DANN soll ein "-"
// und der Feldinhalt des "OBX5.1"  an den Feldinhalt angeh?ngt werden.
// Zudem soll im OBX5.1 ein "J" geschrieben werden.
// PK, 18.05.2015

for each (seg in msg.children()) {

	if (seg.name().toString() == "OBX") {

		var strVT   = seg['OBX.2']['OBX.2.1'].toString();
		var strOBX3 = seg['OBX.3']['OBX.3.1'].toString();
		// logger.error(strOBX3);

		if (strVT == 'ST') {

		var tmpOBXCount = tmp['OBX'].length();		// Aktuelle Anzahl an OBX Segmenten in tmp-Nachricht.
		createSegment('OBX', tmp, tmpOBXCount)	// neue OBX in tmp Nachricht anlegen

			if  (strOBX3 == "kontraindikationen" || strOBX3 == "infektion") {

				//		seg['OBX.3']['OBX.3.1'] = strOBX3 + '-' + seg['OBX.5']['OBX.5.1'].toString();
				// 		?nderung 31.08.2015, i.A. Hr. Faix
				// 		WENN im OBX-3 "Kontraindikation steht, dass soll der OBX-5 Feldinhalt in das
				//		OBX-3 Feld geschrieben werden.

				tmp['OBX'][tmpOBXCount]['OBX.2']['OBX.2.1'] = seg['OBX.2']['OBX.2.1'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.3']['OBX.3.1'] = seg['OBX.5']['OBX.5.1'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.5']['OBX.5.1'] = "J";

			} else {

				tmp['OBX'][tmpOBXCount] = seg.copy();

			}

		} else if (strVT == 'LOI') {

			// Herr Faix bittet um die Zusammensetzung des OBX5 Feldes aus
			// den Inhalten der Felder OBX.5.1 und OBX.6.1.
			// Hintergrund: das Zielsystem ben?tigt den Numerischen Wert mit der Ma?einheit.
			var strOBX5 			= seg['OBX.5']['OBX.5.1'].toString();
			var strOBX5Subfelder 	= strOBX5.split("#");
			var strOBX5_S1 			= strOBX5Subfelder[0];	// Analytwert.
			var strOBX5_S2 			= strOBX5Subfelder[1];	// Erbringungsdatum.
			var strOBX6 			= seg['OBX.6']['OBX.6.1'].toString();	// Masseinheit.

//			if (strOBX5_S1.trim() != '0.00') {		// trim()-Funktion l?scht die Leerzeichen; Original Textfeldeintrag = '0.00 '.

				var tmpOBXCount = tmp['OBX'].length();		// Aktuelle Anzahl an OBX Segmenten in tmp-Nachricht.
				createSegment('OBX', tmp, tmpOBXCount)	// neue OBX in tmp Nachricht anlegen

				tmp['OBX'][tmpOBXCount]['OBX.2']['OBX.2.1'] = seg['OBX.2']['OBX.2.1'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.3']['OBX.3.1'] = seg['OBX.3']['OBX.3.1'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.3']['OBX.3.2'] = seg['OBX.3']['OBX.3.2'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.5']['OBX.5.1'] = strOBX5_S1 + ' ' + strOBX6 + ' ' + strOBX5_S2;
//			}

		}

	}
}// Transformationen:

tmp['MSH']['MSH.7']['MSH.7.1']	=	msg['abfragezeit'].toString();		// Date7Time of Message
tmp['MSH']['MSH.10']['MSH.10.1'] 	= 	UUIDGenerator.getUUID();				// Message Control ID

// PID
tmp['PID']['PID.2']['PID.2.1']	=	msg['pid'].toString();	// PID
tmp['PID']['PID.3']['PID.3.1']	=	msg['pid'].toString();	// PID
tmp['PID']['PID.5']['PID.5.1']	=	msg['name'].toString();	// Familienname (Nachname)
tmp['PID']['PID.5']['PID.5.2']	=	msg['vorname'].toString();	// Vorname
tmp['PID']['PID.7']['PID.7.1']	= 	msg['hl7gebdat'].toString(); // Geburtsdatum
	// PV1
tmp['PV1']['PV1.19']['PV1.19.1']	=	msg['fallnr'].toString(); 	// FALLNR
	// ORC
tmp['ORC']['ORC.2']['ORC.2.1']	= 	msg['protokollnummer'].toString();
tmp['ORC']['ORC.9']['ORC.9.1']	= 	msg['befunddatum'].toString();
tmp['ORC']['ORC.12']['ORC.12.1']	=	msg['kstnr'].toString();
//	OBR
tmp['OBR']['OBR.2']['OBR.2.1']	= 	msg['protokollnummer'].toString();
tmp['OBR']['OBR.7']['OBR.7.1']	= 	msg['befunddatum'].toString();
tmp['OBR']['OBR.16']['OBR.16.1']	= 	msg['kstnr'].toString();

//	OBX
tmp['OBX']['OBX.2']['OBX.2.1']	= 	'NM';			// Value Typ, zB. Numeric
tmp['OBX']['OBX.3']['OBX.3.1']	= 	msg['code'].toString();		// Obersavtion Identifier, z.B. "K_NA"
tmp['OBX']['OBX.3']['OBX.3.2']	= 	msg['bezeichnung'].toString(); 	// Text

	// logger.error(strWERT_HL7 + ': ' + strTEXT_HL7);
	if (msg['wert_hl7'].toString() != null) {
	
		tmp['OBX']['OBX.5']['OBX.5.1']	= msg['wert_hl7'].toString();		// Achtung: wenn strWERT_HL7 = null, 
												// dann muss die Spalte strTEXT_HL7 genommen werden.
	} else {

		tmp['OBX']['OBX.5']['OBX.5.1']	= msg['text_hl7'].toString();
	}
	
	if(msg['einheit'].toString() != null) {
		
		tmp['OBX']['OBX.6']['OBX.6.1']		= msg['einheit'].toString();
	}

	if(msg['normalwerte'].toString() != null) {
		
		tmp['OBX']['OBX.7']['OBX.7.1']		= msg['normalwerte'].toString();
	}

	if(msg['observationmethod'].toString() != null) {		// wenn nicht null
		
		tmp['OBX']['OBX.17']['OBX.17.1']	= msg['observationmethod'].toString();
	
	}// Passt das ADT-Format von AGFA f�r die HNO an 
// 
// $Id$


var oe_mapping = {
	"04PAHNOAMB":"0450",
    	"0451HNOAMB":"0451",
    	"0451NHNO":"0451",
	"0451PHNO":"0451",
	"0452PUPAMB":"0452",
    	"0461HNOAOP":"0461",
    	"9004INZ":"9004",
    	"9304CIO":"9304",
    	"9304NCIO":"9304",
    	"9304PCIO":"9304",
}

var koe_mapping = {
	"934195":"90",
	"934198":"93",
}

var facility = '0001';

var patientclass_mapping = {
	"P":"O",	// vorstation�r
	"NS":"I"  // nachstation�r
}

tmp = msg.copy();

// f�r Monitoring
channelMap.put('patId', msg['PID']['PID.3']['PID.3.1'].toString());
channelMap.put('visitId', msg['PV1']['PV1.19']['PV1.19.1'].toString());

// MSH
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString().tsrpad();

// EVN
// Zeitpunkt des Ereignisses
if (msg['ZBE'].length() > 0)
{
	tmp['EVN']['EVN.2']['EVN.2.1'] = msg['ZBE']['ZBE.2']['ZBE.2.1'].toString().tsrpad();
}
else tmp['EVN']['EVN.2']['EVN.2.1'] = msg['EVN']['EVN.3']['EVN.3.1'].toString().tsrpad();

// Bewegungsart oder Behandlungskategorie
if (msg['PV2']['PV2.7']['PV2.7.1'].toString().length > 0)
	tmp['EVN']['EVN.4']['EVN.4.1'] = msg['PV2']['PV2.7']['PV2.7.1'].toString();
else 
	tmp['EVN']['EVN.4']['EVN.4.1'] = msg['PV2']['PV2.3']['PV2.3.1'].toString();

// PID
if (msg['PID']['PID.13'][0]['PID.13.1'].toString().length > 16)
	tmp['PID']['PID.13'] = msg['PID']['PID.13'][0]['PID.13.1'].toString().substring(0,16);


// PV1
if (msg['PV1'].length() > 0) {
	tmp['PV1']['PV1.2']['PV1.2.1'] = 
		msg['PV1']['PV1.2']['PV1.2.1'].toString().listlookup(patientclass_mapping, msg['PV1']['PV1.2']['PV1.2.1'].toString());
	// Pflegerische und fachliche OE
    if (msg['PV1']['PV1.3']['PV1.3.5'].toString() == facility)
 		tmp['PV1']['PV1.3']['PV1.3.4'] = msg['PV1']['PV1.3']['PV1.3.4'].toString();
    else tmp['PV1']['PV1.3']['PV1.3.4'] = msg['PV1']['PV1.3']['PV1.3.4'].toString().substring(0,2);
	tmp['PV1']['PV1.3']['PV1.3.1'] = msg['PV1']['PV1.3']['PV1.3.6'].toString();
    if (msg['PV1']['PV1.6']['PV1.6.1'].toString().length > 0)
	{
		if (msg['PV1']['PV1.6']['PV1.6.5'].toString() == facility)
 			tmp['PV1']['PV1.6']['PV1.6.4'] = msg['PV1']['PV1.6']['PV1.6.4'].toString();
        else tmp['PV1']['PV1.6']['PV1.6.4'] = msg['PV1']['PV1.6']['PV1.6.6'].toString().listlookup(koe_mapping, '04');
    	tmp['PV1']['PV1.6']['PV1.6.1'] = msg['PV1']['PV1.6']['PV1.6.6'].toString();
	}
    /*
	delete tmp['PV1']['PV1.7'];
	delete tmp['PV1']['PV1.8'];
	delete tmp['PV1']['PV1.9'];
    */
	tmp['PV1']['PV1.44']['PV1.44.1'] = msg['PV1']['PV1.44']['PV1.44.1'].toString().tsrpad();
	if (msg['PV1']['PV1.45']['PV1.45.1'].toString().length > 0)
	{
		tmp['PV1']['PV1.45']['PV1.45.1'] = msg['PV1']['PV1.45']['PV1.45.1'].toString().tsrpad();
	}
	else delete tmp['PV1']['PV1.45'];
	/*
    delete tmp['PV1']['PV1.46'];
	delete tmp['PV1']['PV1.47'];
    delete tmp['PV1']['PV1.48'];
	delete tmp['PV1']['PV1.49'];
	delete tmp['PV1']['PV1.50'];
	delete tmp['PV1']['PV1.51'];
	*/
}

// ZBE

// Bewegungs-ID aus SAP zur�ckgewinnen

if (msg['ZBE'].length() > 0)
{
	if (msg['ZBE']['ZBE.1']['ZBE.1.1'].toString().indexOf(msg['PV1']['PV1.19']['PV1.19.1'].toString()) == 0) { 
		tmp['ZBE']['ZBE.1']['ZBE.1.1'] = 
			msg['ZBE']['ZBE.1']['ZBE.1.1'].toString().substr(
				msg['PV1']['PV1.19']['PV1.19.1'].toString().length, 
				msg['ZBE']['ZBE.1']['ZBE.1.1'].toString().length 
				- msg['PV1']['PV1.19']['PV1.19.1'].toString().length);
		tmp['ZBE']['ZBE.1']['ZBE.1.2'] = 'ISH';
	}
    tmp['ZBE']['ZBE.2']['ZBE.2.1'] = msg['ZBE']['ZBE.2']['ZBE.2.1'].toString().tsrpad();
}


// �berfl�ssige Segmente l�schen
/*
for (var i=0;i<msg['NK1'].length(); i++) {
	delete tmp['NK1'][0];
}
for (var i=0;i<msg['PV2'].length(); i++) {
	delete tmp['PV2'][0];
}
for (var i=0;i<msg['IN1'].length(); i++) {
	delete tmp['IN1'][0];
}
for (var i=0;i<msg['IN2'].length(); i++) {
	delete tmp['IN2'][0];
}
for (var i=0;i<msg['ZAS'].length(); i++) {
	delete tmp['ZAS'][0];
}
for (var i=0;i<msg['ZVK'].length(); i++) {
	delete tmp['ZVK'][0];
}
*/
		
msg = tmp.copy();//
//
// $Id$

/* Tabellendefinition PATIENTEN:

ADRESSE1	VARCHAR(70)
ADRESSE2	VARCHAR(70)
ANREDE	VARCHAR(30)
ARBEITGEBER	VARCHAR(200)
ARCHIVNUMMER	VARCHAR(10)
BEHANDARZTID	INTEGER
BERUF	VARCHAR(200)
EMAIL	VARCHAR(70)
ENTFERNUNG	INTEGER
EXEMPLARE	SMALLINT
FAX	VARCHAR(30)
GEBURTEN	SMALLINT
GEBURTSDATUM	Nullable
GESCHLECHT	CHAR(1)
GEWICHT	SMALLINT
GROESSE	SMALLINT
HAUSARZT	VARCHAR(200)
KARTEIKARTE	BLOB
KINDER	SMALLINT
KOSTENTRAEGERID	INTEGER
KURZINFO	VARCHAR(200)
LASTSCHRIFTBIC	VARCHAR(15)
LASTSCHRIFTBLZ	Nullable
LASTSCHRIFTEINZUGPAT	SMALLINT
LASTSCHRIFTIBAN	VARCHAR(34)
LASTSCHRIFTKONTOINHABER	Nullable
LASTSCHRIFTKONTOISTSWIFT	SMALLINT
LASTSCHRIFTKONTONR	Nullable
LETZTEBEHANDLUNG	Nullable
NAME	VARCHAR(42)
ORT	VARCHAR(50)
PLZ	VARCHAR(12)
REANSCHRADRESSE1	VARCHAR(70)
REANSCHRADRESSE2	VARCHAR(70)
REANSCHRANREDE	VARCHAR(30)
REANSCHRNAME	VARCHAR(42)
REANSCHRORT	VARCHAR(50)
REANSCHRPLZ	VARCHAR(12)
REANSCHRTITEL	VARCHAR(30)
REANSCHRVORHANDEN	SMALLINT
REANSCHRVORNAME	VARCHAR(24)
REANSCHRZUSATZ	VARCHAR(70)
SCHWANGERSCHAFTEN	SMALLINT
TELEFON1	VARCHAR(30)
TELEFON2	VARCHAR(30)
TITEL	VARCHAR(30)
*/

// Header nur beim ersten Mal am Tag ausgeben

today = new Date();

header = globalChannelMap.get('TODAY');
if ((header != undefined) && (today.toDateString() == header)) { 
	globalChannelMap.put('ColumnNames','');
} else {
	globalChannelMap.put('TODAY',today.toDateString());
	globalChannelMap.put('ColumnNames',"Patienten 5.07\r\n\"ANREDE\",\"TITEL\",\"VORNAME\",\"NAME\",\"ZUSATZ\",\"ADRESSE1\",\"ADRESSE2\",\"PLZ\",\"ORT\",\"REANSCHRANREDE\",\"REANSCHRTITEL\",\"REANSCHRVORNAME\",\"REANSCHRNAME\",\"REANSCHRZUSATZ\",\"REANSCHRADRESSE1\",\"REANSCHRADRESSE2\",\"REANSCHRPLZ\",\"REANSCHRORT\",\"REANSCHRVORHANDEN\",\"TELEFON1\",\"TELEFON2\",\"FAX\",\"EMAIL\",\"KOSTENTRAEGERID\",\"BEHANDARZTID\",\"UEBERWARZTID\",\"GEBURTSDATUM\",\"GESCHLECHT\",\"ENTFERNUNG\",\"HAUSARZT\",\"KURZINFO\",\"PATIENTSEIT\",\"LETZTEBEHANDLUNG\",\"ARCHIVNUMMER\",\"GROESSE\",\"GEWICHT\",\"SCHWANGERSCHAFTEN\",\"GEBURTEN\",\"KINDER\",\"BERUF\",\"BERUFSEIT\",\"ARBEITGEBER\",\"EXEMPLARE\",\"LASTSCHRIFTEINZUGPAT\",\"LASTSCHRIFTBLZ\",\"LASTSCHRIFTKONTONR\",\"LASTSCHRIFTKONTOINHABER\",\"LASTSCHRIFTIBAN\",\"LASTSCHRIFTBIC\",\"LASTSCHRIFTKONTOISTSWIFT\"\r\n");
}
	

gebdat = new Date();
today = new Date();

if(msg['PID']['PID.8']['PID.8.1'].toString() == 'M')
{
	tmp['row']['ANREDE'] = "\"Herr\"";
} else {
	tmp['row']['ANREDE'] = "\"Frau\"";
}


tmp['row']['TITEL'] = "\"" + msg['PID']['PID.5']['PID.5.6'].toString() + "\"";
tmp['row']['VORNAME'] = "\"" + msg['PID']['PID.5']['PID.5.2'].toString() + "\"";
tmp['row']['NAME'] = "\"" + msg['PID']['PID.5']['PID.5.1'].toString() + "\"";
tmp['row']['ZUSATZ'] = "\"" + msg['PID']['PID.5']['PID.5.5'].toString() + "\"";
tmp['row']['ADRESSE1'] = "\"" + msg['PID']['PID.11']['PID.11.1'].toString() + "\"";
tmp['row']['PLZ'] = "\"" + msg['PID']['PID.11']['PID.11.5'].toString() + "\"";
tmp['row']['ORT'] = "\"" + msg['PID']['PID.11']['PID.11.3'].toString() + "\"";
if (msg['IN1'].length() > 0)
{
	tmp['row']['REANSCHRVORHANDEN'] = "\"1\"";	
	tmp['row']['REANSCHRNAME'] = "\"" + msg['IN1'][0]['IN1.16']['IN1.16.1'].toString() + "\"";
	tmp['row']['REANSCHRVORNAME'] = "\"" + msg['IN1'][0]['IN1.16']['IN1.16.2'].toString() + "\"";
	tmp['row']['REANSCHRADRESSE1'] = "\"" + msg['IN1'][0]['IN1.19']['IN1.19.1'].toString() + "\"";
	tmp['row']['REANSCHRPLZ'] = "\"" + msg['IN1'][0]['IN1.19']['IN1.19.5'].toString() + "\"";
	tmp['row']['REANSCHRORT'] = "\"" + msg['IN1'][0]['IN1.19']['IN1.19.3'].toString() + "\"";
	
	tmp['row']['REANSCHRVORNAME'] = "\"" + msg['IN1'][0]['IN1.16']['IN1.16.2'].toString() + "\"";
	tmp['row']['REANSCHRNAME'] = "\"" + msg['IN1'][0]['IN1.16']['IN1.16.1'].toString() + "\"";
	tmp['row']['REANSCHRZUSATZ'] = "\"" + msg['IN1'][0]['IN1.19']['IN1.19.2'].toString() + "\"";
	tmp['row']['REANSCHRADRESSE1'] = "\"" + msg['IN1'][0]['IN1.19']['IN1.19.1'].toString() + "\"";
	tmp['row']['REANSCHRPLZ'] = "\"" + msg['IN1'][0]['IN1.19']['IN1.19.5'].toString() + "\"";
	tmp['row']['REANSCHRORT'] = "\"" + msg['IN1'][0]['IN1.19']['IN1.19.3'].toString() + "\"";
} else tmp['row']['REANSCHRVORHANDEN'] = "\"0\"";

gebdat.hl7parse(msg['PID']['PID.7']['PID.7.1'].toString());
tmp['row']['GEBURTSDATUM'] = "\"" + gebdat.toGermanDateString() + "\"";
if(msg['PID']['PID.8']['PID.8.1'].toString() == 'M')
{
	tmp['row']['GESCHLECHT'] = "\"M\"";
} else {
	tmp['row']['GESCHLECHT'] = "\"W\"";
}
today.hl7parse(msg['EVN']['EVN.2']['EVN.2.1'].toString());
tmp['row']['PATIENTSEIT'] = "\"" + today.toGermanDateString() + "\"";
tmp['row']['LETZTEBEHANDLUNG'] = "\"" + today.toGermanDateString() + "\"";
tmp['row']['ARCHIVNUMMER'] = "\"" + Number(msg['PID']['PID.3']['PID.3.1'].toString()) + "\"";

tmp['row']['EXEMPLARE'] = "\"0\"";
tmp['row']['LASTSCHRIFTEINZUGPAT'] = "\"0\"";
tmp['row']['LASTSCHRIFTKONTOISTSWIFT'] = "\"0\"\r";// Passt das ADT-Format von AGFA f�r die HNO an 
// 
// $Id$


var oe_mapping = {
	"04PAHNOAMB":"0450",
    	"0451HNOAMB":"0451",
    	"0451NHNO":"0451",
	"0451PHNO":"0451",
	"0452PUPAMB":"0452",
    	"0461HNOAOP":"0461",
    	"9004INZ":"9004",
    	"9304CIO":"9304",
    	"9304NCIO":"9304",
    	"9304PCIO":"9304",
}

var koe_mapping = {
	"934195":"90",
	"934198":"93",
}

var facility = '0001';

var patientclass_mapping = {
	"P":"O",	// vorstation�r
	"NS":"I"  // nachstation�r
}

tmp = msg.copy();

// f�r Monitoring
channelMap.put('patId', msg['PID']['PID.3']['PID.3.1'].toString());
channelMap.put('visitId', msg['PV1']['PV1.19']['PV1.19.1'].toString());

// MSH
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString().tsrpad();

// EVN
// Zeitpunkt des Ereignisses
if (msg['ZBE'].length() > 0)
{
	tmp['EVN']['EVN.2']['EVN.2.1'] = msg['ZBE']['ZBE.2']['ZBE.2.1'].toString().tsrpad();
}
else tmp['EVN']['EVN.2']['EVN.2.1'] = msg['EVN']['EVN.3']['EVN.3.1'].toString().tsrpad();

// Bewegungsart oder Behandlungskategorie
if (msg['PV2']['PV2.7']['PV2.7.1'].toString().length > 0)
	tmp['EVN']['EVN.4']['EVN.4.1'] = msg['PV2']['PV2.7']['PV2.7.1'].toString();
else 
	tmp['EVN']['EVN.4']['EVN.4.1'] = msg['PV2']['PV2.3']['PV2.3.1'].toString();

// PID
if (msg['PID']['PID.13'][0]['PID.13.1'].toString().length > 16)
	tmp['PID']['PID.13'] = msg['PID']['PID.13'][0]['PID.13.1'].toString().substring(0,16);


// PV1
if (msg['PV1'].length() > 0) {
	tmp['PV1']['PV1.2']['PV1.2.1'] = 
		msg['PV1']['PV1.2']['PV1.2.1'].toString().listlookup(patientclass_mapping, msg['PV1']['PV1.2']['PV1.2.1'].toString());
	// Pflegerische und fachliche OE
    if (msg['PV1']['PV1.3']['PV1.3.5'].toString() == facility)
 		tmp['PV1']['PV1.3']['PV1.3.4'] = msg['PV1']['PV1.3']['PV1.3.4'].toString();
    else tmp['PV1']['PV1.3']['PV1.3.4'] = msg['PV1']['PV1.3']['PV1.3.4'].toString().substring(0,2);
	tmp['PV1']['PV1.3']['PV1.3.1'] = msg['PV1']['PV1.3']['PV1.3.6'].toString();
    if (msg['PV1']['PV1.6']['PV1.6.1'].toString().length > 0)
	{
		if (msg['PV1']['PV1.6']['PV1.6.5'].toString() == facility)
 			tmp['PV1']['PV1.6']['PV1.6.4'] = msg['PV1']['PV1.6']['PV1.6.4'].toString();
        else tmp['PV1']['PV1.6']['PV1.6.4'] = msg['PV1']['PV1.6']['PV1.6.6'].toString().listlookup(koe_mapping, '04');
    	tmp['PV1']['PV1.6']['PV1.6.1'] = msg['PV1']['PV1.6']['PV1.6.6'].toString();
	}
    /*
	delete tmp['PV1']['PV1.7'];
	delete tmp['PV1']['PV1.8'];
	delete tmp['PV1']['PV1.9'];
    */
	tmp['PV1']['PV1.44']['PV1.44.1'] = msg['PV1']['PV1.44']['PV1.44.1'].toString().tsrpad();
	if (msg['PV1']['PV1.45']['PV1.45.1'].toString().length > 0)
	{
		tmp['PV1']['PV1.45']['PV1.45.1'] = msg['PV1']['PV1.45']['PV1.45.1'].toString().tsrpad();
	}
	else delete tmp['PV1']['PV1.45'];
	/*
    delete tmp['PV1']['PV1.46'];
	delete tmp['PV1']['PV1.47'];
    delete tmp['PV1']['PV1.48'];
	delete tmp['PV1']['PV1.49'];
	delete tmp['PV1']['PV1.50'];
	delete tmp['PV1']['PV1.51'];
	*/
}

// ZBE

// Bewegungs-ID aus SAP zur�ckgewinnen

if (msg['ZBE'].length() > 0)
{
	if (msg['ZBE']['ZBE.1']['ZBE.1.1'].toString().indexOf(msg['PV1']['PV1.19']['PV1.19.1'].toString()) == 0) { 
		tmp['ZBE']['ZBE.1']['ZBE.1.1'] = 
			msg['ZBE']['ZBE.1']['ZBE.1.1'].toString().substr(
				msg['PV1']['PV1.19']['PV1.19.1'].toString().length, 
				msg['ZBE']['ZBE.1']['ZBE.1.1'].toString().length 
				- msg['PV1']['PV1.19']['PV1.19.1'].toString().length);
		tmp['ZBE']['ZBE.1']['ZBE.1.2'] = 'ISH';
	}
    tmp['ZBE']['ZBE.2']['ZBE.2.1'] = msg['ZBE']['ZBE.2']['ZBE.2.1'].toString().tsrpad();
}


// �berfl�ssige Segmente l�schen
/*
for (var i=0;i<msg['NK1'].length(); i++) {
	delete tmp['NK1'][0];
}
for (var i=0;i<msg['PV2'].length(); i++) {
	delete tmp['PV2'][0];
}
for (var i=0;i<msg['IN1'].length(); i++) {
	delete tmp['IN1'][0];
}
for (var i=0;i<msg['IN2'].length(); i++) {
	delete tmp['IN2'][0];
}
for (var i=0;i<msg['ZAS'].length(); i++) {
	delete tmp['ZAS'][0];
}
for (var i=0;i<msg['ZVK'].length(); i++) {
	delete tmp['ZVK'][0];
}
*/
		
msg = tmp.copy();// Passt das DFT Format der HNO an 
// 
// $Id$

tmp = msg.copy();

if (msg['PR1'].length() > 0)
	delete tmp['PR1'][0];
delete tmp['FT1']['FT1.21'];		

msg = tmp.copy();// Passt das ADT-Format von AGFA f�r die HNO an 
// 
// $Id$

var facility = '04';
var default_costcenter = '934190';

var patientclass_mapping = {
	"P":"O",	// vorstation�r
	"NS":"I", // nachstation�r
	"AO":"O",	// ambop
	"TS":"I", // teilstation�r
	"NS":"I"  // nachstation�r
};


tmp = msg.copy();

// PID
for(var i=0; i<msg['PID']['PID.13'].length(); i++) {
	if (msg['PID']['PID.13']['PID.13.3'].length() > 0) {
		if (msg['PID']['PID.13']['PID.13.3'][i].toString() == 'X.400')
		{
			tmp['PID']['PID.13'][i]['PID.13.1'] = '';
			tmp['PID']['PID.13'][i]['PID.13.2'] = '';
			tmp['PID']['PID.13'][i]['PID.13.3'] = 'internet';
			tmp['PID']['PID.13'][i]['PID.13.4'] = msg['PID']['PID.13'][i]['PID.13.1'].toString()
		}
	}		  
}

// PV1
if (msg['PV1'].length() > 0) {
	tmp['PV1']['PV1.2']['PV1.2.1'] = 
		msg['PV1']['PV1.2']['PV1.2.1'].toString().listlookup(patientclass_mapping, msg['PV1']['PV1.2']['PV1.2.1'].toString());
    	// fachliche OE
    	tmp['PV1']['PV1.3']['PV1.3.4'] = facility;
    	// pflegerische OE
    	if (msg['PV1']['PV1.3']['PV1.3.6'].toString().length > 0) {
   		tmp['PV1']['PV1.3']['PV1.3.1'] = msg['PV1']['PV1.3']['PV1.3.6'].toString();
	} else {
		tmp['PV1']['PV1.3']['PV1.3.1'] = default_costcenter;
	}
}

msg = tmp.copy();tmp['MSH']['MSH.7']['MSH.7.1']	=	msg['abfragezeit'].toString();		// Date7Time of Message
tmp['MSH']['MSH.10']['MSH.10.1'] 	= 	UUIDGenerator.getUUID();	// Message Control ID


// PID
tmp['PID']['PID.2']['PID.2.1']	=	msg['pid'].toString();	// PID
tmp['PID']['PID.3']['PID.3.1']	=	msg['pid'].toString();	// PID
	// PV1
tmp['PV1']['PV1.19']['PV1.19.1']	=	msg['fallnr'].toString(); 	// FALLNR
	// ORC
tmp['ORC']['ORC.2']['ORC.2.1']	= 	msg['protokollnummer'].toString().replace('K', '');
tmp['ORC']['ORC.9']['ORC.9.1']	= 	msg['befunddatum'].toString();
tmp['ORC']['ORC.12']['ORC.12.1']	=	msg['kstnr'].toString();
//	OBR
tmp['OBR']['OBR.2']['OBR.2.1']	= 	msg['protokollnummer'].toString().replace('K', '');
tmp['OBR']['OBR.7']['OBR.7.1']	= 	msg['befunddatum'].toString();
tmp['OBR']['OBR.16']['OBR.16.1']	= 	msg['kstnr'].toString();

//	OBX
tmp['OBX']['OBX.2']['OBX.2.1']	= 	'NM';			// Value Typ, zB. Numeric
tmp['OBX']['OBX.3']['OBX.3.1']	= 	msg['code'].toString().replace(/^[K]_/,'');		// Obersavtion Identifier, z.B. "K_NA"
tmp['OBX']['OBX.3']['OBX.3.2']	= 	msg['bezeichnung'].toString(); 	// Text

	// logger.error(strWERT_HL7 + ': ' + strTEXT_HL7);
	if (msg['wert_hl7'].toString() != null) {
	
		tmp['OBX']['OBX.5']['OBX.5.1']	= msg['wert_hl7'].toString();		// Achtung: wenn strWERT_HL7 = null, 
												// dann muss die Spalte strTEXT_HL7 genommen werden.
	} else {

		tmp['OBX']['OBX.5']['OBX.5.1']	= msg['text_hl7'].toString();
	}
	
	if(msg['einheit'].toString() != null) {
		
		tmp['OBX']['OBX.6']['OBX.6.1']		= msg['einheit'].toString();
	}

	if(msg['normalwerte'].toString() != null) {
		
		tmp['OBX']['OBX.7']['OBX.7.1']		= msg['normalwerte'].toString();
	}

	if(msg['observationmethod'].toString() != null) {		// wenn nicht null
		
		tmp['OBX']['OBX.17']['OBX.17.1']	= msg['observationmethod'].toString();
	
	}// Passt das DFT Format der HNO in BAR fuer AGFA an 
// 
// $Id$

tmp = msg.copy();

// MSH

tmp['MSH']['MSH.6']['MSH.6.1'] = 'UKB';
tmp['MSH']['MSH.9']['MSH.9.1'] = 'BAR';
tmp['MSH']['MSH.9']['MSH.9.2'] = 'P01';

// EVN 

tmp['EVN']['EVN.1']['EVN.1.1'] = 'P01';

if (msg['FT1'].length() > 0)
	delete tmp['FT1'];

// PR1
tmp['PR1']['PR1.1']['PR1.1.1'] = msg['MSH']['MSH.4']['MSH.4.1'].toString()
  + '-' + msg['PR1']['PR1.1']['PR1.1.1'].toString();		

msg = tmp.copy();// Erstellt aus einer MDM-Nachricht von ENTstatistics eine BAR-Nachricht 
// 
// $Id$

coding = globalChannelMap.get('coding');
prefix = '04-PENTS';
faculty = '04';

tmp = msg.copy();

// MSH
tmp['MSH']['MSH.6']['MSH.6.1'] = 'UKB';
tmp['MSH']['MSH.9']['MSH.9.1'] = 'BAR';
tmp['MSH']['MSH.9']['MSH.9.2'] = 'P01';

// EVN 
tmp['EVN']['EVN.1']['EVN.1.1'] = 'P01';

if (msg['TXA'].length() > 0)
	delete tmp['TXA'];

if (msg['OBX'].length() > 0)
	delete tmp['OBX'];	

// PR1
tmp['PR1']['PR1.1']['PR1.1.1'] = prefix + msg['TXA']['TXA.12']['TXA.12.1'].toString();
tmp['PR1']['PR1.3']['PR1.3.1'] = msg['TXA']['TXA.2']['TXA.2.1'].toString().listlookup(coding);	
tmp['PR1']['PR1.4']['PR1.4.1'] = msg['TXA']['TXA.2']['TXA.2.1'].toString();
tmp['PR1']['PR1.5']['PR1.5.1'] = msg['TXA']['TXA.6']['TXA.6.1'].toString();
tmp['PR1']['PR1.8']['PR1.8.1'] = faculty;

msg = tmp.copy();/* Transformer zum Aufbereiten der HL7-MDM Nachrichten von ENTstatistic

$Id

TXA-12: DocumentID, die Dokumentennummer bleibt bei �nderungen bzw. Updates des
gleichen Eintrages gleich.

TXA-15: FillerorderID, die Unique ID wird bei �nderungen des gleichen Eintrages
hochgez�hlt (Versionierung). Ist somit dauerhaft eindeutig.

*/

urlPrefix = '\\\\pents.ukb.intern\\hl7$\\out\\';
verweistext = 'HNO';

var aktenplan = {
    "T-Audio":"#0315#",
    "Mainzer I":"#0315#",
    "Mainzer II":"#0315#",
    "Mainzer III":"#0315#",
    "OLSA fix":"#0315#",
    "OLSA adaptiv":"#0315#",
    "OLKISA fix":"#0315#",
    "OLKISA adaptiv":"#0315#",
    "G�ttinger Kinder I":"#0315#",
    "G�ttinger Kinder II":"#0315#",
    "Freiburger":"#0315#",
    "NCIQ":"#0203#",
    "Follow-up":"#0202#",
    "Prim�r-OP":"#0401#",
    "H�ren-Sprache":"#0316#",
    "Anpassung":"#0202#",
    "Tymp/Stapediusreflex":"#0315#",
    "Audiometrie (PDF)":"#0315#"
};

// Kopiert die eingehende HL7 Nachricht in das OMT (ggf. mit Erweiterungen).
tmp = msg.copy();

// MSH
tmp['MSH']['MSH.3']['MSH.3.1'] = verweistext;
if (msg['MSH']['MSH.9']['MSH.9.2'].toString() != 'T11') {
	tmp['MSH']['MSH.9']['MSH.9.2'] = 'T09';
	// EVN
	tmp['EVN']['EVN.1']['EVN.1.1'] = 'T09';
}

// PID
tmp['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

// TXA
documentTitle = msg['TXA']['TXA.2']['TXA.2.1'].toString();
tmp['TXA']['TXA.2']['TXA.2.1'] = documentTitle + " " + documentTitle.listlookup(aktenplan, defaultValue ="#0804#");
tmp['TXA']['TXA.16']['TXA.16.1'] = urlPrefix + msg['TXA']['TXA.16']['TXA.16.1'].toString();

msg = tmp.copy();// Pr�fen auf Anzahl der DG1 Segmente (streng genommen nicht mehr n�tig durch Filterpr�fung)


if (msg['DG1'].length() > 0) {


	// L�sche alle PR1 Segmente.

		for each (seg in msg.children()) {

			if (seg.name().toString() == "PR1") {

			delete msg['PR1']

			}
		}
}
// Nun sollte die msg keine PR1 Segmente mehr haben.// Transformation um den Eintrag "SELBST" bei Selbstzahlern im IN1 Segment in 
// Feld IN1.3.1 -> msg['IN1'][1]['IN1.3']['IN1.3.1'].toString() 
// umzunennen in "-1".
// Das empfangende Dr�ger System ICM ben�tigt immer einen numerischen Ausruck
// in diesem Feld (und kann die Transformation nicht bei sich durchf�hren).
// PK, 05.03.2015

var strKostentraeger = "";

// Durchlaufen alle IN1 Segmente einer Nachricht:

for each (seg in msg.children()) {

	// Pr�fen auf IN1 Segmentbezeichnernamen:
	if (seg.name().toString() == "IN1") {

		strKostentraeger = seg['IN1.3']['IN1.3.1'].toString();
		// Pr�fung auf Auspr�gung "SELBST"�
		if (strKostentraeger == "SELBST") {
			// �berschreiben des Feldinhalt bei erf�llter Bedingung:
			seg['IN1.3']['IN1.3.1'] = "-1";
		}
	}
}// Pr�fen auf Anzahl der DG1 Segmente (streng genommen nicht mehr n�tig durch Filterpr�fung)

if (msg['PR1'].length() > 0) {

	// L�sche alle PR1 Segmente.

		for each (seg in msg.children()) {

			if (seg.name().toString() == "DG1") {

			delete msg['DG1']

			}
		}
}

// Nun sollte die msg keine PR1 Segmente mehr haben.// Nach dem ORBIS Update am 09.12.2021 m�ssen in allen DFT Nachrichten der Feldinhalt FT1-3 leer sein bzw. gel�scht werden.
// Anpassung erfolgte am 16.12.2021 durch PK

// Iterieren �ber alle FT1 Segmente
for each (seg in msg.children()) {
	
	if (seg.name().toString() == "FT1") {
		
		seg['FT1.3']['FT1.3.1'] = '';	// L�schen des Feldinhalts.
		
	}
}// Voranstellen des ftp Pfades:
var strFTPPfad = 'ftp://icmjaif:icmjaif2015!@ukb218.klinik.bn/ICM/' + msg['TXA']['TXA.16']['TXA.16.1'].toString();
msg['TXA']['TXA.16']['TXA.16.1'] = strFTPPfad;var dateString = DateUtil.getCurrentDate("dd.MM.yyyy HH:mm:ss");
if ($('status').indexOf("SUCCESS")!==-1) {
channelMap.put('strBody',"<h2>PDMS Server "+ $('name') +" ("+$('host')+") Changed Status to: <b>"+$('status')+"</b></h2></br><i>Zeit: "+dateString+"</i></br><p>Details: "+msg+"</p>");	
channelMap.put('header',"PDMS Server "+$('name')+" wieder erreichbar!")
} else {
channelMap.put('strBody',"<h2>PDMS Server "+$('name') +" ("+$('host')+") Problem: "+$('status')+"</h2></br> \
Bitte Server �berpr�fen und ggf. neu starten</br><i>Zeit: "+dateString+"</i></br><p>Details: "+msg+"</p>");
channelMap.put('header',"PDMS Server "+$('name')+" nicht erreichbar!")
}// L�schen bestimmter OBX Segmente

for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		
		var strNameBeobachtung = seg['OBX.3']['OBX.3.1'].toString();

		if (strNameBeobachtung == 'AN_AF_AUFTRAGSSTATUS' | strNameBeobachtung == 'AN_AF_PREOPERGEBNIS' ) {
			
			delete (msg.children()[seg.childIndex()]);
		}
		
	}
}var dateString = DateUtil.getCurrentDate("dd.MM.yyyy HH:mm:ss");
if ($('status').indexOf("SUCCESS")!==-1) {
channelMap.put('strBody',"<h2>PDMS Server "+ $('name') +" ("+$('host')+") Changed Status to: <b>"+$('status')+"</b></h2></br><i>Zeit: "+dateString+"</i></br><p>Details: "+msg+"</p>");	
channelMap.put('header',"PDMS Server "+$('name')+" wieder erreichbar!")
} else {
channelMap.put('strBody',"<h2>PDMS Server "+$('name') +" ("+$('host')+") Problem: "+$('status')+"</h2></br> \
Bitte Server �berpr�fen und ggf. neu starten</br><i>Zeit: "+dateString+"</i></br><p>Details: "+msg+"</p>");
channelMap.put('header',"PDMS Server "+$('name')+" nicht erreichbar!")
}// L�schen bestimmter OBX Segmente

for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		
		var strNameBeobachtung = seg['OBX.3']['OBX.3.1'].toString();

		if (strNameBeobachtung == 'AN_AF_AUFTRAGSSTATUS' | strNameBeobachtung == 'AN_AF_PREOPERGEBNIS' ) {
			
			delete (msg.children()[seg.childIndex()]);
		}
		
	}
}channelMap.put('text',globalChannelMap.get('auswertung'));// MSH
// Message Date
sleep(1000);
var dateString = DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['MSH']['MSH.7']['MSH.7.1'] = dateString;

// Unique Message ID
tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();

// PID
// PID Nummer
tmp['PID']['PID.2']['PID.2.1'] = $('vSAP_PID');
tmp['PID']['PID.3']['PID.3.1'] = $('vSAP_PID');

// Family Name (Name)
tmp['PID']['PID.5']['PID.5.1'] = $('vLASTNAME');
// Given Name (Vorname)
tmp['PID']['PID.5']['PID.5.2'] = $('vFIRSTNAME');
// DoB
tmp['PID']['PID.7']['PID.7.1'] = $('vDoB');

// PV1
// PV1.19 (last PV Number)
tmp['PV1']['PV1.19']['PV1.19.1'] = $('vFALLNR');

// TXA
// Achtung die Zuordnung des Dokuments in HYDMedia erfolgt durch das
// K�rzel im TXA.2 Feld im Outbound-Template.
// Zurzeit #0299#. PK, 23.06.2016, in Abstimmung mit Herrn Langenkamp.

// Zeitpunkt der Aenderung (20050628090000^ yyyyMMddHHmmss)
tmp['TXA']['TXA.8']['TXA.8.1'] = $('vDocumentdate');

// Unique Dokument Number
tmp['TXA']['TXA.12']['TXA.12.1'] = $('vDocumentdate') + $('vSAP_PID');

// Filename/-path
var strPath = '\\\\UKB1102.klinik.bn\\inj_prot$\\';
// Anpassungen am 09.02.2018, PK
// var strPath = '\\\\UKB460.klinik.bn\\IHT_Protokolle$\\'; 
//UKB1102.klinik.bn/inj_prot$
// var strFtpPath = 'ftp://ftpjaif:1234@ukb193.klinik.bn/IHT/';

tmp['TXA']['TXA.16']['TXA.16.1'] = strPath + $('vPDFFileName');tmp['MSH'] = msg['MSH'].copy();channelMap.put('vLSTMNR','null');


for each (seg in msg.children()) {
	
	if (seg.name().toString() == "OBX") {
		
		var strOBXValueType  = seg['OBX.2']['OBX.2.1'].toString();
		var strOBXIdentifier = seg['OBX.3']['OBX.3.2'].toString();

		if (strOBXIdentifier == 'Anae_Praemed_LSTM' & strOBXValueType == 'TX') {
			
			channelMap.put('vLSTMNR', seg['OBX.5']['OBX.5.1'].toString().replace(/\\X000A\\/g,'').slice(0,16));	// nimm die erste 16 Zeichen LSTM-2018-126140 den rest verwirf
																							// l�sche Zeileumbr�che die von ICM in der Form "\X000A\" gekennzeichnet werden. PK, 07.01.2021
			
		}
		
	}
}// Es wird mit einem Outbound Template gearbeitet, da dass empfangende System
// Imagis nur bestimmte Segmente verarbeiten kann (MSH, EVN, PID, PV1) und
// um die �bermittelten Daten aufs n�tigste zu reduzieren (Datenschutz).
// 15.09.2015, PK.

tmp['MSH'] = msg['MSH'].copy();
tmp['EVN'] = msg['EVN'].copy();
tmp['PID'] = msg['PID'].copy();
tmp['PV1'] = msg['PV1'].copy();

// WENN Stationfeld leer und Fachabteilungsfeld gef�llt, DANN
// Kopier den Inhalt des Fachabtielungsfelds in das Stationsfeld.

	// Dies ist dann der Fall, wenn es sich um einen ambulanten Fall handelt, (PV1.2 = O (Outpatient)
	// oder, wenn es sich um einen ambulanten Fall handelt, (PV1.2 = I (Inpatient) aber station�r = Konsil)
	// In Absprache mit Hr. Nordt(ACD Elektronik) und Hr. Dr. Hornung.

if (msg['PV1']['PV1.3']['PV1.3.4'].toString() != '' &&
    msg['PV1']['PV1.3']['PV1.3.1'].toString() == '') {

	tmp['PV1']['PV1.3']['PV1.3.1'] = msg['PV1']['PV1.3']['PV1.3.4'].toString();

}// Hinterlegen des Verabreitungsformulars "Textbefund".
msg['MSH']['MSH.3']['MSH.3.1'] = 'Textbefund';

// Loeschen des zweiten OBX Segments mit dem Dokumenten-Verweis.
delete msg['OBX'][1];// Hinterlegen des Verabreitungsformulars "Textbefund".
msg['MSH']['MSH.3']['MSH.3.1'] = 'Textbefund';

// Loeschen des zweiten OBX Segments mit dem Dokumenten-Verweis.
delete msg['OBX'][1];// Variablen aus der MDM Nachricht und Konstanten:
var strPrefix = '\\\\UKB1456\\Transfer\\ORU\\';		// \\UKB1456\Transfer\ORU
var strFALLNR = msg['PID']['PID.3']['PID.3.1'].toString();
var strDokumentenname = msg['TXA']['TXA.16']['TXA.16.1'].toString();	// 20201030_140834_Report.pdf

// 

// Ausf�hren einer SQL Abfrage auf die KHV.

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');

//Create a SQL Statement to be executed

var sqlStr ="\
SELECT \
NAT.PID,	\
NAT.NAME,	\
NAT.VORNAME, \
TO_CHAR(NAT.GEBDAT,'YYYYMMDD') GEBDAT,	\
NAT.GESCHLECHT \
FROM \
FALL F,	\
NATPERSON NAT	\
WHERE	\
F.PERSNR = NAT.PERSNR  AND	\
F.STORNO_DATUM IS NULL AND	\
F.FALLNR = '" + strFALLNR + "'";

// Execute SQL Statement and save them as results

var results = dbConn.executeCachedQuery(sqlStr);		// hier wird immer eine Abfragezeile als R�ckgabe erwartet!
var resultSize = results.size();

// Aufbereiten des Resultsets.
if(resultSize>0){

	for(var i = 0;i<resultSize;i++){

		results.next();

	var strPID 		= results.getString(1); 
	var strNAME 		= results.getString(2); 
	var strVORNAME 	= results.getString(3); 
	var strGEBDAT 		= results.getString(4); 
	var strGESCHLECHT 	= results.getString(5);

	}
} 

// Kopieren der Resultsetdaten in das OMT.

// MSH
msg['MSH']['MSH.4']['MSH.4.1'] = 'NCH';
msg['MSH']['MSH.9']['MSH.9.2'] = 'T09';	// umwidmen auf Nachrichtentyp T09 (�nderungsnachricht), damit alles vom JAIF importiert wird.
msg['MSH']['MSH.5']['MSH.5.1'] = 'ORBIS';
msg['MSH']['MSH.6']['MSH.6.1'] = 'UKB';


// PID
// PID.2.1 External ID Number
msg['PID']['PID.2']['PID.2.1'] = strPID;
// PID.3.1 Internal ID Number
msg['PID']['PID.3']['PID.3.1'] = strPID;
// PID.5.1 Family Name
msg['PID']['PID.5']['PID.5.1'] = strNAME;
// PID.5.2 Given Name
msg['PID']['PID.5']['PID.5.2'] = strVORNAME;
// PID.7.1 Date of Birth
msg['PID']['PID.7']['PID.7.1'] = strGEBDAT;
// PID.8.1 Sex
msg['PID']['PID.8']['PID.8.1'] = strGESCHLECHT;

// PV1
// PV1.19 Fallnummer
msg['PV1']['PV1.19']['PV1.19.1'] = strFALLNR;		// urspr�nglich im PID3.1 stehend, siehe oben.

// TXA
//
msg['TXA']['TXA.3']['TXA.3.1'] = 'PDF';
msg['TXA']['TXA.12']['TXA.12.2'] = 'ISIS_IOM'; 	// ISIS = Produktname, IOM = Intraperatives Neuromonitoring; bereits auf der KHV im NAMESPACE Katalog eingerichtet



// Schliessen der Connection.
dbConn.close();tmp['MSH'] = msg['MSH'].copy();// Einlesen des PV1.19 Feldinhalts = FALLNR des ORBIS Patienten.
// Ggf. abpr�fen mit anderen Felder.



// Ausf�hren einer SQL Abfrage auf die KHV.

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');

//Create a SQL Statement to be executed

var strQRYFALLNR = msg['QRD']['QRD.8']['QRD.8.1'].toString();
// Ausgeschaltet am 28.01.2015, PK
//logger.error("FALLNR : " + strQRYFALLNR);

// Eingrenzung auf Klinik 12, 45 (Neurochirurgie, Kinderneurochirurgie)
var sqlStr ="SELECT " +
            "F.FALLNR, NAT.NAME, NAT.VORNAME, TO_CHAR(NAT.GEBDAT,'YYYYMMDD') GEBDAT,	NAT.GESCHLECHT, NAT.PID,	" +
            "TO_CHAR(SYSDATE, 'YYYYMMDDhh24miss') ABFRAGEZEIT " +
            "FROM " +
            "FALL F, NATPERSON NAT " +
            "WHERE " +
            "F.PERSNR = NAT.PERSNR  AND	" +
            "F.STORNO_DATUM IS NULL AND	" +
            "EXISTS ( " +
            "  SELECT DISTINCT F.FALLNR FROM FALL F, FALL_AUFENTHALT FA, ORGAEBENE OE " +
            "  WHERE " +
            "  F.FALLID = FA.FALLID AND " +
            "  FA.OEBENEID_DEPARTMENT = OE.OEBENEID AND " +
            "  OE.OEBENEKURZ IN  ('12', '45') AND " +
            "  F.FALLNR = '" + strQRYFALLNR + "'" +
            "  ) " +
            "AND F.FALLNR = '" + strQRYFALLNR + "'";

// Ausgeschaltet am 28.01.2015, PK
// logger.error("SQL String" + sqlStr);

// Execute SQL Statement and save them as results

var results = dbConn.executeCachedQuery(sqlStr);

var resultSize = results.size();


// Aufbereiten des Resultsets. // hier nur eine Ergebniszeile durch Abfrage.
if(resultSize>0){

	for(var i = 0;i<resultSize;i++){

		results.next();

	var strFALLNR 		= results.getString(1); 
	var strNAME 		= results.getString(2); 
	var strVORNAME 	= results.getString(3); 
	var strGEBDAT 		= results.getString(4); 
	var strGESCHLECHT 	= results.getString(5); 
	var strPID 		= results.getString(6); 
	var strSYSDATE		= results.getString(7); 

	}

	// Kopieren der Resultsetdaten in das OMT.

	// MSH
	// MSH.7.1 Date/Time of Message = Abfragezeit der SQL Abfrage
	tmp['MSH']['MSH.7']['MSH.7.1'] = strSYSDATE;

	// MSA
	// MSA.2.1 Message Control ID (= Msg ID der Anfragenachricht)
	tmp['MSA']['MSA.2']['MSA.2.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

	// QRD
	// R�ck�bermittlung des eingegangenen QRD Segments.
	tmp['QRD'] = msg['QRD'].copy();

	// PID
	// PID.2.1 External ID Number
	tmp['PID']['PID.2']['PID.2.1'] = strPID;
	// PID.3.1 Internal ID Number
	tmp['PID']['PID.3']['PID.3.1'] = strPID;
	// PID.5.1 Family Name
	tmp['PID']['PID.5']['PID.5.1'] = strNAME;
	// PID.5.2 Given Name
	tmp['PID']['PID.5']['PID.5.2'] = strVORNAME;
	// PID.7.1 Date of Birth
	tmp['PID']['PID.7']['PID.7.1'] = strGEBDAT;
	// PID.8.1 Sex
	if (strGESCHLECHT == 'W') strGESCHLECHT = 'F'; 
	tmp['PID']['PID.8']['PID.8.1'] = strGESCHLECHT;

}

// PV1
// PV1.19 Fallnummer
tmp['PV1']['PV1.19']['PV1.19.1'] = strQRYFALLNR;


// Schliessen der Connection.
dbConn.close();


// Erstellen der AckMessage.
var ackMessage = SerializerFactory.getSerializer('HL7V2').fromXML(tmp);

// F�llen der Antwortvariablen (ResponseMap f�r Source ACK).
// responseMap.put("customResponse", ResponseFactory.getSuccessResponse(ackMessage));
// Austausch der Funktion gemaess MIRTH Empfehlung, PK, 02.06.2015.

responseMap.put("customResponse", ResponseFactory.getSentResponse(ackMessage));

// L�schen der Abfrageergebnisvariablen.
results = "";// Anpassungen im MSH Segment
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['hl7datetime'].toString();	// Zeitpunkt der Nachrichten�bermittlung.
var uuid = UUIDGenerator.getUUID();	// Eindeutige Nachrichten ID generieren.
tmp['MSH']['MSH.10']['MSH.10.1'] = uuid;

// EVN Segment
tmp['EVN']['EVN.1']['EVN.1.1'] = "T01";
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['hl7datetime'].toString();
tmp['EVN']['EVN.3']['EVN.3.1'] = msg['hl7datetime'].toString();

// Anpassungen im PID Segment
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString(); // Familiy Name (Nachname)
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString(); // Given Name (Vorname)

// Anpassungen im PV1 Segment

// Aufenthaltsstatus wichtig? I, O amb., station�r?
tmp['PV1']['PV1.2']['PV1.2.1'] = 'I';
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['case_id'].toString();	// FALLNR


// TXA Segment
tmp['TXA']['TXA.2']['TXA.2.1'] = msg['containerclassname'].toString();	// TXA.2 Dokumententyp.

// TXA.3.1 Extension-Hinweis (Mimetyp) z.B. PDF, TIFF, JPEG, etc...
var mimetype = msg['mimetype'].toString();	// wird noch weiter untergebraucht.

tmp['TXA']['TXA.3']['TXA.3.1'] = mimetype;
channelMap.put(mimetype,'Mimetype zum Dokument');

// TXA.4 Activity Date/Time
tmp['TXA']['TXA.4']['TXA.4.1'] = msg['hl7datetimedokudatum'].toString();

// TXA.6 Origination Date/Time
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['hl7datetimecreationdate'].toString();

// TXA.8 Edit Date/Time = changedate
//tmp['TXA']['TXA.8']['TXA.8.1'] = datestring1;

// TXA.12 Unique Document Number TXA.12.1 Entity Identifier = orbisdokumentenid
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['orbisdokumentenid'].toString();

// TXA.12.2 Namespace ID
tmp['TXA']['TXA.12']['TXA.12.2'] = 'ORBISDokumentenID';

// TXA.14.1 Place Order Number = Auftragsnummer (z.B. EDOK-2014-12345678)
tmp['TXA']['TXA.14']['TXA.14.1'] = msg['auftragsnummer'].toString();

// TXA.16, Unique Document File Name = Dokumentenname (auf dem PHYD Volume (F:\ Laufwerk).
tmp['TXA']['TXA.16']['TXA.16.1'] = msg['filename'].toString();		


// Anpassungen im OBX Segment

// OBX.3 Observation Idenfifier = ORBIS DokumentenID
tmp['OBX']['OBX.3']['OBX.3.1'] = msg['orbisdokumentenid'].toString();

// OSM Version: 
var atts=getAttachments();

if(!getAttachments().isEmpty()) {
	tmp['OBX']['OBX.5']['OBX.5.1'] = atts.get(0).getAttachmentId();
} else {
	logger.error("Kein Attachment gefunden");
}	

sleep(1000);// Anpassungen im MSH Segment
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['hl7datetime'].toString();	// Zeitpunkt der Nachrichten�bermittlung.
var uuid = UUIDGenerator.getUUID();	// Eindeutige Nachrichten ID generieren.
tmp['MSH']['MSH.10']['MSH.10.1'] = uuid;

// EVN Segment
tmp['EVN']['EVN.1']['EVN.1.1'] = "T01";
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['hl7datetime'].toString();
tmp['EVN']['EVN.3']['EVN.3.1'] = msg['hl7datetime'].toString();

// Anpassungen im PID Segment
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString(); // Familiy Name (Nachname)
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString(); // Given Name (Vorname)

// Anpassungen im PV1 Segment

// Aufenthaltsstatus wichtig? I, O amb., station�r?
tmp['PV1']['PV1.2']['PV1.2.1'] = 'I';
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['case_id'].toString();	// FALLNR


// TXA Segment
//tmp['TXA']['TXA.2']['TXA.2.1'] = msg['containerclassname'].toString();	// TXA.2 Dokumententyp.
tmp['TXA']['TXA.2']['TXA.2.1'] = 'Externer Arztbrief'	// TXA.2 Dokumententyp. Ge�ndert 16.01.2015, PK

// TXA.3.1 Extension-Hinweis (Mimetyp) z.B. PDF, TIFF, JPEG, etc...
var mimetype = msg['mimetype'].toString();	// wird noch weiter untergebraucht.

tmp['TXA']['TXA.3']['TXA.3.1'] = mimetype;
channelMap.put(mimetype,'Mimetype zum Dokument');

// TXA.4 Activity Date/Time
tmp['TXA']['TXA.4']['TXA.4.1'] = msg['hl7datetimedokudatum'].toString();

// TXA.6 Origination Date/Time
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['hl7datetimecreationdate'].toString();

// TXA.8 Edit Date/Time = changedate
//tmp['TXA']['TXA.8']['TXA.8.1'] = datestring1;

// TXA.12 Unique Document Number TXA.12.1 Entity Identifier = objectid
// Quelle PHYD Tabelle "DC_DYN_BASEPATIENTDOCCLASS", Spalte "OBJECTID".
// i.A. mit Hr. Dr. Jungck, 27.05.2014.
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['objectid'].toString();

// TXA.12.2 Namespace ID
tmp['TXA']['TXA.12']['TXA.12.2'] = 'DokumentenID';

// TXA.14.1 Place Order Number = Auftragsnummer (z.B. EDOK-2014-12345678)
tmp['TXA']['TXA.14']['TXA.14.1'] = msg['auftragsnummer'].toString();

// TXA.16, Unique Document File Name = Dokumentenname (auf dem PHYD Volume (F:\ Laufwerk).
tmp['TXA']['TXA.16']['TXA.16.1'] = msg['filename'].toString();		


// Anpassungen im OBX Segment

// OBX.3 Observation Idenfifier = ORBIS DokumentenID
tmp['OBX']['OBX.3']['OBX.3.1'] = msg['orbisdokumentenid'].toString();

// OSM Version: 
var atts=getAttachments();

if(!getAttachments().isEmpty()) {
	tmp['OBX']['OBX.5']['OBX.5.1'] = atts.get(0).getAttachmentId();
} else {
	logger.error("Kein Attachment gefunden");
}	

sleep(1000);// Anpassungen im MSH Segment
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['hl7datetime'].toString();	// Zeitpunkt der Nachrichten�bermittlung.
var uuid = UUIDGenerator.getUUID();	// Eindeutige Nachrichten ID generieren.
tmp['MSH']['MSH.10']['MSH.10.1'] = uuid;

// EVN Segment
tmp['EVN']['EVN.1']['EVN.1.1'] = "T01";
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['hl7datetime'].toString();
tmp['EVN']['EVN.3']['EVN.3.1'] = msg['hl7datetime'].toString();

// Anpassungen im PID Segment
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString(); // Familiy Name (Nachname)
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString(); // Given Name (Vorname)

// Anpassungen im PV1 Segment

// Aufenthaltsstatus wichtig? I, O amb., station�r?
tmp['PV1']['PV1.2']['PV1.2.1'] = 'I';
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['case_id'].toString();	// FALLNR


// TXA Segment
//tmp['TXA']['TXA.2']['TXA.2.1'] = msg['containerclassname'].toString();	// TXA.2 Dokumententyp.
tmp['TXA']['TXA.2']['TXA.2.1'] = 'Pathologiebefund - PAT'	// TXA.2 Dokumententyp. Ge�ndert 16.01.2015, PK

// TXA.3.1 Extension-Hinweis (Mimetyp) z.B. PDF, TIFF, JPEG, etc...
var mimetype = msg['mimetype'].toString();	// wird noch weiter untergebraucht.

tmp['TXA']['TXA.3']['TXA.3.1'] = mimetype;
channelMap.put(mimetype,'Mimetype zum Dokument');

// TXA.4 Activity Date/Time
tmp['TXA']['TXA.4']['TXA.4.1'] = msg['hl7datetimedokudatum'].toString();

// TXA.6 Origination Date/Time
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['hl7datetimecreationdate'].toString();

// TXA.8 Edit Date/Time = changedate
//tmp['TXA']['TXA.8']['TXA.8.1'] = datestring1;

// TXA.12 Unique Document Number TXA.12.1 Entity Identifier = objectid
// Quelle PHYD Tabelle "DC_DYN_BASEPATIENTDOCCLASS", Spalte "OBJECTID".
// i.A. mit Hr. Dr. Jungck, 27.05.2014.
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['objectid'].toString();

// TXA.12.2 Namespace ID
tmp['TXA']['TXA.12']['TXA.12.2'] = 'DokumentenID';

// TXA.14.1 Place Order Number = Auftragsnummer (z.B. EDOK-2014-12345678)
tmp['TXA']['TXA.14']['TXA.14.1'] = msg['auftragsnummer'].toString();

// TXA.16, Unique Document File Name = Dokumentenname (auf dem PHYD Volume (F:\ Laufwerk).
tmp['TXA']['TXA.16']['TXA.16.1'] = msg['filename'].toString();		


// Anpassungen im OBX Segment

// OBX.3 Observation Idenfifier = ORBIS DokumentenID
tmp['OBX']['OBX.3']['OBX.3.1'] = msg['orbisdokumentenid'].toString();

// OSM Version: 
var atts=getAttachments();

if(!getAttachments().isEmpty()) {
	tmp['OBX']['OBX.5']['OBX.5.1'] = atts.get(0).getAttachmentId();
} else {
	logger.error("Kein Attachment gefunden");
}	

sleep(1000);// Transformation f�r Jaif Mdm Import.

// MSH Anpassungen:

// sende die MDM Nachricht immer als �nderungsnachricht T09.
msg['MSH']['MSH.9']['MSH.9.2'] = 'T09';

// TXA Anpassungen:

// TXA AnpassungBelegartkuerzel fuer HYDMedia setzen
msg['TXA']['TXA.2']['TXA.2.1'] = msg['TXA']['TXA.2']['TXA.2.1'].toString() + ' #0315#';
msg['TXA']['TXA.12']['TXA.12.2'] = 'LUFU';		// Pflichtfeld, seit 09.12.2019 in ORBIS


// Velocity Variablen soll sicherstellen, dass keine Abweichung der Ausgabepfade in der Destination und dem MDM TXA.16 Feld entstehen k�nnen.
msg['TXA']['TXA.16']['TXA.16.1'] = $('vPathToJaifukb1488') + $('vAttachmentFileName');

delete msg['OBR'];
delete msg['IN1'];// L�schen von ungewollten Segmenten aus Datenschutzgr�nden.
// http://www.mirthcorp.com/community/forums/showthread.php?t=7585

for each (seg in msg.children()) {
	
	if (seg.name().toString() == "NK1" |
	    seg.name().toString() == "IN1" |
	    seg.name().toString() == "IN2" |
	    seg.name().toString() == "ZAS" |
	    seg.name().toString() == "PV2" |
	    seg.name().toString() == "ZVK" |
	    seg.name().toString() == "ZBE" ) {
		
		delete msg.children()[seg.childIndex()];
	}
}// Funktion, die einem String "str" so oft den String "pad" voranstellt, bis er die L�nge "max" erreicht
function pad(str,max,pad) {
	while (str.length < max) {
		str = pad + str;
	}
	return str;
}

var auftragsNummer = $('orderNum')+"L";
var currDate = DateUtil.getCurrentDate("yyyyMMddHHmmss");
// Setup Message Header.
msg['MSH']['MSH.3']['MSH.3.1'] = "SES";
msg['MSH']['MSH.4']['MSH.4.1'] = "CareFusion";
msg['MSH']['MSH.5']['MSH.5.1'] = "ORBIS";
msg['MSH']['MSH.6']['MSH.6.1'] = "LAWP";
msg['MSH']['MSH.7']['MSH.7.1'] = currDate;
msg['MSH']['MSH.9']['MSH.9.1'] = "ORU";
msg['MSH']['MSH.9']['MSH.9.2'] = "R01";
msg['MSH']['MSH.10']['MSH.10.1'] = "bU12E911."+pad(connectorMessage.getMessageId().toString(),6,"0");
msg['MSH']['MSH.11']['MSH.11.1'] = "P";
msg['MSH']['MSH.12']['MSH.12.1'] = "2.3";
msg['ORC']['ORC.6']['ORC.6.1'] = "CM";
msg['ORC']['ORC.9']['ORC.9.1'] = currDate;
msg['ORC']['ORC.3']['ORC.3.1'] = auftragsNummer
msg['ORC']['ORC.2']['ORC.2.1'] = auftragsNummer
msg['PV1'] = $('oPV1');
msg['PID'] = $('oPID');

// Counter-variablen setzen
var OBRset = false;
var OBXIndex = 0;

	// Iteriere �ber Array
	for each (var obj in $('arrOBX')){
	//vermeide, ung�ltige array-eintr�ge zu verarbeiten
	if (typeof obj.identifier != 'undefined') {
	// Falls das OBR-Element noch nicht gesetzt wurde
	if (!OBRset) {
	// erstelle das OBR-Segment
	createSegment('OBR', msg);
	// markiere, dass OBR gesetzt wurde
	OBRset=true;
	// F�lle das OBR Segment mit Inhalt
	msg['OBR'][0]['OBR.1']['OBR.1.1'] = "1";
	msg['OBR'][0]['OBR.2']['OBR.2.1'] = auftragsNummer;
	msg['OBR'][0]['OBR.4']['OBR.4.1'] = $('UniversalServiceID_Ident');
	msg['OBR'][0]['OBR.4']['OBR.4.2'] = $('UniversalServiceID_Text');
	msg['OBR'][0]['OBR.7']['OBR.7.1'] = currDate;
	msg['OBR'][0]['OBR.25']['OBR.25.1'] ="F";
	}
	// Falls noch keine OBX erstellt wurden	
	if (OBXIndex==0) {
	// F�ge das erste OBX-Segment hinter das OBR-Segment an
	createSegmentAfter('OBX', msg['OBR'][0]);
	} else{
	// ansonsten f�ge ein neues OBX Segment hinter das letzte OBX Segment an
	createSegmentAfter('OBX', msg['OBX'][OBXIndex-1]);
	}
	// F�lle das OBX-Segment mit Inhalt
	msg['OBX'][OBXIndex]['OBX.1']['OBX.1.1']=OBXIndex+1;
	msg['OBX'][OBXIndex]['OBX.2']['OBX.2.1']="CF";
	msg['OBX'][OBXIndex]['OBX.3']['OBX.3.1']="L_"+obj.identifier;
	msg['OBX'][OBXIndex]['OBX.3']['OBX.3.2']=obj.identifier_text;
	msg['OBX'][OBXIndex]['OBX.3']['OBX.3.4']=obj.identifier_alternate;
	msg['OBX'][OBXIndex]['OBX.4']['OBX.4.1']=obj.sub_id;
	msg['OBX'][OBXIndex]['OBX.5']['OBX.5.1']=obj.value;
	msg['OBX'][OBXIndex]['OBX.6']['OBX.6.1']=obj.units;
	msg['OBX'][OBXIndex]['OBX.7']['OBX.7.1']=obj.range;
	msg['OBX'][OBXIndex]['OBX.8']['OBX.8.1']=obj.abnormal;
	msg['OBX'][OBXIndex]['OBX.11']['OBX.11.1']=obj.status;
	msg['OBX'][OBXIndex]['OBX.14']['OBX.14.1']=obj.datetime;
	msg['OBX'][OBXIndex]['OBX.17']['OBX.17.1']=""; //obj.method;
	msg['OBX'][OBXIndex]['OBX.17']['OBX.17.2']=obj.method_long;
	msg['OBX'][OBXIndex]['OBX.19']['OBX.19.1']=obj.endtime;
	msg['OBX'][OBXIndex]['OBX.30']['OBX.30.1']=obj.soll;
	msg['OBX'][OBXIndex]['OBX.31']['OBX.31.1']=obj.level;
	//Erh�he den Counter f�r OBX-Segmente um 1
	OBXIndex++;
}
}

// �berschreibe die transformed msg mit der erstellten.
tmp = msg;

/* Die Philosophie:
* Zun�chst m�ssen wir auf der Mirth-msg arbeiten, da die tmp-Message aus irgendeinem Grund nicht so einfach bearbeitbar ist. Ist wohl ein Mirth-Ding
* Danach iterieren wir �ber die OBX-Objekte in unserem Array. Dadurch greifen wir alle gespeicherten Informationen ab. 
* Diese k�nnen wir dann sauber, beginnend mit 1 durchz�hlen, sodass sich unter dem OBR-Element alle OBX einf�gen. Das ist dann HL7-konform.
*/// Funktion, die einem String "str" so oft den String "pad" voranstellt, bis er die L�nge "max" erreicht
function pad(str,max,pad) {
	while (str.length < max) {
		str = pad + str;
	}
	return str;
}

var auftragsNummer = $('orderNum')+"L";
var currDate = DateUtil.getCurrentDate("yyyyMMddHHmmss");
// Setup Message Header.
msg['MSH']['MSH.3']['MSH.3.1'] = "SES";
msg['MSH']['MSH.4']['MSH.4.1'] = "CareFusion";
msg['MSH']['MSH.5']['MSH.5.1'] = "ORBIS";
msg['MSH']['MSH.6']['MSH.6.1'] = "LAWP";
msg['MSH']['MSH.7']['MSH.7.1'] = currDate;
msg['MSH']['MSH.9']['MSH.9.1'] = "ORU";
msg['MSH']['MSH.9']['MSH.9.2'] = "R01";
msg['MSH']['MSH.10']['MSH.10.1'] = "bU12E911."+pad(connectorMessage.getMessageId().toString(),6,"0");
msg['MSH']['MSH.11']['MSH.11.1'] = "P";
msg['MSH']['MSH.12']['MSH.12.1'] = "2.3";
msg['ORC']['ORC.6']['ORC.6.1'] = "CM";
msg['ORC']['ORC.9']['ORC.9.1'] = currDate;
msg['ORC']['ORC.3']['ORC.3.1'] = auftragsNummer
msg['ORC']['ORC.2']['ORC.2.1'] = auftragsNummer
msg['PV1'] = $('oPV1');
msg['PID'] = $('oPID');

// Counter-variablen setzen
var OBRset = false;
var OBXIndex = 0;

	// Iteriere �ber Array
	for each (var obj in $('arrOBX')){
	//vermeide, ung�ltige array-eintr�ge zu verarbeiten
	if (typeof obj.identifier != 'undefined') {
	// Falls das OBR-Element noch nicht gesetzt wurde
	if (!OBRset) {
	// erstelle das OBR-Segment
	createSegment('OBR', msg);
	// markiere, dass OBR gesetzt wurde
	OBRset=true;
	// F�lle das OBR Segment mit Inhalt
	msg['OBR'][0]['OBR.1']['OBR.1.1'] = "1";
	msg['OBR'][0]['OBR.2']['OBR.2.1'] = auftragsNummer;
	msg['OBR'][0]['OBR.4']['OBR.4.1'] = $('UniversalServiceID_Ident');
	msg['OBR'][0]['OBR.4']['OBR.4.2'] = $('UniversalServiceID_Text');
	msg['OBR'][0]['OBR.7']['OBR.7.1'] = currDate;
	msg['OBR'][0]['OBR.25']['OBR.25.1'] ="F";
	}
	// Falls noch keine OBX erstellt wurden	
	if (OBXIndex==0) {
	// F�ge das erste OBX-Segment hinter das OBR-Segment an
	createSegmentAfter('OBX', msg['OBR'][0]);
	} else{
	// ansonsten f�ge ein neues OBX Segment hinter das letzte OBX Segment an
	createSegmentAfter('OBX', msg['OBX'][OBXIndex-1]);
	}
	// F�lle das OBX-Segment mit Inhalt
	msg['OBX'][OBXIndex]['OBX.1']['OBX.1.1']=OBXIndex+1;
	msg['OBX'][OBXIndex]['OBX.2']['OBX.2.1']="CF";
	msg['OBX'][OBXIndex]['OBX.3']['OBX.3.1']="L_"+obj.identifier;
	msg['OBX'][OBXIndex]['OBX.3']['OBX.3.2']=obj.identifier_text;
	msg['OBX'][OBXIndex]['OBX.3']['OBX.3.4']=obj.identifier_alternate;
	msg['OBX'][OBXIndex]['OBX.4']['OBX.4.1']=obj.sub_id;
	msg['OBX'][OBXIndex]['OBX.5']['OBX.5.1']=obj.value;
	msg['OBX'][OBXIndex]['OBX.6']['OBX.6.1']=obj.units;
	msg['OBX'][OBXIndex]['OBX.7']['OBX.7.1']=obj.range;
	msg['OBX'][OBXIndex]['OBX.8']['OBX.8.1']=obj.abnormal;
	msg['OBX'][OBXIndex]['OBX.11']['OBX.11.1']=obj.status;
	msg['OBX'][OBXIndex]['OBX.14']['OBX.14.1']=obj.datetime;
	msg['OBX'][OBXIndex]['OBX.17']['OBX.17.1']=""; //obj.method;
	msg['OBX'][OBXIndex]['OBX.17']['OBX.17.2']=obj.method_long;
	msg['OBX'][OBXIndex]['OBX.19']['OBX.19.1']=obj.endtime;
	msg['OBX'][OBXIndex]['OBX.30']['OBX.30.1']=obj.soll;
	msg['OBX'][OBXIndex]['OBX.31']['OBX.31.1']=obj.level;
	//Erh�he den Counter f�r OBX-Segmente um 1
	OBXIndex++;
}
}

// �berschreibe die transformed msg mit der erstellten.
tmp = msg;

/* Die Philosophie:
* Zun�chst m�ssen wir auf der Mirth-msg arbeiten, da die tmp-Message aus irgendeinem Grund nicht so einfach bearbeitbar ist. Ist wohl ein Mirth-Ding
* Danach iterieren wir �ber die OBX-Objekte in unserem Array. Dadurch greifen wir alle gespeicherten Informationen ab. 
* Diese k�nnen wir dann sauber, beginnend mit 1 durchz�hlen, sodass sich unter dem OBR-Element alle OBX einf�gen. Das ist dann HL7-konform.
*/// Autor pk
// Erstellungsdatum 13.01.2014
// letzte Version 15.01.2013


// Die eingehende Nachricht wird in das OMT geladen (Achtung ggf. Informationsverluste,
// da die DG1 und PR1 Segmente der Medos Variante mehr Felder erhalten, als die
// ORBIS Variante.

/*
tmp = msg.copy();

// MSH Segment:

tmp['MSH']['MSH.12']['MSH.12.1'] = '2.3';

var prefix = '';

// Prefixe
switch (msg['MSH']['MSH.4']['MSH.4.1'].toString()) {
  case "RAD":				// Radiologie
    prefix = '15'
    break;
  case "NUK":				// Nukleramedizin
    prefix = '20'
	break;
}

// PID Segment:
tmp['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString())

// PV1 Segement:
tmp['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());


// wenn ein DG1 Segement exisitiert. Action Code �bersetzung nach HL7 2.3 BAR Nachrichtentyp
// A => BAR P01
// D => BAR P02
// U => BAR P05.


if (msg['DG1'].length() > 0) {


	if (msg['DG1']['DG1.21']['DG1.21.1'].toString() == 'A')		// Action Code A = Add ICD
	  {
		tmp['MSH']['MSH.9']['MSH.9.2'] = 'P01';
	  }
	else if (msg['DG1']['DG1.21']['DG1.21.1'].toString() == 'D')
	  {
 		tmp['MSH']['MSH.9']['MSH.9.2'] = 'P02';					// Action Code D = Delete ICD
	  }
	else if (msg['DG1']['DG1.21']['DG1.21.1'].toString() == 'U')
	  {
 		tmp['MSH']['MSH.9']['MSH.9.2'] = 'P05';					// Action Code U = Update ICD
	  }
	else
	  {
		tmp['MSH']['MSH.9']['MSH.9.2'] = 'P99'	;				// Error Code
	  };

// DG1 Praefix einfuegen.
tmp['DG1']['DG1.1']['DG1.1.1'] = prefix + '-' + msg['DG1']['DG1.1']['DG1.1.1'].toString();


// DG1 Umkopieren der DiagnosenID aus Medos HL7 2.3 Variante in Feld DG1.19 nach DG1.1 (Orbis).

tmp['DG1']['DG1.1'] = msg['DG1']['DG1.20']['DG1.20.1'].toString();


// DG1 Bereinigung um die "zusaetzlich" hinzugekommenen DG1 Felder aus msg, die ungewollt
// an in die tmp geh�ngt werden. Hier die Felder DG1.20 bis DG1.39

	for (var i=20; i<=39; i++)
	{
		delete tmp['DG1']['DG1.' + i]
	}


};


// wenn ein PR1 Segement exisitiert...

if (msg['PR1'].length() > 0) {


	if (msg['PR1']['PR1.20']['PR1.20.1'].toString() == 'A')	// Action Code A = Add PPS Code
	  {
		tmp['MSH']['MSH.9']['MSH.9.2'] = 'P01'
	  }
	else if (msg['PR1']['PR1.20']['PR1.20.1'].toString() == 'D')
	  {
 		tmp['MSH']['MSH.9']['MSH.9.2'] = 'P02'				// Action Code D = Delete OPS
	  }
	else if (msg['PR1']['PR1.20']['PR1.20.1'].toString() == 'U')
	  {
 		tmp['MSH']['MSH.9']['MSH.9.2'] = 'P05'				// Action Code U = Update OPS
	  }
	else
	  {
		tmp['MSH']['MSH.9']['MSH.9.2'] = 'P99'				// Error Code
	  };

// Praefix einfuegen.
tmp['PR1']['PR1.1']['PR1.1.1'] = prefix + '-' + msg['PR1']['PR1.1']['PR1.1.1'].toString();


// PR1 Umkopieren der DiagnosenID aus Medos HL7 2.3 Variante in Feld PR1.19 nach PR1.1 (Orbis).

tmp['PR1']['PR1.1'] = msg['PR1']['PR1.19']['PR1.19.1'].toString();

// Bereinigung um die "zusaetzlich" hinzugekommenen PR1 Felder aus msg, die ungewollt
// an in die tmp geh�ngt werden. Hier die Felder PR1.20 bis PR1.39

	for (var i=19; i<=39; i++)
	{
		delete tmp['PR1']['PR1.' + i]
	}



};


return tmp;
// Ausgabe des OMT (tmp)  */// Passt das DFT Format f?r den Import in ORBIS an
// 
// $Id$

/*

MSH|^~\&|HISWEB|04|SAP||201309031452||DFT^P03|10||2.2|EVN|P03|201309031452|||LANGENBSN|PID|||6026177||Grevenbroich^Hans^^^^|Grevenbroich|19600203|M|||Fasanenweg 12^^Bonn^^53127^DE|||||||||||||||||DE|PV1||I||A|||||||||||||||8576566||K|||||||||||||||||||||||201309021516|FT1|1|||201309031452|201309031452||10141701|Rhinomanometrie||||||||||||934145^|||10|LANGENBSN|




tmp = msg.copy();

// PID
tmp['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

// FT1
if (msg['FT1']['FT1.10']['FT1.10.1'].toString() == '')
tmp['FT1']['FT1.10']['FT1.10.1'] = '1';
		
msg = tmp.copy();



MSH|^~\&|HISWEB|04|SAP||201309031452||DFT^P03|10||2.5|EVN|P03|201309031452|||LANGENBSN|PID|||6026177||Grevenbroich^Hans^^^^|Grevenbroich|19600203|M|||Fasanenweg 12^^Bonn^^53127^DE|||||||||||||||||DE|PV1||I||A|||||||||||||||8576566||K|||||||||||||||||||||||201309021516|FT1|1|||201309031452|201309031452||10141701|Rhinomanometrie||1||||||||||934145^|||10|LANGENBSN|



*/// Passt das DFT Format f�r MVZ an 
// 
// $Id$

tmp = msg.copy();

// PID
tmp['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

		
msg = tmp.copy();// Passt das DFT Format f�r den Import in ORBIS an
// 
// $Id$

tmp = msg.copy();

// PID
tmp['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

// FT1
if (msg['FT1']['FT1.10']['FT1.10.1'].toString() == '')
tmp['FT1']['FT1.10']['FT1.10.1'] = '1';
		
msg = tmp.copy();// an dieser Stelle werden die ACK Transformationen
// f�r das UKB Molitor Mibi System vorgenommen.

// Hintergrund:
// Bei der �bermittlung von MDM Nachrichten an ORBIS
// treten Verarbeitungsfehler auf, die auf Grund von Personenzusammenf�hrungen
// (Patient Merge) oder Fallstornierung zustande kommen.
// Das JAIF gibt dazu qualifizierte Fehlermeldungstexte aus.
// Diese sollen ausgewertet werden und anschlie�end per SQL-Abfrage
// auf die KHV die jeweils g�ltigen Daten ermittelt und zus�tzlich
// in die ACK Nachricht geschrieben und ausgegeben werden.

// Das Mibi System kann darauf reagieren.

// Fehlerfrei Nachricht:
// MSH|^~\&|ORBIS|UKB|IMMIP|IMMIP|201406301402||ACK|V.A.2014-06-27_13-22-52GTzX26.HL7|P|2.3|||||D|8859/1|DE// MSA|AA|V.A.2014-06-27_13-22-52GTzX26.HL7||||0^Message accepted|// Fehlerbeispielnachricht im Patientenmerge Fall:
// MSH|^~\&|ORBIS|UKB|IMMIP|IMMIP|201409071406||ACK|V.S.2014-09-06_13-56-37EGzOMW.HL7|P|2.3|||||D|8859/1|DE// MSA|AE|V.S.2014-09-06_13-56-37EGzOMW.HL7|ORBIS-060376: Persnr des Falles mit der Fremdpersnr: (6066670) passt nicht zur Persnr des Patienten in der Nachricht!|||207^Application internal error|

tmp = msg.copy();


if (msg['MSA']['MSA.1']['MSA.1.1'].toString() == 'AE') {


	var strMsgID = msg['MSH']['MSH.10']['MSH.10.1'].toString();
	var strMsgIDFields 	= strMsgID.split("+");
	var strDocID  		= strMsgIDFields[0];
	var strPID 	  		= strMsgIDFields[1];
	var strFallnr 		= strMsgIDFields[2];

	// Fehlertext auswerten:
	// z.B.: "ORBIS-060376: Persnr des Falles mit der Fremdpersnr: (6066670) passt nicht zur Persnr des Patienten in der Nachricht!"

	var strFehlertext = msg['MSA']['MSA.3']['MSA.3.1'].toString();
	
	if (strFehlertext.search('ORBIS-060376') >= 0) { 

		logger.warn(channelName + "| MIBI - Fehlercode ORBIS-060376 (Patientenmerge) gefunden");

		// MSA|AE|V.I.2014-08-31_14-02-5089VFdD.HL7|ORBIS-060376: Persnr des Falles mit der Fremdpersnr: (3429883) passt nicht zur Persnr des Patienten in der Nachricht!|||207^Application internal error|
		// CASE PATIENT MERGE:
		// -------------------------------------------------------------------

		var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');

		var strSQL_PM = "\
		SELECT DISTINCT\
		PF2.FREMD_PERSNR PID_NEU\
		FROM\
		PERSONMERGE PM,\
		PERSON_FREMD PF1,\
		PERSON_FREMD PF2,\
		FALL F\
		WHERE\
		PM.ALTPERSNR = PF1.PERSNR(+) AND\
		PM.NEUPERSNR = PF2.PERSNR(+) AND\
		PM.EDATE >= TO_DATE('01.01.2014', 'DD.MM.YYYY') AND\
		PM.FALLID = F.FALLID(+) AND\
		PF1.FREMD_PERSNR = '" + strPID + "'";

		// Execute SQL Statement and save them as results
		var result = dbConn.executeCachedQuery(strSQL_PM);

		var resultSize = result.size();

		if(resultSize>0){

			result.next();
			var strPID_NEU = result.getString(1); 
    		tmp['MSA']['MSA.7']['MSA.7.1'] = strPID_NEU;

		} else {

			logger.warn(channelName + "| MIBI - Keine neue PID zu alter PID " + strPID + " gefunden!");

		};

		dbConn.close();


	} else if (strFehlertext.search('ORBIS-092363') >= 0) { 

		logger.warn(channelName + "| MIBI - Fehlercode ORBIS-092363 (Fallstorno) gefunden");

		// MSA|AE|V.A.2014-09-04_10-52-30bEBDXB.HL7|ORBIS-092363: Der Fall mit der Nummer %s1 ist storniert|||207^Application internal error|
		// CASE VISIT CANCELATION (FALL STORNO):
		// -------------------------------------------------------------------

		var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');

		var strSQL_FALLNR ="\
		SELECT * \
		FROM\
		(SELECT\
		F.FALLNR,\
		PF.FREMD_PERSNR,\
		TO_CHAR(F.AUFNDAT, 'YYYYMMDDHH24MISS') AUFNDAT\
		FROM\
		FALL F,\
		PERSON_FREMD PF\
		WHERE\
		F.PERSNR = PF.PERSNR AND\
		F.STORNO_DATUM IS NULL AND\
		PF.FREMD_PERSNR = '" + strPID + "' ORDER BY AUFNDAT DESC) WHERE ROWNUM = 1";

		// logger.error(strSQL_FALLNR);

		// Execute SQL Statement and save them as results
		var result = dbConn.executeCachedQuery(strSQL_FALLNR);

		var resultSize = result.size();

		if(resultSize>0){

			result.next();
			var strFALLNR_AKT = result.getString(1); 
    		tmp['MSA']['MSA.7']['MSA.7.1'] = strFALLNR_AKT;

		} else {

			logger.warn(channelName + "| MIBI - Keine neue FALLNR zu PID " + strPID + " gefunden!");

		};

		dbConn.close();
	}


}// Allg. Anpassungen im MSH Segment
// MSH
tmp['MSH'] = msg['MSH'].copy();
tmp['MSH']['MSH.12']['MSH.12.1'] = '2.3';
tmp['MSH']['MSH.5']['MSH.5.1'] = 'MEDOS';

// MSH6.1 Anpassung.

var strErbringendeFEIn = msg['MSH']['MSH.6']['MSH.6.1'].toString();
var strErbringendeFEOut;

// [1] IM_960740
// [2] KR_960770
// [3] MR_945449
// [4] NR_960760
// [5] OF_960720
// [6] ST_945447
// [7] ZE_945490

// [1] FE INNERE MEDIZIN;FE Innere Medizin;;FE Innere Medizin;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [2] FE KINDERRADIOLOGIE;FE Kinderradiologie;;FE Kinderradiologie;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [3]FE MR-TOMOGRAPHIE;FE MR-Tomographie;;FE MR-Tomographie;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [4] FE NEURORADIOLOGIE;FE Neuroradiologie;;FE Neuroradiologie;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [5] FE OPERATIVE F�CHER;FE Operative F?cher;;FE Operative F?cher;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [6] FE STRAHLENTHERAPIE;FE Strahlentherapie;;FE Strahlentherapie;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [7] FE ZENTRALEINHEIT;FE Zentraleinheit;;FE Zentraleinheit;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// weitere Anpassungen 07.12.2017, PK:
// [8] Zentrale Terminvergabe = Kostenstelle 0000000
// [9] FE Godesh�he 		= Kostenstelle 0000001

switch(strErbringendeFEIn) {
    case 'FE Innere Medizin':
        strErbringendeFEOut = 'RAD.960740';
        break;
    case 'FE Kinderradiologie':
        strErbringendeFEOut = 'RAD.960770';
        break;
    case 'FE MR-Tomographie':
        strErbringendeFEOut = 'RAD.945449';
        break;
    case 'FE Neuroradiologie':
        strErbringendeFEOut = 'RAD.960760';
        break;
    case 'FE Operative F�cher':
        strErbringendeFEOut = 'RAD.960720';
        break;
    case 'FE Strahlentherapie':
        strErbringendeFEOut = 'RAD.945447';
        break;
    case 'FE Zentraleinheit':
        strErbringendeFEOut = 'RAD.945490';
        break;
    case 'FE Zentrale Terminvergabe':
        strErbringendeFEOut = 'RAD.0000000';
        break;
    case 'FE Godesh�he':
        strErbringendeFEOut = 'RAD.0000001';
        break;
    default:
        strErbringendeFEOut = 'RAD';
} 

tmp['MSH']['MSH.6']['MSH.6.1'] = strErbringendeFEOut;


// PID
tmp['PID'] = msg['PID'].copy();

// PV1

tmp['PV1'] = msg['PV1'].copy();

// ORC
tmp['ORC'] = msg['ORC'].copy();

// OBR

tmp['OBR'] = msg['OBR'].copy();

// OBX

// Herr Faix bittet um Umsetzung folgender Logik:
// WENN im OBX3.1 Feld "Kontraindikator" steht, DANN soll ein "-"
// und der Feldinhalt des "OBX5.1"  an den Feldinhalt angeh?ngt werden.
// Zudem soll im OBX5.1 ein "J" geschrieben werden.
// PK, 18.05.2015

for each (seg in msg.children()) {

	if (seg.name().toString() == "OBX") {

		var strVT   = seg['OBX.2']['OBX.2.1'].toString();
		var strOBX3 = seg['OBX.3']['OBX.3.1'].toString();
		// logger.error(strOBX3);

		if (strVT == 'ST') {

		var tmpOBXCount = tmp['OBX'].length();		// Aktuelle Anzahl an OBX Segmenten in tmp-Nachricht.
		createSegment('OBX', tmp, tmpOBXCount)	// neue OBX in tmp Nachricht anlegen

			if  (strOBX3 == "kontraindikationen" || strOBX3 == "infektion") {

				//		seg['OBX.3']['OBX.3.1'] = strOBX3 + '-' + seg['OBX.5']['OBX.5.1'].toString();
				// 		?nderung 31.08.2015, i.A. Hr. Faix
				// 		WENN im OBX-3 "Kontraindikation steht, dass soll der OBX-5 Feldinhalt in das
				//		OBX-3 Feld geschrieben werden.

				tmp['OBX'][tmpOBXCount]['OBX.2']['OBX.2.1'] = seg['OBX.2']['OBX.2.1'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.3']['OBX.3.1'] = seg['OBX.5']['OBX.5.1'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.5']['OBX.5.1'] = "J";

			} else {

				tmp['OBX'][tmpOBXCount] = seg.copy();

			}

		} else if (strVT == 'LOI') {

			// Herr Faix bittet um die Zusammensetzung des OBX5 Feldes aus
			// den Inhalten der Felder OBX.5.1 und OBX.6.1.
			// Hintergrund: das Zielsystem ben?tigt den Numerischen Wert mit der Ma?einheit.
			var strOBX5 			= seg['OBX.5']['OBX.5.1'].toString();
			var strOBX5Subfelder 	= strOBX5.split("#");
			var strOBX5_S1 			= strOBX5Subfelder[0];	// Analytwert.
			var strOBX5_S2 			= strOBX5Subfelder[1];	// Erbringungsdatum.
			var strOBX6 			= seg['OBX.6']['OBX.6.1'].toString();	// Masseinheit.

//			if (strOBX5_S1.trim() != '0.00') {		// trim()-Funktion l?scht die Leerzeichen; Original Textfeldeintrag = '0.00 '.

				var tmpOBXCount = tmp['OBX'].length();		// Aktuelle Anzahl an OBX Segmenten in tmp-Nachricht.
				createSegment('OBX', tmp, tmpOBXCount)	// neue OBX in tmp Nachricht anlegen

				tmp['OBX'][tmpOBXCount]['OBX.2']['OBX.2.1'] = seg['OBX.2']['OBX.2.1'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.3']['OBX.3.1'] = seg['OBX.3']['OBX.3.1'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.3']['OBX.3.2'] = seg['OBX.3']['OBX.3.2'].toString();
				tmp['OBX'][tmpOBXCount]['OBX.5']['OBX.5.1'] = strOBX5_S1 + ' ' + strOBX6 + ' ' + strOBX5_S2;
//			}

		}

	}
}// aus den Textlisten wird nun ein lesbarer Text erzeugt, der im Anschluss per Mail versandt wird.


var strMSH92 = msg['MSH']['MSH.9']['MSH.9.2'].toString();
var strAufnart = '';
var strStation_Ambulanz = '';
var strStat_Ambu_Text = '';

// Textbaustein ambulante/station�re Aufnahme
if (strMSH92 == 'A04') {	
	strAufnart = 'ambulante';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.4'].toString();
	strStat_Ambu_Text = 'Ambulanz';
} else if (strMSH92 == 'A01') { 
	strAufnart = 'station�re';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.1'].toString();
	strStat_Ambu_Text = 'Station';
};

channelMap.put('vAufnahmeart', strAufnart)
var strPID = msg['PID']['PID.2']['PID.2.1'].toString();

// Listenkomponenten zusammenstellen:
//var arrListeStatus 		= $('vSTUDSTATUSListe').split(";;");
// var arrListeKurz		= $('vSTUDKURZListe').split(";;");
var arrListeText		= $('vSTUDTEXTListe').split(";;");
// var arrListePatAbgl	= $('vSTUDPATABGLListe').split("|");
// var arrListeStudAbgl	= $('vSTUDABGLListe').split("|");
// var arrListeStudAus	= $('vSTUDAUSSCHLUSSListe').split("|");

// (1) Status

var text_baustein = '';
	
text_baustein += 	'Ein Studienpatient mit der ORBIS PID ' + strPID + ' wurde soeben auf der ' + strStat_Ambu_Text + ' ' + strStation_Ambulanz + ' aufgenommen.\n\n';
text_baustein += 	'Der Patient ist �ber das ORBIS Studienregister folgenden Studien zugeordnet:\n\n';
		
		// Studien mitteilen
		
for(var i=0; i<=arrListeText.length; i++)  {

			if (arrListeText[i] == null) continue;
			text_baustein += 	'(' + (i+1) + ')\n';
//			text_baustein += 	'Studienkurzbezeichnung: ' 	+ arrListeKurz[i].toString() + '\n';
			text_baustein += 	arrListeText[i].toString() + '\n';
//			text_baustein += 	'Formularstatus: ' 			+ arrListeStatus[i].toString() + '\n';
			text_baustein += 	'\n';



			
}		
	
channelMap.put('vTextbaustein', text_baustein);// aus den Textlisten wird nun ein lesbarer Text erzeugt, der im Anschluss per Mail versandt wird.

var strMSH92 = msg['MSH']['MSH.9']['MSH.9.2'].toString();
var strAufnart = '';
var strStation_Ambulanz = '';
var strStat_Ambu_Text = '';

// Textbaustein ambulante/station�re Aufnahme
if (strMSH92 == 'A04') {	
	strAufnart = 'ambulante';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.4'].toString();
	strStat_Ambu_Text = 'Ambulanz';
} else if (strMSH92 == 'A01') { 
	strAufnart = 'station�re';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.1'].toString();
	strStat_Ambu_Text = 'Station';
};

channelMap.put('vAufnahmeart', strAufnart)
var strPID = msg['PID']['PID.2']['PID.2.1'].toString();

// Listenkomponenten zusammenstellen:
//var arrListeStatus 		= $('vSTUDSTATUSListe').split(";;");
// var arrListeKurz		= $('vSTUDKURZListe').split(";;");
var arrListeText		= $('vSTUDTEXTListe').split(";;");
// var arrListePatAbgl	= $('vSTUDPATABGLListe').split("|");
// var arrListeStudAbgl	= $('vSTUDABGLListe').split("|");
// var arrListeStudAus	= $('vSTUDAUSSCHLUSSListe').split("|");

// (1) Status

var text_baustein = '';
	
text_baustein += 	'Ein Studienpatient mit der ORBIS PID ' + strPID + ' wurde soeben auf der ' + strStat_Ambu_Text + ' ' + strStation_Ambulanz + ' aufgenommen.\n\n';
text_baustein += 	'Der Patient ist �ber das ORBIS Studienregister folgenden Studien zugeordnet:\n\n';
		
		// Studien mitteilen
for(var i=0; i<=arrListeText.length; i++)  {

			if (arrListeText[i] == null) continue;
			text_baustein += 	'(' + (i+1) + ')\n';
//			text_baustein += 	'Studienkurzbezeichnung: ' 	+ arrListeKurz[i].toString() + '\n';
			text_baustein += 	arrListeText[i].toString() + '\n';
//			text_baustein += 	'Formularstatus: ' 			+ arrListeStatus[i].toString() + '\n';
			text_baustein += 	'\n';
}		
	
channelMap.put('vTextbaustein', text_baustein);// aus den Textlisten wird nun ein lesbarer Text erzeugt, der im Anschluss per Mail versandt wird.


var strMSH92 = msg['MSH']['MSH.9']['MSH.9.2'].toString();
var strAufnart = '';
var strStation_Ambulanz = '';
var strStat_Ambu_Text = '';

// Textbaustein ambulante/station�re Aufnahme
if (strMSH92 == 'A04') {	
	strAufnart = 'ambulante';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.4'].toString();
	strStat_Ambu_Text = 'Ambulanz';
} else if (strMSH92 == 'A01') { 
	strAufnart = 'station�re';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.1'].toString();
	strStat_Ambu_Text = 'Station';
};

channelMap.put('vAufnahmeart', strAufnart)
var strPID = msg['PID']['PID.2']['PID.2.1'].toString();

// Listenkomponenten zusammenstellen:
//var arrListeStatus 		= $('vSTUDSTATUSListe').split(";;");
// var arrListeKurz		= $('vSTUDKURZListe').split(";;");
var arrListeText		= $('vSTUDTEXTListe').split(";;");
// var arrListePatAbgl	= $('vSTUDPATABGLListe').split("|");
// var arrListeStudAbgl	= $('vSTUDABGLListe').split("|");
// var arrListeStudAus	= $('vSTUDAUSSCHLUSSListe').split("|");

// (1) Status

var text_baustein = '';
	
text_baustein += 	'Ein Studienpatient mit der ORBIS PID ' + strPID + ' wurde soeben auf der ' + strStat_Ambu_Text + ' ' + strStation_Ambulanz + ' aufgenommen.\n\n';
text_baustein += 	'Der Patient ist �ber das ORBIS Studienregister folgenden Studien zugeordnet:\n\n';
		
		// Studien mitteilen
		
for(var i=0; i<=arrListeText.length; i++)  {

			if (arrListeText[i] == null) continue;
			text_baustein += 	'(' + (i+1) + ')\n';
//			text_baustein += 	'Studienkurzbezeichnung: ' 	+ arrListeKurz[i].toString() + '\n';
			text_baustein += 	arrListeText[i].toString() + '\n';
//			text_baustein += 	'Formularstatus: ' 			+ arrListeStatus[i].toString() + '\n';
			text_baustein += 	'\n';



			
}		
	
channelMap.put('vTextbaustein', text_baustein);// aus den Textlisten wird nun ein lesbarer Text erzeugt, der im Anschluss per Mail versandt wird.


var strMSH92 = msg['MSH']['MSH.9']['MSH.9.2'].toString();
var strAufnart = '';
var strStation_Ambulanz = '';
var strStat_Ambu_Text = '';

// Textbaustein ambulante/station�re Aufnahme
if (strMSH92 == 'A04') {	
	strAufnart = 'ambulante';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.4'].toString();
	strStat_Ambu_Text = 'Ambulanz';
} else if (strMSH92 == 'A01') { 
	strAufnart = 'station�re';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.1'].toString();
	strStat_Ambu_Text = 'Station';
};

channelMap.put('vAufnahmeart', strAufnart)
var strPID = msg['PID']['PID.2']['PID.2.1'].toString();

// Listenkomponenten zusammenstellen:
//var arrListeStatus 		= $('vSTUDSTATUSListe').split(";;");
// var arrListeKurz		= $('vSTUDKURZListe').split(";;");
var arrListeText		= $('vSTUDTEXTListe').split(";;");
// var arrListePatAbgl	= $('vSTUDPATABGLListe').split("|");
// var arrListeStudAbgl	= $('vSTUDABGLListe').split("|");
// var arrListeStudAus	= $('vSTUDAUSSCHLUSSListe').split("|");

// (1) Status

var text_baustein = '';
	
text_baustein += 	'Ein Studienpatient mit der ORBIS PID ' + strPID + ' wurde soeben auf der ' + strStat_Ambu_Text + ' ' + strStation_Ambulanz + ' aufgenommen.\n\n';
text_baustein += 	'Der Patient ist �ber das ORBIS Studienregister folgenden Studien zugeordnet:\n\n';
		
		// Studien mitteilen
		
for(var i=0; i<=arrListeText.length; i++)  {

			if (arrListeText[i] == null) continue;
			text_baustein += 	'(' + (i+1) + ')\n';
//			text_baustein += 	'Studienkurzbezeichnung: ' 	+ arrListeKurz[i].toString() + '\n';
			text_baustein += 	arrListeText[i].toString() + '\n';
//			text_baustein += 	'Formularstatus: ' 			+ arrListeStatus[i].toString() + '\n';
			text_baustein += 	'\n';



			
}		
	
channelMap.put('vTextbaustein', text_baustein);// aus den Textlisten wird nun ein lesbarer Text erzeugt, der im Anschluss per Mail versandt wird.


var strMSH92 = msg['MSH']['MSH.9']['MSH.9.2'].toString();
var strAufnart = '';
var strStation_Ambulanz = '';
var strStat_Ambu_Text = '';

// Textbaustein ambulante/station�re Aufnahme
if (strMSH92 == 'A04') {	
	strAufnart = 'ambulante';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.4'].toString();
	strStat_Ambu_Text = 'Ambulanz';
} else if (strMSH92 == 'A01') { 
	strAufnart = 'station�re';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.1'].toString();
	strStat_Ambu_Text = 'Station';
};

channelMap.put('vAufnahmeart', strAufnart)
var strPID = msg['PID']['PID.2']['PID.2.1'].toString();

// Listenkomponenten zusammenstellen:
//var arrListeStatus 		= $('vSTUDSTATUSListe').split(";;");
// var arrListeKurz		= $('vSTUDKURZListe').split(";;");
var arrListeText		= $('vSTUDTEXTListe').split(";;");
// var arrListePatAbgl	= $('vSTUDPATABGLListe').split("|");
// var arrListeStudAbgl	= $('vSTUDABGLListe').split("|");
// var arrListeStudAus	= $('vSTUDAUSSCHLUSSListe').split("|");

// (1) Status

var text_baustein = '';
	
text_baustein += 	'Ein Studienpatient mit der ORBIS PID ' + strPID + ' wurde soeben auf der ' + strStat_Ambu_Text + ' ' + strStation_Ambulanz + ' aufgenommen.\n\n';
text_baustein += 	'Der Patient ist �ber das ORBIS Studienregister folgenden Studien zugeordnet:\n\n';
		
		// Studien mitteilen
		
for(var i=0; i<=arrListeText.length; i++)  {

			if (arrListeText[i] == null) continue;
			text_baustein += 	'(' + (i+1) + ')\n';
//			text_baustein += 	'Studienkurzbezeichnung: ' 	+ arrListeKurz[i].toString() + '\n';
			text_baustein += 	arrListeText[i].toString() + '\n';
//			text_baustein += 	'Formularstatus: ' 			+ arrListeStatus[i].toString() + '\n';
			text_baustein += 	'\n';



			
}		
	
channelMap.put('vTextbaustein', text_baustein);// aus den Textlisten wird nun ein lesbarer Text erzeugt, der im Anschluss per Mail versandt wird.


var strMSH92 = msg['MSH']['MSH.9']['MSH.9.2'].toString();
var strAufnart = '';
var strStation_Ambulanz = '';
var strStat_Ambu_Text = '';

// Textbaustein ambulante/station�re Aufnahme
if (strMSH92 == 'A04') {	
	strAufnart = 'ambulante';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.4'].toString();
	strStat_Ambu_Text = 'Ambulanz';
} else if (strMSH92 == 'A01') { 
	strAufnart = 'station�re';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.1'].toString();
	strStat_Ambu_Text = 'Station';
};

channelMap.put('vAufnahmeart', strAufnart)
var strPID = msg['PID']['PID.2']['PID.2.1'].toString();

// Listenkomponenten zusammenstellen:
//var arrListeStatus 		= $('vSTUDSTATUSListe').split(";;");
// var arrListeKurz		= $('vSTUDKURZListe').split(";;");
var arrListeText		= $('vSTUDTEXTListe').split(";;");
// var arrListePatAbgl	= $('vSTUDPATABGLListe').split("|");
// var arrListeStudAbgl	= $('vSTUDABGLListe').split("|");
// var arrListeStudAus	= $('vSTUDAUSSCHLUSSListe').split("|");

// (1) Status

var text_baustein = '';
	
text_baustein += 	'Ein Studienpatient mit der ORBIS PID ' + strPID + ' wurde soeben auf der ' + strStat_Ambu_Text + ' ' + strStation_Ambulanz + ' aufgenommen.\n\n';
text_baustein += 	'Der Patient ist �ber das ORBIS Studienregister folgenden Studien zugeordnet:\n\n';
		
		// Studien mitteilen
		
for(var i=0; i<=arrListeText.length; i++)  {

			if (arrListeText[i] == null) continue;
			text_baustein += 	'(' + (i+1) + ')\n';
//			text_baustein += 	'Studienkurzbezeichnung: ' 	+ arrListeKurz[i].toString() + '\n';
			text_baustein += 	arrListeText[i].toString() + '\n';
//			text_baustein += 	'Formularstatus: ' 			+ arrListeStatus[i].toString() + '\n';
			text_baustein += 	'\n';



			
}		
	
channelMap.put('vTextbaustein', text_baustein);// aus den Textlisten wird nun ein lesbarer Text erzeugt, der im Anschluss per Mail versandt wird.


var strMSH92 = msg['MSH']['MSH.9']['MSH.9.2'].toString();
var strAufnart = '';
var strStation_Ambulanz = '';
var strStat_Ambu_Text = '';

// Textbaustein ambulante/station�re Aufnahme
if (strMSH92 == 'A04') {	
	strAufnart = 'ambulante';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.4'].toString();
	strStat_Ambu_Text = 'Ambulanz';
} else if (strMSH92 == 'A01') { 
	strAufnart = 'station�re';
	strStation_Ambulanz = msg['PV1']['PV1.3']['PV1.3.1'].toString();
	strStat_Ambu_Text = 'Station';
};

channelMap.put('vAufnahmeart', strAufnart)
var strPID = msg['PID']['PID.2']['PID.2.1'].toString();

// Listenkomponenten zusammenstellen:
//var arrListeStatus 		= $('vSTUDSTATUSListe').split(";;");
// var arrListeKurz		= $('vSTUDKURZListe').split(";;");
var arrListeText		= $('vSTUDTEXTListe').split(";;");
// var arrListePatAbgl	= $('vSTUDPATABGLListe').split("|");
// var arrListeStudAbgl	= $('vSTUDABGLListe').split("|");
// var arrListeStudAus	= $('vSTUDAUSSCHLUSSListe').split("|");

// (1) Status

var text_baustein = '';
	
text_baustein += 	'Ein Studienpatient mit der ORBIS PID ' + strPID + ' wurde soeben auf der ' + strStat_Ambu_Text + ' ' + strStation_Ambulanz + ' aufgenommen.\n\n';
text_baustein += 	'Der Patient ist �ber das ORBIS Studienregister folgenden Studien zugeordnet:\n\n';
		
		// Studien mitteilen
		
for(var i=0; i<=arrListeText.length; i++)  {

			if (arrListeText[i] == null) continue;
			text_baustein += 	'(' + (i+1) + ')\n';
//			text_baustein += 	'Studienkurzbezeichnung: ' 	+ arrListeKurz[i].toString() + '\n';
			text_baustein += 	arrListeText[i].toString() + '\n';
//			text_baustein += 	'Formularstatus: ' 			+ arrListeStatus[i].toString() + '\n';
			text_baustein += 	'\n';



			
}		
	
channelMap.put('vTextbaustein', text_baustein);// Sending Applikation
msg['MSH']['MSH.3']['MSH.3.1'] = 'ORBIS';
// Sending Facility
msg['MSH']['MSH.4']['MSH.4.1'] = 'UKB';
// Recieving Application
msg['MSH']['MSH.5']['MSH.5.1'] = 'TNI';
// Recieving Facility
msg['MSH']['MSH.6']['MSH.6.1'] = 'SLAB';

// Da TNI keine Fallnummer (PV1.19 kennt und nicht zur�ck �bermittelt,
// wird die Fallnummer in das PID.19.1 (Telefonnummer) Feld kopiert - dieses Feld
// wird zur�ck �bermittelt - und in der ORU Nachricht wieder in das PV1.19
// zur�ck kopiert.

msg['PID']['PID.13']['PID.13.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString();

// L�schen der f�hrenden Nullen bei der Klinik-Nummernk�rzeln.
// Absprache mit Chris (Embla) 27.08.2014, pk.

var strFacility = msg['PV1']['PV1.3']['PV1.3.4'].toString().replace(/^0+/, '');

msg['PV1']['PV1.3']['PV1.3.4'] = strFacility;

// Weiterleitung der ADT A14 Nachrichten durch Umwidmung auf eine A01.

var strEVN11 = msg['EVN']['EVN.1']['EVN.1.1'].toString();

if (strEVN11 == "A14") {

//	msg['EVN']['EVN.1']['EVN.1.1'] = "A01";
	msg['MSH']['MSH.9']['MSH.9.2'] = "A01";

}

// Kopieren des PID.3 (PID Nummer) in das PID.19 Feld, in Absprache mit Herrn Geiliing (TNI)
// PK, 12.11.2014.

msg['PID']['PID.19']['PID.19.1'] = msg['PID']['PID.3']['PID.3.1'].toString();// Umstellung der ADT Belieferung von SAP IS-H auf ORBIS.
// Fallnummernkreis und PID Nummernkreis sollen beibehalten werden.

// SAP Fallnummern und PID emulieren.
// SAP PID Nummer = Prefix '0' + ORBIS PID Nummer.
msg['PID']['PID.2']['PID.2.1'] = '0' + msg['PID']['PID.2']['PID.2.1'].toString();
msg['PID']['PID.3']['PID.3.1'] = '0' + msg['PID']['PID.3']['PID.3.1'].toString();

// SAP Fallnummer = Prefix '0' + ORBIS Fallnummer.
msg['PV1']['PV1.19']['PV1.19.1'] = '0' + msg['PV1']['PV1.19']['PV1.19.1'].toString();

// NK1 Segmente loeschen.
// Loop through all segments
for each (seg in msg.children())
{
	// If the segment is a NK1 segment, delete it.
	var segName = seg.name().toString();
	if (segName == 'NK1')
	{
		delete msg[segName];
	}
}// F�hrende Nullen a la SAP anh�ngen.
// PID
msg['PID']['PID.2']['PID.2.1']   = '0' + msg['PID']['PID.2']['PID.2.1'].toString();
msg['PID']['PID.3']['PID.3.1']   = '0' + msg['PID']['PID.3']['PID.3.1'].toString();
// PV1
msg['PV1']['PV1.19']['PV1.19.1'] = '0' + msg['PV1']['PV1.19']['PV1.19.1'].toString();

// Anforderungen von Herrn Knittel, Datapec (AnDok Hersteller).
// Sicherstellung, dass das Geburtsdatum immer auf 8 Stellen begrenzt wird - auch
// bei Neugeborenen, bei denen die Geburtszeit aufgef�hrt wird.
// http://www.w3schools.com/jsref/jsref_slice_string.asp
// Beispiel: aus 2015082415221022 wird 20150824.
msg['PID']['PID.7']['PID.7.1']	 = msg['PID']['PID.7']['PID.7.1'].toString().slice(0,8);

// Strassennamen auf 30 Zeichen k�rzen.
msg['PID']['PID.11']['PID.11.1'] = msg['PID']['PID.11']['PID.11.1'].toString().slice(0,30);//Leistende Stelle f�r die Pneumologie-Ambulanz in ORC 13.1 eintragen
msg['ORC']['ORC.13']['ORC.13.1'] = '2452PNEUAMB';//Leistende Stelle f�r die Kinderkardiologische Ambulanz in ORC 13.1 eintragen
msg['ORC']['ORC.13']['ORC.13.1'] = '1851KKAAMB';//Leistende Stelle f�r die Kinderkardiologische Ambulanz in ORC 13.1 eintragen
msg['ORC']['ORC.13']['ORC.13.1'] = '1851KKAAMB';//Leistende Stelle f�r die Pneumologie-Ambulanz in ORC 13.1 eintragen
msg['ORC']['ORC.13']['ORC.13.1'] = '2452PNEUAMB';// Handynummer von Dienstarzt...004915158233442
// TestNummer: 004917661651070
//var reviever = "0049017661651070";
var reviever = "004915158233442";
var SMSText = "Patient " + $('NTE3_Name') + ", " + $('NTE4_GebDat') + " wird von der Malteser ZNA an die Kardiologie transferiert. Termin-Nr. " + $('TerminID') + ". Bem.: " + $('NTE5_Info');
var SMSBody = "{\"messages\":{\"authentication\":{\"producttoken\":\"53E47836-56C3-488E-B553-39EB6177E56B\"},\"msg\":[{\"allowedChannels\":[\"SMS\"],\
			\"from\":\""+"SMSMalteser"+"\",\"to\":[{\"number\":\""+reviever+"\"}],\"minimumNumberOfMessageParts\":1,\
			\"maximumNumberOfMessageParts\":8,\"body\":{\"type\":\"auto\",\"content\":\""+SMSText+"\"},\"reference\":\"MALTESER\"}]}}";
channelMap.put('SMSBody',SMSBody);
tmp = SMSBody;
//logger.info("SMS body build:" + SMSBody);// FALLNR 
tmp['row']['column1'] = msg['fallnr'].toString();
// OEBENENAME
tmp['row']['column2'] = msg['oebenename'].toString();
// STATIONSKONTAKT_BEGINN
tmp['row']['column3'] = msg['stationskontakt_beginn'].toString();
// STATIONSKONTAKT_ENDE
tmp['row']['column4'] = msg['stationskontakt_ende'].toString();
// KALENDERTAG
tmp['row']['column5'] = msg['kalendertag'].toString();
// FLAG100_MITTAGS
tmp['row']['column6'] = msg['flag1200_mittags'].toString();// F�r Mortara: Anpassen der OE im PV1.5, z.B. wenn �ber die Notfallaufnahme ein Auftrag bzw. ORM Nachricht erzeugt wird,
// dann erscheint momentan die OE 9002INZ, was falsch ist; korrekt w�re die Institutskennung "90 INZ"

if (msg['PV1']['PV1.3']['PV1.3.4'].toString() == '90') {
	
	msg['PV1']['PV1.3']['PV1.3.5'] = '90 INZ';
	
}


// Immer Updates senden:
//if (msg['ORC']['ORC.1']['ORC.1.1'] == 'NW') {

//	msg['ORC']['ORC.1']['ORC.1.1'] = 'XO';
//}

// tempor�re L�sung, bis Herr Faix die Einmalanforderung umgestellt hat.
//if (msg['PV1']['PV1.3']['PV1.3.5'].toString().length>0) {
//	msg['ORC']['ORC.13']['ORC.13.1'] = msg['PV1']['PV1.3']['PV1.3.5'].toString();
//}//Mapping
tmp['row']['MEDDATUM']				= msg['f_MEDDATUM'].toString();
tmp['row']['PID']					= msg['PID'].toString();
tmp['row']['Fallnummer']				= msg['Fallnummer'].toString();
tmp['row']['NAME']					= msg['NAME'].toString();
tmp['row']['VORNAME']				= msg['VORNAME'].toString();
tmp['row']['GESCHLECHT']				= msg['GESCHLECHT'].toString();
tmp['row']['GEBDAT']				= msg['f_GEBDAT'].toString();
tmp['row']['DOKNAMESTRING']			= msg['DOKNAMESTRING'].toString();
tmp['row']['STATUSSTRING']			= msg['STATUSSTRING'].toString();
tmp['row']['REZEPTTEXT']				= msg['f_REZEPTTEXT'].toString();//Mapping

tmp['row']['MEDDATUM']				= msg['f_MEDDATUM'].toString();
tmp['row']['PID']					= msg['PID'].toString();
tmp['row']['Fallnummer']				= msg['Fallnummer'].toString();
tmp['row']['NAME']					= msg['NAME'].toString();
tmp['row']['VORNAME']				= msg['VORNAME'].toString();
tmp['row']['GESCHLECHT']				= msg['GESCHLECHT'].toString();
tmp['row']['GEBDAT']				= msg['f_GEBDAT'].toString();
tmp['row']['DOKNAMESTRING']			= msg['DOKNAMESTRING'].toString();
tmp['row']['STATUSSTRING']			= msg['STATUSSTRING'].toString();
tmp['row']['REZEPTTEXT']				= msg['f_REZEPTTEXT'].toString();// Mapping

tmp['row']['FALLNR']		= msg['fallnr'].toString();
tmp['row']['ISPRIVAT']		= msg['isprivat'].toString();
tmp['row']['ICPM']			= msg['icpm'].toString();
tmp['row']['ICPMTEXT']		= msg['icpmtext'].toString();
tmp['row']['DURCHF_DATUM']	= msg['durchf_datum'].toString();
tmp['row']['FALLSTATUS']		= msg['fallstatus'].toString();
tmp['row']['AUFNAHMENDE_OE']	= msg['aufnehmende_oe'].toString();
tmp['row']['AMBU_KURZ']		= msg['ambu_kurz'].toString();
tmp['row']['AMBU_NAME']		= msg['ambu_name'].toString();
tmp['row']['KLINIK']		= msg['klinik'].toString();
tmp['row']['KLINIKNAME']		= msg['klinikname'].toString();
tmp['row']['FAB_OPS']		= msg['fab_ops'].toString();
tmp['row']['FAB_OPS_NAME']	= msg['fab_ops_name'].toString();
tmp['row']['OE_MA']			= msg['oe_ma'].toString();// Mapping von XML in CSV Struktur.

tmp['row']['column1'] = msg['sysdatum'].toString();
tmp['row']['column2'] = msg['fa'].toString();
tmp['row']['column3'] = msg['fa_lang'].toString();
tmp['row']['column4'] = msg['stat'].toString();
tmp['row']['column5'] = msg['stat_lang'].toString();
tmp['row']['column6'] = msg['fallnr'].toString();
tmp['row']['column7'] = msg['fallstatus'].toString();
tmp['row']['column8'] = msg['falltypbez'].toString();
tmp['row']['column9'] = msg['aufnahmeart'].toString();
tmp['row']['column10'] = msg['name'].toString();
tmp['row']['column11'] = msg['vorname'].toString();
tmp['row']['column12'] = msg['gebdat'].toString();
tmp['row']['column13'] = msg['aufndat'].toString();
tmp['row']['column14'] = msg['v_entldat'].toString();
tmp['row']['column15'] = msg['entldat'].toString();
tmp['row']['column16'] = msg['erf_ahd'].toString();
tmp['row']['column17'] = msg['erf_aufndat'].toString();
tmp['row']['column18'] = msg['erf_aufgew'].toString();
tmp['row']['column19'] = msg['f_301vollst�ndig'].toString();
tmp['row']['column20'] = msg['f_latenz_in_tagen'].toString();
tmp['row']['column21'] = msg['istbgl'].toString();

/*
 TO_CHAR(SYSDATE,'YYYYMMDDhh24miss') AS SYSDATUM,
    T17_ORGAEBENE.OEBENEKURZ AS FA,
    T17_ORGAEBENE.OEBENENAME AS FA_LANG,
    T18_ORGAEBENE.OEBENEKURZ AS STAT,
    T18_ORGAEBENE.OEBENENAME AS STAT_LANG,
    F.FALLNR AS FALLNR,
    FAS.FALLSTATUS AS FALLSTATUS,
    FT.FALLTYPBEZ AS FALLTYPBEZ,
    AA.AUFNAHMEART AS AUFNAHMEART,
    NAT.NAME AS NAME,
    NAT.VORNAME AS VORNAME,
    TO_CHAR(NAT.GEBDAT,'YYYYMMDDhh24miss')	AS GEBDAT,
    TO_CHAR(F.AUFNDAT,'YYYYMMDDhh24miss')  	AS AUFNDAT,
    TO_CHAR(F.V_ENTLDAT,'YYYYMMDDhh24miss') AS V_ENTLDAT,
    TO_CHAR(F.ENTLDAT,'YYYYMMDDhh24miss')  	AS ENTLDAT,
    TO_CHAR(SUB2.FESTSTDATUM,'YYYYMMDDhh24miss') AS ERF_AHD,
    TO_CHAR(SUB1.LDATE,'YYYYMMDDhh24miss') 	AS ERF_AUFNDAT,
    TO_CHAR(SUB3.LDATE,'YYYYMMDDhh24miss') 	AS ERF_AUFGEW,
    DECODE(SUB1.LDATE,NULL,'NEIN', DECODE(SUB2.FESTSTDATUM,NULL,'NEIN',DECODE(SUB3.LDATE,NULL, DECODE(SIGN((ROUND((F.AUFNDAT - NAT.GEBDAT)) - 365)),1,'JA','NEIN'),'JA'))) AS F_301VOLLST�NDIG,
    GREATEST(ROUND((DECODE(SUB2.FESTSTDATUM,NULL,SYSDATE,SUB2.FESTSTDATUM) - F.AUFNDAT)), ROUND((DECODE(SUB1.LDATE,NULL,SYSDATE,SUB1.LDATE) - F.AUFNDAT)),    DECODE(SIGN((ROUND((F.AUFNDAT - NAT.GEBDAT)) - 365)),1,0,ROUND((SUB3.LDATE - F.AUFNDAT)))) AS F_LATENZ_IN_TAGEN
*/// hier muss noch das Mapping vorgenommen werden.

tmp['row']['FALLNR']					= msg['fallnr'].toString();
tmp['row']['IST_PRIVATPATIENT']			= msg['isprivat'].toString();
tmp['row']['AUFNDAT']					= msg['aufndat'].toString();
tmp['row']['FALLSTATUS']					= msg['fallstatus'].toString();
tmp['row']['MEDIZINISCHES_DATUM']			= msg['medizinischesdatum'].toString();
tmp['row']['ANFORDERNDE_FAB']				= msg['anforderndefachabteilung'].toString();
tmp['row']['FORMULARID']					= msg['formularid'].toString();
tmp['row']['AF_STATUS']					= msg['af_status'].toString();
tmp['row']['UNTERSUCHUNG_LEISTUNG']		= msg['untersuchung_leistungen'].toString();
tmp['row']['BE_MEDIZINISCHES_DATUM']		= msg['be_medizinischesdatum'].toString();
tmp['row']['BE_STATUS']					= msg['be_status'].toString();
tmp['row']['TEXT']						= msg['text'].toString();
tmp['row']['KURZTEXT']					= msg['kurztext'].toString();
tmp['row']['EINZELLEISTUNG']				= msg['einzelleistung'].toString();// Mapping von XML in CSV Struktur.

tmp['row']['column1'] = msg['sysdatum'].toString();
tmp['row']['column2'] = msg['fa'].toString();
tmp['row']['column3'] = msg['fa_lang'].toString();
tmp['row']['column4'] = msg['stat'].toString();
tmp['row']['column5'] = msg['stat_lang'].toString();
tmp['row']['column6'] = msg['fallnr'].toString();
tmp['row']['column7'] = msg['fallstatus'].toString();
tmp['row']['column8'] = msg['falltypbez'].toString();
tmp['row']['column9'] = msg['aufnahmeart'].toString();
tmp['row']['column10'] = msg['name'].toString();
tmp['row']['column11'] = msg['vorname'].toString();
tmp['row']['column12'] = msg['gebdat'].toString();
tmp['row']['column13'] = msg['aufndat'].toString();
tmp['row']['column14'] = msg['v_entldat'].toString();
tmp['row']['column15'] = msg['entldat'].toString();
tmp['row']['column16'] = msg['erf_ahd'].toString();
tmp['row']['column17'] = msg['erf_aufndat'].toString();
tmp['row']['column18'] = msg['erf_aufgew'].toString();
tmp['row']['column19'] = msg['f_301vollst�ndig'].toString();
tmp['row']['column20'] = msg['f_latenz_in_tagen'].toString();
tmp['row']['column21'] = msg['istbgl'].toString();

/*
 TO_CHAR(SYSDATE,'YYYYMMDDhh24miss') AS SYSDATUM,
    T17_ORGAEBENE.OEBENEKURZ AS FA,
    T17_ORGAEBENE.OEBENENAME AS FA_LANG,
    T18_ORGAEBENE.OEBENEKURZ AS STAT,
    T18_ORGAEBENE.OEBENENAME AS STAT_LANG,
    F.FALLNR AS FALLNR,
    FAS.FALLSTATUS AS FALLSTATUS,
    FT.FALLTYPBEZ AS FALLTYPBEZ,
    AA.AUFNAHMEART AS AUFNAHMEART,
    NAT.NAME AS NAME,
    NAT.VORNAME AS VORNAME,
    TO_CHAR(NAT.GEBDAT,'YYYYMMDDhh24miss')	AS GEBDAT,
    TO_CHAR(F.AUFNDAT,'YYYYMMDDhh24miss')  	AS AUFNDAT,
    TO_CHAR(F.V_ENTLDAT,'YYYYMMDDhh24miss') AS V_ENTLDAT,
    TO_CHAR(F.ENTLDAT,'YYYYMMDDhh24miss')  	AS ENTLDAT,
    TO_CHAR(SUB2.FESTSTDATUM,'YYYYMMDDhh24miss') AS ERF_AHD,
    TO_CHAR(SUB1.LDATE,'YYYYMMDDhh24miss') 	AS ERF_AUFNDAT,
    TO_CHAR(SUB3.LDATE,'YYYYMMDDhh24miss') 	AS ERF_AUFGEW,
    DECODE(SUB1.LDATE,NULL,'NEIN', DECODE(SUB2.FESTSTDATUM,NULL,'NEIN',DECODE(SUB3.LDATE,NULL, DECODE(SIGN((ROUND((F.AUFNDAT - NAT.GEBDAT)) - 365)),1,'JA','NEIN'),'JA'))) AS F_301VOLLST�NDIG,
    GREATEST(ROUND((DECODE(SUB2.FESTSTDATUM,NULL,SYSDATE,SUB2.FESTSTDATUM) - F.AUFNDAT)), ROUND((DECODE(SUB1.LDATE,NULL,SYSDATE,SUB1.LDATE) - F.AUFNDAT)),    DECODE(SIGN((ROUND((F.AUFNDAT - NAT.GEBDAT)) - 365)),1,0,ROUND((SUB3.LDATE - F.AUFNDAT)))) AS F_LATENZ_IN_TAGEN
*/tmp['row']['column1'] 	= msg['abfragezeit'].toString();
tmp['row']['column2'] 	= msg['stationsid'].toString();
tmp['row']['column3'] 	= msg['station'].toString();
tmp['row']['column4'] 	= msg['raum'].toString();
tmp['row']['column5']   = msg['raumkurz'].toString()
tmp['row']['column6'] 	= msg['raumid'].toString();
tmp['row']['column7'] 	= msg['bett'].toString();
tmp['row']['column8']   = msg['bettkurz'].toString()
tmp['row']['column9'] 	= msg['oebeneid'].toString();
tmp['row']['column10'] 	= msg['fallnr'].toString();
// Anpassungen in Abstimmung mit Herrn Jungck. Ab 03.09.2014.
// Nur noch das Geburtajahr ausgeben.
tmp['row']['column11']	= msg['gebdat'].toString().substring(0,4);
// Es soll nur noch der erste und zweite Buchstabe des Nachnamen angezeigt werden.
tmp['row']['column12']	= msg['patname'].toString().substring(0,2);
tmp['row']['column13'] 	= msg['geschlecht'].toString();
tmp['row']['column14'] 	= msg['aufndat'].toString();
tmp['row']['column15'] 	= msg['bettsperrtext'].toString();
tmp['row']['column16'] 	= msg['raumsperrtext'].toString();
// Nur anzeigen, dass CAVE vorhanden.
if (msg['cave'].toString().length > 0) {

	tmp['row']['column17'] = 'Eintrag vorhanden';
	// tmp['row']['column17'] 	= msg['cave'].toString();
} else {

	tmp['row']['column17'] = '';
}

tmp['row']['column18']	= msg['fab_kurz'].toString();
tmp['row']['column19']	= msg['fab_lang'].toString();
tmp['row']['column20']	= msg['drg'].toString();
tmp['row']['column21']	= msg['icdahd'].toString();
tmp['row']['column22']	= msg['aktfab_kurz'].toString();
tmp['row']['column23']	= msg['aktfab_lang'].toString();tmp['row']['column1'] 	= msg['abfragezeit'].toString();
tmp['row']['column2'] 	= msg['stationsid'].toString();
tmp['row']['column3'] 	= msg['station'].toString();
tmp['row']['column4'] 	= msg['raum'].toString();
tmp['row']['column5']   = msg['raumkurz'].toString()
tmp['row']['column6'] 	= msg['raumid'].toString();
tmp['row']['column7'] 	= msg['bett'].toString();
tmp['row']['column8']   = msg['bettkurz'].toString()
tmp['row']['column9'] 	= msg['oebeneid'].toString();
tmp['row']['column10'] 	= msg['fallnr'].toString();
// Anpassungen in Abstimmung mit Herrn Jungck. Ab 03.09.2014.
// Nur noch das Geburtajahr ausgeben.
tmp['row']['column11']	= msg['gebdat'].toString().substring(0,4);
// Es soll nur noch der erste und zweite Buchstabe des Nachnamen angezeigt werden.
tmp['row']['column12']	= msg['patname'].toString().substring(0,2);
tmp['row']['column13'] 	= msg['geschlecht'].toString();
tmp['row']['column14'] 	= msg['aufndat'].toString();
tmp['row']['column15'] 	= msg['bettsperrtext'].toString();
tmp['row']['column16'] 	= msg['raumsperrtext'].toString();
// Nur anzeigen, dass CAVE vorhanden.
if (msg['cave'].toString().length > 0) {

	tmp['row']['column17'] = 'Eintrag vorhanden';
	// tmp['row']['column17'] 	= msg['cave'].toString();
} else {

	tmp['row']['column17'] = '';
}

tmp['row']['column18']	= msg['fab_kurz'].toString();
tmp['row']['column19']	= msg['fab_lang'].toString();
tmp['row']['column20']	= msg['drg'].toString();
tmp['row']['column21']	= msg['icdahd'].toString();
tmp['row']['column22']	= msg['aktfab_kurz'].toString();
tmp['row']['column23']	= msg['aktfab_lang'].toString();connectorMap.put('vABFRAGEZEIT', msg['abfragezeit'].toString());
connectorMap.put('vSTATIONSID',  msg['stationsid'].toString() );
connectorMap.put('vSTATION',     msg['station'].toString());
connectorMap.put('vRAUM',        msg['raum'].toString());
connectorMap.put('vRAUMKURZ',    msg['raumkurz'].toString());
connectorMap.put('vRAUMID',      msg['raumid'].toString());
connectorMap.put('vBETT',        msg['bett'].toString());
connectorMap.put('vBETTKURZ',    msg['bettkurz'].toString());
connectorMap.put('vOEBENEID',    msg['oebeneid'].toString());
connectorMap.put('vFALLNR',      msg['fallnr'].toString());
connectorMap.put('vGEBDAT',      msg['gebdat'].toString());
connectorMap.put('vNAME',        msg['patname'].toString());
connectorMap.put('vGESCHLECHT',  msg['geschlecht'].toString());
connectorMap.put('vAUFNDAT',     msg['aufndat'].toString());
connectorMap.put('vBETTSPERRTEXT', msg['bettsperrtext'].toString());
connectorMap.put('vRAUMSPERRTEXT', msg['raumsperrtext'].toString());
connectorMap.put('vCAVE',        msg['cave'].toString());
connectorMap.put('vFABKURZ',     msg['fab_kurz'].toString());
connectorMap.put('vFABLANG',     msg['fab_lang'].toString());
connectorMap.put('vDRG1',         msg['drg'].toString());
connectorMap.put('vICDAHD',       msg['icdahd'].toString());
connectorMap.put('vSCHNELLINFOTEXT', msg['schnellinfotext'].toString());
connectorMap.put('vAKTFABKURZ',   msg['aktfab_kurz'].toString());
connectorMap.put('vAKTFABLANG',   msg['aktfab_lang'].toString());// Mapping von XML in CSV Struktur.

tmp['row']['column1'] = msg['sysdatum'].toString();
tmp['row']['column2'] = msg['fa'].toString();
tmp['row']['column3'] = msg['fa_lang'].toString();
tmp['row']['column4'] = msg['stat'].toString();
tmp['row']['column5'] = msg['stat_lang'].toString();
tmp['row']['column6'] = msg['fallnr'].toString();
tmp['row']['column7'] = msg['fallstatus'].toString();
tmp['row']['column8'] = msg['falltypbez'].toString();
tmp['row']['column9'] = msg['aufnahmeart'].toString();
tmp['row']['column10'] = msg['name'].toString();
tmp['row']['column11'] = msg['vorname'].toString();
tmp['row']['column12'] = msg['gebdat'].toString();
tmp['row']['column13'] = msg['aufndat'].toString();
tmp['row']['column14'] = msg['v_entldat'].toString();
tmp['row']['column15'] = msg['entldat'].toString();
tmp['row']['column16'] = msg['erf_ahd'].toString();
tmp['row']['column17'] = msg['erf_aufndat'].toString();
tmp['row']['column18'] = msg['erf_aufgew'].toString();
tmp['row']['column19'] = msg['f_301vollst�ndig'].toString();
tmp['row']['column20'] = msg['f_latenz_in_tagen'].toString();
tmp['row']['column21'] = msg['istbgl'].toString();// Es gilt die mehrfache Auff�hrung der NTE Segmente in ein NTE Segment f�r die MediTEX ORU Nachricht zu �berf�hren.
// PK, 24.07.2019


// MSH
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['MSH']['MSH.7']['TS.1'].toString();
tmp['MSH']['MSH.10']['MSH.10.1'] = msg['MSH']['MSH.10'].toString();


// PID
tmp['PID']['PID.2']['PID.2.1'] = Number(msg['ORU_R01.RESPONSE']['ORU_R01.PATIENT']['PID']['PID.3']['CX.1'].toString());
tmp['PID']['PID.3']['PID.3.1'] = Number(msg['ORU_R01.RESPONSE']['ORU_R01.PATIENT']['PID']['PID.3']['CX.1'].toString());

tmp['PID']['PID.5']['PID.5.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.PATIENT']['PID']['PID.5']['XPN.1'].toString();
tmp['PID']['PID.5']['PID.5.2'] = msg['ORU_R01.RESPONSE']['ORU_R01.PATIENT']['PID']['PID.5']['XPN.2'].toString();

tmp['PID']['PID.7']['PID.7.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.PATIENT']['PID']['PID.7']['TS.1'].toString();
tmp['PID']['PID.8']['PID.8.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.PATIENT']['PID']['PID.8'].toString();



// PV1
// exisitert nicht in MediTEX

// ORC
tmp['ORC']['ORC.1']['ORC.1.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][0]['ORC']['ORC.1'].toString();
tmp['ORC']['ORC.2']['ORC.2.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][0]['ORC']['ORC.2']['EI.1'].toString();
tmp['ORC']['ORC.5']['ORC.5.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][0]['ORC']['ORC.5'].toString();
tmp['ORC']['ORC.9']['ORC.9.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][0]['ORC']['ORC.9']['TS.1'].toString();
tmp['ORC']['ORC.12']['ORC.12.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][0]['ORC']['ORC.12']['XCN.1'].toString();


// OBR
tmp['OBR']['OBR.1']['OBR.1.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][0]['OBR']['OBR.1'].toString();
tmp['OBR']['OBR.2']['OBR.2.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][0]['OBR']['OBR.2']['EI.1'].toString();
tmp['OBR']['OBR.7']['OBR.7.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][0]['OBR']['OBR.7']['TS.1'].toString();
tmp['OBR']['OBR.15']['OBR.15.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][0]['OBR']['OBR.15']['CM_SPS.1']['CE.2'].toString();
tmp['OBR']['OBR.16']['OBR.16.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][0]['OBR']['OBR.16']['XCN.1'].toString(); // Anfordernde Kostenstelle
tmp['OBR']['OBR.25']['OBR.25.1'] = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][0]['OBR']['OBR.25'].toString();


// OBX
var SegCount = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'].length(); 
// logger.error(SegCount);

//var valid_Observations = new RegExp("GLU|HOMA|TSH|LH|FSH|E2|PROG|TESTO|INSU|AMH|HCG|HBSAG");	// Untersuchungen, die ber�cksichtigt bzw. weitergeleitet werden sollen

for (var i=0; i<SegCount; i++) {		// Durchlauf der ORU_R01_ORDER_OBSERVATION

 {	
		// OBX Anlage; ein OBX je ORU_R01_ORDER_OBSERVATION, daher:
		var tmpOBXCount = tmp['OBX'].length();
		createSegment('OBX', tmp, tmpOBXCount);
		tmp['OBX'][tmpOBXCount] = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][i]['ORU_R01.OBSERVATION']['OBX'];

		var msgNTECount = msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][i]['ORU_R01.OBSERVATION']['NTE'].length();

		if (msgNTECount > 0) {		// exisitert �berhaupt ein NTE Segment in der msg, wenn ja, dann weiter...

			// logger.error('NTE Count: ' + msgNTECount);
			// NTE Anlage; ein NTE je ORU_R01_ORDER_OBSERVATION, daher:	
			var tmpNTECount = tmp['NTE'].length();
			createSegment('NTE', tmp, tmpNTECount);

			tmp['NTE'][tmpNTECount]['NTE.1'] = '1';
			var tmpNTE3Comment = '';
		
			// Zusammenfassen der NTE3-Kommentartext aus den msg-NTE Segement(en) zu einem Text f�r das eine NTE Segment in der tmp Nachricht
	
			for (var j=0; j< msgNTECount; j++) {		// Durchlauf der NTE Segmente in einer ORDER_OBSERVATION

				//logger.error('NTE Comment: ' + msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][i]['ORU_R01.OBSERVATION']['NTE'][j]['NTE.3'].toString());
				if (j==0) { 	// Kosmetik, damit nur ab der zweiten Zeile ein Zeilenumbruch vorangestellt wird.
				
					tmpNTE3Comment += msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][i]['ORU_R01.OBSERVATION']['NTE'][j]['NTE.3'].toString();
				
				} else {
				
					tmpNTE3Comment += '\\.br\\' + msg['ORU_R01.RESPONSE']['ORU_R01.ORDER_OBSERVATION'][i]['ORU_R01.OBSERVATION']['NTE'][j]['NTE.3'].toString();
				}
			
			}
		
			tmp['NTE'][tmpNTECount]['NTE.3'] = tmpNTE3Comment;		// Schreiben der zusammengefassten Kommentaren aus allen NTE Segmenten zu einer Beobachtung (OBX)
														// in ein NTE Segment f�r MediTEX
		}
	}
}// F�llen des MSH.6.1
msg['MSH']['MSH.6']['MSH.6.1'] = "MVZ";

//Da im Leistungsdatum aus dem Medos-Export die Uhrzeit nicht gef�llt ist, 
//wird das Leistungsdatum auf das Datum/Uhrzeit des Nachrichtenexports gesetzt. 
for(var i=0;i<msg['FT1'].length();i++) {
	msg['FT1'][i]['FT1.4']['FT1.4.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();
}// Transformationen f�r den Import in den Windows KHV-JAIF (ukb494).
/*
	// MSH
	msg['MSH']['MSH.3']['MSH.3.1'] = 'UKB';
	msg['MSH']['MSH.4']['MSH.4.1'] = 'MMI'; 

	// TXA 
	msg['TXA']['TXA.2']['TXA.2.1'] = 'MMI Medikationsplan';

	// Funktioniert so nicht. Die HL7 Ausgabe des MMI Moduls darf nicht ver�ndert werden, da sonst ORBIS-intern
	// die Verarbeitungslogik nicht funktioniert. Vgl. COM0568258
*/

// Produktiv MMI Server ukb581.
var UNCPath = '\\\\ukb581.klinik.bn\\MMI_Medikationsplan\\';

msg['TXA']['TXA.16']['TXA.16.1'] = UNCPath + msg['TXA']['TXA.16']['TXA.16.1'].toString();// msg['OBR']['OBR.25']['OBR.25.1'] = 'K';//
	msg['MSH']['MSH.3']['MSH.3.1'] = 'Textbefund';


	// OBR-20 gibt die Befundart an: d.h. Pathologiebefund, Radiologiebefund, etc.
	// Eingef�hrt am 17.12.2015, PK.
	msg['OBR']['OBR.20']['OBR.20.1'] = 'Nuklearmedizinbefund';if (msg['PV1']['PV1.8']['PV1.8.2'].toString().indexOf("Dermatologie") != -1){
	msg['OBR']['OBR.2']='';
}// Umgebungsvariablen in Anh�ngigkeit von MSH.4.1 setzen = hier = "RAD"
// Vorlage aus eGate Datei Hl7OruTOHl7OruSsstText.tsc
// Befunddefinition und -aufbau bitte der Intranet Seite 
// http://www.hno.intern/intranet/dokus/handbuch/node52.html entnehmen.

        strPrefix 			= "#";
		strSuffix 			= "R";
		numSkip_obx_start 	= 6;
		numSkip_obx_end   	= 21;
		strVerweis        	= "Radiologie, ";
		strMSH31			= "Textbefund";
 
// Allgemeiner Teil - Aufbau der HL7 ORU Nachricht 
// Basis-Segmente (MSH, EVN, PID, PV1, ORC, OBR, OBX)

// --------------------------------------- MSH --------------------------------- //

msg['MSH']['MSH.3']['MSH.3.1'] = strMSH31;

// --------------------------------------- PID --------------------------------- //

	// (1) PID.3.1 -> f�hrende Null wegnehmen.
	msg['PID']['PID.3']['PID.3.1']  = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// --------------------------------------- PV1 --------------------------------- //
	// (1) PV1.19 -> f�hrende Null wegnehmen.
	msg['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());
	msg['PV1']['PV1.3'] = '';	// L�schen des Aufenthaltorts.

// --------------------------------------- ORC --------------------------------- //
    createSegmentAfter('ORC', msg['PV1'])
	msg['ORC']['ORC.3']['ORC.3.1'] = strPrefix + msg['OBR']['OBR.3']['OBR.3.1'].toString() + strSuffix;

// --------------------------------------- OBR --------------------------------- //
    // OBR erstellen:
	msg['OBR']['OBR.4'] = strVerweis + msg['OBR']['OBR.20']['OBR.20.1'].toString();

	// OBR-20 gibt die Befundart an: d.h. Pathologiebefund, Radiologiebefund, etc.
	// Eingef�hrt am 17.12.2015, PK.
	msg['OBR']['OBR.20']['OBR.20.1'] = 'Radiologiebefund';

// --------------------------------------- OBX --------------------------------- //

// Jesaja Umkopiermassnahme der SUID:
// in einem Befund k�nnen mehrere SUIDs vorkommen. Diese m�ssen laut CompuMedic 
// im ORB.2 Feld als Liste, mit ~ getrennt geschrieben werden.
// Bsp: |SUID1~SUID2~SUID3|

var strSUIDListe = '';
var SUIDFlag = 0;
var strOBX21 = '';

for each (seg in msg..OBX) {

	// if exists 
	strOBX21 = seg['OBX.2']['OBX.2.1'].toString();

	if (strOBX21 == 'SUID') { 

		if(SUIDFlag == 0) {
							strSUIDListe += seg['OBX.5']['OBX.5.1'].toString();
						   	SUIDFlag = 1;

		} else if (SUIDFlag == 1) {

							strSUIDListe += '~' + seg['OBX.5']['OBX.5.1'].toString();
		}

	}

}

// OBR.2.1
// Alle SUID, die in diesem Feld stehen, werden �ber die Jesaja-DICOM Importschnittstelle
// vom IMPAX EE abgefragt.
// Aktivierung am 12.01.2016.

msg['OBR']['OBR.2']['OBR.2.1'] = strSUIDListe;// Umgebungsvariablen in Anh�ngigkeit von MSH.4.1 setzen = hier = "RAD"
// Vorlage aus eGate Datei Hl7OruTOHl7OruSsstText.tsc
// Befunddefinition und -aufbau bitte der Intranet Seite 
// http://www.hno.intern/intranet/dokus/handbuch/node52.html entnehmen.

        strPrefix 			= "#";
		strSuffix 			= "R";
		numSkip_obx_start 	= 6;
		numSkip_obx_end   	= 21;
		strVerweis        	= "Radiologie, ";
		strMSH31			= "Textbefund";
 
// Allgemeiner Teil - Aufbau der HL7 ORU Nachricht 
// Basis-Segmente (MSH, EVN, PID, PV1, ORC, OBR, OBX)

// --------------------------------------- MSH --------------------------------- //
	tmp['MSH'] = msg['MSH'].copy();
	tmp['MSH']['MSH.3']['MSH.3.1'] = strMSH31;

// --------------------------------------- PID --------------------------------- //
	tmp['PID'] = msg['PID'].copy();
	// (1) PID.3.1 -> f�hrende Null wegnehmen.
	tmp['PID']['PID.3']['PID.3.1']  = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// --------------------------------------- PV1 --------------------------------- //
	tmp['PV1'] = msg['PV1'].copy();
	// (1) PV1.19 -> f�hrende Null wegnehmen.
	tmp['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());
	tmp['PV1']['PV1.3'] = '';

// --------------------------------------- ORC --------------------------------- //
    createSegmentAfter('ORC', msg['PV1'])
	tmp['ORC']['ORC.3']['ORC.3.1'] = strPrefix + msg['OBR']['OBR.3']['OBR.3.1'].toString() + strSuffix;

// --------------------------------------- OBR --------------------------------- //
    // OBR erstellen:
	tmp['OBR'] = msg['OBR'].copy();
	tmp['OBR']['OBR.4'] = strVerweis + msg['OBR']['OBR.20']['OBR.20.1'].toString();

// --------------------------------------- OBX --------------------------------- //
var tmpOBXCounter = 0;

for(var i=0;i<msg['OBX'].length();i++ ){

	if (i <= numSkip_obx_start || i >= numSkip_obx_end) { 

		createSegment('OBX', tmp, tmpOBXCounter)
		tmp['OBX'][tmpOBXCounter] = msg['OBX'][i];
		tmpOBXCounter++;
	}

};

// Jesaja Umkopiermassnahme der SUID:
// in einem Befund k�nnen mehrere SUIDs vorkommen. Diese m�ssen laut CompuMedic 
// im ORB.2 Feld als Liste, mit ~ getrennt geschrieben werden.
// Bsp: |SUID1~SUID2~SUID3|

var strSUIDListe = '';
var SUIDFlag = 0;
var strOBX21 = '';

for each (seg in msg..OBX) {

	// if exists 
	strOBX21 = seg['OBX.2']['OBX.2.1'].toString();

	if (strOBX21 == 'SUID') { 

		if(SUIDFlag == 0) {
							strSUIDListe += seg['OBX.5']['OBX.5.1'].toString();
						   	SUIDFlag = 1;

		} else if (SUIDFlag == 1) {

							strSUIDListe += '~' + seg['OBX.5']['OBX.5.1'].toString();
		}

	}

}

tmp['OBR']['OBR.2']['OBR.2.1'] = strSUIDListe;// JaifKorrektur_ab09122021
// Das Feld FT1-21 muss immer leer sein, damit die DFT Verarbeitung in ORBIS funktioniert. Dies ist notwendig seit dem Update vom 09.12.2021

for each (seg in msg.children()) {
	
	if (seg.name().toString() == "FT1") {
		// �berschreibe den Eintrag (meist "0") im Feld FT1-21
		seg['FT1.21']['FT1.21.1'] = '';
	}
}//MSH

msg['MSH']['MSH.5']['MSH.5.1'] = 'JUH';


// PID G f�r Godesh�he entfernen
//msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].replace('G','');

msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().substring(1);



// PV1
// Fallnummer G f�r Godesh�he entfernen
//msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].replace('G','');

msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().substring(1);


// ORC

//tmp['ORC']['ORC.2']['ORC.2.1'] = 'G' + msg['ORC']['ORC.2']['ORC.2.1'].toString();
//tmp['ORC']['ORC.4']['ORC.4.1'] = 'G' + msg['ORC']['ORC.2']['ORC.2.1'].toString();

// OBR

//msg['OBR']['OBR.2']['OBR.2.1'] = msg['OBR']['OBR.2']['OBR.2.1'].toString() + '_1';// F�llen des MSH.6.1
msg['MSH']['MSH.6']['MSH.6.1'] = "MVZ";


// PID
msg['PID']['PID.3']['PID.3.1']   = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// PV1
msg['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());


// Aus der HL7 DFT-Nachricht werden die FT-Segmente ohne Abrechnungsziffern 
//(Sachkosten, Kontrastmittel, etc.) entfernt

//Wenn das Feld FT1.7.1 des FT1 Segments nicht gef�llt ist, dann l�sche das FT1 Segment
for each (seg in msg.children()) 
	{
		if (seg.name().toString() =="FT1" && seg['FT1.7']['FT1.7.1'].toString()=="") 
		{
			delete msg.children()[seg.childIndex()];
		}
	}// f�hrende Null bei PID und Fallnummer wegnehmen:


//msg['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());
msg['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

channelMap.put('vPID',msg['PID']['PID.3']['PID.3.1']);

// Postfix bei LSTM Auftragsnummer abschneiden- > SSST-2020-000008_1 : SSST-2020-000008     laut Hr. Blau Dedalus 10.3.2022 wird der '_1' ben�tigt

//msg['ORC']['ORC.2']['ORC.2.1'] = msg['ORC']['ORC.2']['ORC.2.1'].toString().replace('_1','');
//msg['OBR']['OBR.2']['OBR.2.1'] = msg['OBR']['OBR.2']['OBR.2.1'].toString().replace('_1','');

//msg['OBR']['OBR.27']['OBR.27.8'] = 'RAD Ultraschall';

//Medos Kalender ersetzten mit Orbis Kalender 
//Pr�fung, ob OBR Segment vorhanden
if (msg['OBR'].toString().length > 0){
	
var MedosKal = msg['OBR']['OBR.27']['OBR.27.8'].toString();
var OrbisKal;
var OrbisAnf;

if (MedosKal == "OCT1"||MedosKal == "OCT2"||MedosKal == "OCT3"||MedosKal == "GCT1"||MedosKal == "OGAM"||MedosKal == "OPET") {
	  OrbisKal = 'RAD CT Operative F�cher Geb.23';
	  OrbisAnf = 'SIMPLECT';
} else if (MedosKal == "ICT2"){
	  OrbisKal = 'RAD CT Innere Medizin Geb.26';
	  OrbisAnf = 'SIMPLECT';
} else if (MedosKal == "ZCT1"){
	  OrbisKal = 'RAD CT Zentraleinheit Geb.55';
	  OrbisAnf = 'SIMPLECT';
} else if (MedosKal == "NCT1"){
	  OrbisKal = 'Neuro CT Geb.81';
	  OrbisAnf = 'SIMPLECT';
} else if (MedosKal == "OUS1"||MedosKal == "GUS1"||MedosKal == "IUS1"||MedosKal == "KUS1"||MedosKal == "MUS1"||MedosKal == "ZUS1"||MedosKal == "ZUS2") {
	  OrbisKal = 'RAD Ultraschall';
	  OrbisAnf = 'SIMPLEUS';
} else if (MedosKal == "NUS1"){
	  OrbisKal = 'Neuro Ultraschall Geb.81';
	  OrbisAnf = 'SIMPLEUS';
} else if (MedosKal == "MRT1"||MedosKal == "MRT2"||MedosKal == "MRT3") {
	  OrbisKal = 'RAD MRT Haupthaus Geb.46';
	  OrbisAnf = 'SIMPLEMR';
} else if (MedosKal == "MRT4") {
	  OrbisKal = 'RAD MRT 4 / Elki Geb.30';
	  OrbisAnf = 'SIMPLEMR';
} else if (MedosKal == "NMRT"||MedosKal == "NMR2"||MedosKal == "NMRO") {
	  OrbisKal = 'Neuro MRT Geb.81'; //RAD MRT Neuro MR
	  OrbisAnf = 'SIMPLEMR';
} else if (MedosKal == "GINT"||MedosKal == "GRO1"||MedosKal == "IINT"||MedosKal == "KINT"||MedosKal == "KRO1"||MedosKal == "KRO2"||
           MedosKal == "OAWR"||MedosKal == "OIN2"||MedosKal == "OINT"||MedosKal == "ORO2"||MedosKal == "ORO1"||
           MedosKal == "ORO3"||MedosKal == "OUNF"||MedosKal == "ZKON"||MedosKal == "ZMX1"||MedosKal == "ZMX2") {
       OrbisKal = 'RAD R�ntgen';
       OrbisAnf = 'SIMPLEROE';
} else if (MedosKal == "NINT"||MedosKal == "NRO1"||MedosKal == "NUNF"){
	  OrbisKal = 'Neuro R�ntgen Geb.81';
	  OrbisAnf = 'SIMPLEROE';
} else if (MedosKal == "IHIFU") {
       OrbisKal = 'RAD HIFU';
       OrbisAnf = 'SIMPLEHIFU';
} else if (MedosKal == "IDSA"||MedosKal == "ODSA") {
       OrbisKal = 'RAD DSA';
       OrbisAnf = 'SIMPLEDSA';
} else if (MedosKal == "NDSA"||MedosKal == "NMFA1") {
       OrbisKal = 'Neuro DSA/MFA Geb.81';
       OrbisAnf = 'SIMPLEDSA';
} else if (MedosKal == "IDL1"||MedosKal == "KDL1"||MedosKal == "ODL1") {
       OrbisKal = 'RAD Durchleuchtung';
       OrbisAnf = 'SIMPLEDL';
} else if (MedosKal == "NDL1") {
       OrbisKal = 'Neuro Durchleuchtung Geb.81';
       OrbisAnf = 'SIMPLEDL';
} else if (MedosKal == "OXSO"||MedosKal == "NXSO"||MedosKal == "IXSO"||MedosKal == "KXSO"||MedosKal == "MXSO"||MedosKal == "ZXSO"||MedosKal == "IXSO") {
       OrbisKal = 'RAD Sonstige';
       OrbisAnf = 'SIMPLESO';
} else if (MedosKal == "SBRA"||MedosKal == "SMD1"||MedosKal == "SARZT"||MedosKal == "SSIM"||MedosKal == "STOM"||MedosKal == "SVAR") {
       OrbisKal = 'RAD Strahlentherapie';
       OrbisAnf = 'SIMPLEST';
} else {
  	OrbisKal = 'RAD Sonstige';
  }

msg['OBR']['OBR.27']['OBR.27.8'] = OrbisKal;
msg['OBR']['OBR.24']['OBR.24.1'] = OrbisAnf;
/*
msg['OBR']['OBR.16']['OBR.16.1'] = 'K�PPENPHP';
msg['OBR']['OBR.16']['OBR.16.2'] = 'K�ppen';
msg['OBR']['OBR.16']['OBR.16.3'] = 'Philipp';*/
}
// Wenn ORC.4 Segment leer ist OCR.2 hineinkopieren

if (msg['ORC']['ORC.4']['ORC.4.1'].toString().length < 1) {
	msg['ORC']['ORC.4']['ORC.4.1'] = msg['ORC']['ORC.2']['ORC.2.1'].toString();
	msg['ORC']['ORC.4']['ORC.4.2'] = msg['ORC']['ORC.2']['ORC.2.2'].toString();
}


// wenn OBR36.1 < 12 -> Tagestermin und es soll im OBR4 der Text Termineingang hinzugef�gt werden
var Termin = msg['OBR']['OBR.36']['OBR.36.1'].toString().length;

if (Termin < 12) {
	var Kommentar = msg['OBR']['OBR.4']['OBR.4.2'].toString();
	var KommentarNeu = Kommentar + ' Termineingang';
	msg['OBR']['OBR.4']['OBR.4.2'] = KommentarNeu;
}

/* 28.01.2021 R�cksprache Frau Birgel. Es sollen die Ger�tezeiten �bermittelt werden!
// CT und MRT Termine vorverlegen
// CT-Abdomen,CT-Tho/Abd. 1 Std. fr�her
// MR alle 30 Min. vorher, MR-Sellink 1 Std. vorher, MR-in Narkose 45 Min. vorher

if (msg['ORC']['ORC.1']['ORC.1.1'].toString() != 'CA'){
	if (msg['ORC']['ORC.1']['ORC.1.1'].toString() != 'OC'){

var Medos_U = msg['OBR']['OBR.4']['OBR.4.2'].toString().substring(0,2);
var MedosAnf = msg['OBR']['OBR.4']['OBR.4.2'].toString().substring(0,10);
var MedosAnf2 = msg['OBR']['OBR.4']['OBR.4.2'].toString().substring(0,7);
var OrbisDate  = DateUtil.getCurrentDate("yyyyMMddHHmm");;
var MedosDate = DateUtil.getDate("yyyyMMddHHmm", msg['OBR']['OBR.27']['OBR.27.4'].toString());

OrbisDate = addHoursToJavaUtilDate(MedosDate, 1);

//logger.info("MedosAnf2 = "+MedosAnf2);

if (Medos_U == 'CT') {
	if (MedosAnf == 'CT-Abdomen' ||  MedosAnf == 'CT-Tho/Abd' ||  MedosAnf2 == 'CT-Hals'){
		OrbisDate = addHoursToJavaUtilDate(MedosDate, 1);
	}else {
	OrbisDate = MedosDate;
	}
}else if (Medos_U == 'MR') {
	if (MedosAnf == 'MR-Sellink'){
		OrbisDate = addHoursToJavaUtilDate(MedosDate, -1);
	}else if (MedosAnf == 'MR-in Nark'){
		OrbisDate = addMinutesToJavaUtilDate(MedosDate, -45);
	}else{
		OrbisDate = addMinutesToJavaUtilDate(MedosDate, -30);
	}
}else {
	OrbisDate = MedosDate;
}

//logger.info("test:"+OrbisDate+"->"+DateUtil.formatDate("yyyyMMddHHmm", OrbisDate));

msg['OBR']['OBR.27']['OBR.27.4'] = DateUtil.formatDate("yyyyMMddHHmm", OrbisDate);
msg['OBR']['OBR.36']['OBR.36.1'] = DateUtil.formatDate("yyyyMMddHHmm", OrbisDate);
 }
}
*///MSH

msg['MSH']['MSH.5']['MSH.5.1'] = 'TELE ASBACH';


// PID G f�r Godesh�he entfernen
//msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].replace('G','');

//msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().substring(1);



// PV1
// Fallnummer G f�r Godesh�he entfernen
//msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].replace('G','');

//msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().substring(1);


// ORC

//tmp['ORC']['ORC.2']['ORC.2.1'] = 'G' + msg['ORC']['ORC.2']['ORC.2.1'].toString();
//tmp['ORC']['ORC.4']['ORC.4.1'] = 'G' + msg['ORC']['ORC.2']['ORC.2.1'].toString();

// OBR

//msg['OBR']['OBR.2']['OBR.2.1'] = msg['OBR']['OBR.2']['OBR.2.1'].toString() + '_1';


channelMap.put('vPatientenName',msg['PID']['PID.5']['PID.5.1'].toString());

channelMap.put('vPatientenVorname',msg['PID']['PID.5']['PID.5.2'].toString());

channelMap.put('vPatGebDatum',msg['PID']['PID.7']['PID.7.1'].toString());

//channelMap.put('vVNR',msg['OBR']['OBR.3']['OBR.3.1'].toString().substring(4));

//var vBefIDLength = msg['OBR']['OBR.3']['OBR.3.1'].toString().length();
//  vBefIDLength = vBefIDLength-10;
   

channelMap.put('vBefID',msg['OBR']['OBR.3']['OBR.3.1'].toString().slice(-10));


var strBefundtext = '';

for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		var sample_value = seg['SEG.1']['SEG.1.1'].toString();
		if (seg['OBX.2']['OBX.2.1'].toString() == 'TX') {
			strBefundtext = strBefundtext+seg['OBX.5']['OBX.5.1'].toString()+'\n';
			
		}
	}
}

channelMap.put('vBefundtext', strBefundtext);//MSH

msg['MSH']['MSH.5']['MSH.5.1'] = 'TELE ASBACH';


// PID G f�r Godesh�he entfernen
//msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].replace('G','');

//msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().substring(1);



// PV1
// Fallnummer G f�r Godesh�he entfernen
//msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].replace('G','');

//msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().substring(1);


// ORC

//tmp['ORC']['ORC.2']['ORC.2.1'] = 'G' + msg['ORC']['ORC.2']['ORC.2.1'].toString();
//tmp['ORC']['ORC.4']['ORC.4.1'] = 'G' + msg['ORC']['ORC.2']['ORC.2.1'].toString();

// OBR

//msg['OBR']['OBR.2']['OBR.2.1'] = msg['OBR']['OBR.2']['OBR.2.1'].toString() + '_1';


channelMap.put('vPatientenName',msg['PID']['PID.5']['PID.5.1'].toString());

channelMap.put('vPatientenVorname',msg['PID']['PID.5']['PID.5.2'].toString());

channelMap.put('vPatGebDatum',msg['PID']['PID.7']['PID.7.1'].toString());

//channelMap.put('vVNR',msg['OBR']['OBR.3']['OBR.3.1'].toString().substring(4));

//var vBefIDLength = msg['OBR']['OBR.3']['OBR.3.1'].toString().length();
//  vBefIDLength = vBefIDLength-10;
   

channelMap.put('vBefID',msg['OBR']['OBR.3']['OBR.3.1'].toString().slice(-10));



/*
var strBefundtext = '';

for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		var sample_value = seg['SEG.1']['SEG.1.1'].toString();
		if (seg['OBX.2']['OBX.2.1'].toString() == 'TX') {
			strBefundtext = strBefundtext+seg['OBX.5']['OBX.5.1'].toString()+'\n';
			
		}
	}
}

channelMap.put('vBefundtext', strBefundtext);*/// Transformation des MEDOS-BAR P12 Format in BAR^P01|P02|P03 (2.3) von AGFA
//
// $Id$

/* 
  Es ist immer nur ein DG1 oder PR1 Segment alternativ zulaessig
  Anhand der Aktionscodes
  A = add
  D = delete
  U = update
  in den Segmenten DG1 und PR1 wird festgelegt, welche Art von HL7-Nachricht
  erzeugt wird. Dies geht aber nur einheitlich fuer die gesamte HL7-Nachricht.
*/       

/*
Wenn Auftragsnummer mit "RAD" beginnt, dann pr�fe...
	RAD.N2797/17 = wegen N -> Neuroradiologie, OE 46
	RAD.S2797/17 = wegen S -> Stahlentherapie, OE 47
	sonst -> 15

Wenn Auftragsnummer mit "NUK" beginnt dann immer OE, 20
*/

var actionCode = {
	"A":"P01",
	"D":"P02",
	"U":"P05"
}

var oe = {
   "RAD":"15",
   "STR":"47",
   "NRD":"46",
   "NUK":"20"
}

var patientClass = new RegExp("I|O|TS");

// HL7-Nachricht ohne Kopie des Originals anlegen
var tmp = <HL7Message/>;


// Action ermitteln
if (msg['PR1'].length() == 1)
	action = msg['PR1']['PR1.20']['PR1.20.1'].toString()
else if (msg['DG1'].length() == 1)
	action = msg['DG1']['DG1.21']['DG1.21.1'].toString()
else {
	logger.error('Eine P12-Nachricht mit mehreren DG1 oder PR1-Segmenten kann nicht verarbeitet werden!');
	return
}

// MSH
tmp['MSH'] = msg['MSH'].copy();
tmp['MSH']['MSH.5']['MSH.5.1'] = 'ORBIS';
tmp['MSH']['MSH.6']['MSH.6.1'] = 'JAIF';
tmp['MSH']['MSH.9']['MSH.9.2'] = action.listlookup(actionCode); 
tmp['MSH']['MSH.12']['MSH.12.1'] = '2.3';

// OE ermitteln

if (msg['PR1']['PR1.39']['PR1.39.1'].toString().substring(5,4) == 'S' ){
     tmp['MSH']['MSH.4']['MSH.4.1'] = 'STR';}
   else if (msg['PR1']['PR1.39']['PR1.39.1'].toString().substring(5,4) == 'N' ){
      tmp['MSH']['MSH.4']['MSH.4.1'] = 'NRD';}
   else {
      tmp['MSH']['MSH.4']['MSH.4.1'] = msg['MSH']['MSH.4']['MSH.4.1'].toString();
}

// EVN
tmp['EVN'] = msg['EVN'].copy();
tmp['EVN']['EVN.1']['EVN.1.1'] = action.listlookup(actionCode);


// PID
tmp['PID'] = msg['PID'].copy();
tmp['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// PV1
tmp['PV1'] = msg['PV1'].copy();
tmp['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());
if (!patientClass.test(msg['PV1']['PV1.2']['PV1.2.1'].toString()))
	tmp['PV1']['PV1.2']['PV1.2.1'] = 'O';
tmp['PV1']['PV1.3']='';	

if (msg['DG1'].length() == 1) {
	// DG1
	createSegment('DG1', tmp);
	tmp['DG1']['DG1.1']['DG1.1.1'] = tmp['MSH']['MSH.4']['MSH.4.1'].toString().listlookup(oe)
		+ '-' + msg['DG1']['DG1.20']['DG1.20.1'].toString();
/*	tmp['DG1']['DG1.1']['DG1.1.1'] = msg['MSH']['MSH.4']['MSH.4.1'].toString().listlookup(oe)
		+ '-' + msg['DG1']['DG1.20']['DG1.20.1'].toString();*/
	// Name of coding system	
	// tmp['DG1']['DG1.2']['DG1.2.1'] = msg['DG1']['DG1.2']['DG1.2.1'].toString();
	tmp['DG1']['DG1.3']['DG1.3.1'] = msg['DG1']['DG1.3']['DG1.3.1'].toString();
	tmp['DG1']['DG1.3']['DG1.3.2'] = msg['DG1']['DG1.3']['DG1.3.2'].toString();
	// Name of coding system	
	// tmp['DG1']['DG1.3']['DG1.3.3'] = msg['DG1']['DG1.3']['DG1.3.3'].toString();
	tmp['DG1']['DG1.5']['DG1.5.1'] = msg['DG1']['DG1.5']['DG1.5.1'].toString();
	tmp['DG1']['DG1.6']['DG1.6.1'] = 'BD';
//	tmp['DG1']['DG1.11']['DG1.11.1'] = msg['MSH']['MSH.4']['MSH.4.1'].toString().listlookup(oe);
	tmp['DG1']['DG1.11']['DG1.11.1'] = tmp['MSH']['MSH.4']['MSH.4.1'].toString().listlookup(oe);
	tmp['DG1']['DG1.15']['DG1.15.1'] = msg['DG1']['DG1.15']['DG1.15.1'].toString();
} 
if (msg['PR1'].length() == 1) {
	createSegment('PR1', tmp);
/*	tmp['PR1']['PR1.1']['PR1.1.1'] = 
		msg['MSH']['MSH.4']['MSH.4.1'].toString().listlookup(oe)
		+ '-' + msg['PR1']['PR1.19']['PR1.19.1'].toString(); */
	tmp['PR1']['PR1.1']['PR1.1.1'] = 
		tmp['MSH']['MSH.4']['MSH.4.1'].toString().listlookup(oe)
		+ '-' + msg['PR1']['PR1.19']['PR1.19.1'].toString();
	// Procedure coding method	
	// tmp['PR1']['PR1.2']['PR1.2.1'] = msg['PR1']['PR1.2']['PR1.2.1'].toString();
	tmp['PR1']['PR1.3']['PR1.3.1'] = msg['PR1']['PR1.3']['PR1.3.1'].toString();
	// Procedure coding method
	// tmp['PR1']['PR1.3']['PR1.3.3'] = msg['PR1']['PR1.3']['PR1.3.3'].toString();
	tmp['PR1']['PR1.5']['PR1.5.1'] = msg['PR1']['PR1.5']['PR1.5.1'].toString();
//	tmp['PR1']['PR1.8']['PR1.8.1'] = msg['MSH']['MSH.4']['MSH.4.1'].toString().listlookup(oe);
	tmp['PR1']['PR1.8']['PR1.8.1'] = tmp['MSH']['MSH.4']['MSH.4.1'].toString().listlookup(oe);
	tmp['PR1']['PR1.14']['PR1.14.1'] = msg['PR1']['PR1.14']['PR1.14.1'].toString();
}
	

msg = tmp.copy();//MSH

msg['MSH']['MSH.5']['MSH.5.1'] = 'Godesh�he';


// PID G f�r Godesh�he entfernen
//msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].replace('G','');

//msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().substring(1);



// PV1
// Fallnummer G f�r Godesh�he entfernen
//msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].replace('G','');

//msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().substring(1);


// ORC

//tmp['ORC']['ORC.2']['ORC.2.1'] = 'G' + msg['ORC']['ORC.2']['ORC.2.1'].toString();
//tmp['ORC']['ORC.4']['ORC.4.1'] = 'G' + msg['ORC']['ORC.2']['ORC.2.1'].toString();

// OBR

//msg['OBR']['OBR.2']['OBR.2.1'] = msg['OBR']['OBR.2']['OBR.2.1'].toString() + '_1';


channelMap.put('vPatientenName',msg['PID']['PID.5']['PID.5.1'].toString());

channelMap.put('vPatientenVorname',msg['PID']['PID.5']['PID.5.2'].toString());

channelMap.put('vPatGebDatum',msg['PID']['PID.7']['PID.7.1'].toString());

//channelMap.put('vVNR',msg['OBR']['OBR.3']['OBR.3.1'].toString().substring(4));

//var vBefIDLength = msg['OBR']['OBR.3']['OBR.3.1'].toString().length();
//  vBefIDLength = vBefIDLength-10;
   

channelMap.put('vBefID',msg['OBR']['OBR.3']['OBR.3.1'].toString().slice(-10));


var strBefundtext = '';

for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		var sample_value = seg['SEG.1']['SEG.1.1'].toString();
		if (seg['OBX.2']['OBX.2.1'].toString() == 'TX') {
			strBefundtext = strBefundtext+seg['OBX.5']['OBX.5.1'].toString()+'\n';
			
		}
	}
}

channelMap.put('vBefundtext', strBefundtext);//MSH

msg['MSH']['MSH.5']['MSH.5.1'] = 'DZNE';

//var VNR = msg['OBR']['OBR.3']['OBR.3.1'].toString().substring(5,4);
 
//logger.info("VNR = "+VNR);

// PID G f�r Godesh�he entfernen
//msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].replace('G','');

//msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().substring(1);



// PV1
// Fallnummer G f�r Godesh�he entfernen
//msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].replace('G','');

//msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().substring(1);


// ORC

//tmp['ORC']['ORC.2']['ORC.2.1'] = 'G' + msg['ORC']['ORC.2']['ORC.2.1'].toString();
//tmp['ORC']['ORC.4']['ORC.4.1'] = 'G' + msg['ORC']['ORC.2']['ORC.2.1'].toString();

// OBR

//msg['OBR']['OBR.2']['OBR.2.1'] = msg['OBR']['OBR.2']['OBR.2.1'].toString() + '_1';


channelMap.put('vPatientenName',msg['PID']['PID.5']['PID.5.1'].toString());

channelMap.put('vPatientenVorname',msg['PID']['PID.5']['PID.5.2'].toString());

channelMap.put('vPatGebDatum',msg['PID']['PID.7']['PID.7.1'].toString());

//channelMap.put('vVNR',msg['OBR']['OBR.3']['OBR.3.1'].toString().substring(4));

//var vBefIDLength = msg['OBR']['OBR.3']['OBR.3.1'].toString().length();
//  vBefIDLength = vBefIDLength-10;
   

channelMap.put('vBefID',msg['OBR']['OBR.3']['OBR.3.1'].toString().slice(-10));


var strBefundtext = '';

for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		var sample_value = seg['SEG.1']['SEG.1.1'].toString();
		if (seg['OBX.2']['OBX.2.1'].toString() == 'TX') {
			strBefundtext = strBefundtext+seg['OBX.5']['OBX.5.1'].toString()+'\n';
			
		}
	}
}

channelMap.put('vBefundtext', strBefundtext);// f�hrende Null bei PID und Fallnummer wegnehmen:


//msg['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());
msg['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

channelMap.put('vPID',msg['PID']['PID.3']['PID.3.1']);

// Postfix bei LSTM Auftragsnummer abschneiden- > SSST-2020-000008_1 : SSST-2020-000008

msg['ORC']['ORC.2']['ORC.2.1'] = msg['ORC']['ORC.2']['ORC.2.1'].toString().replace('_1','');
msg['OBR']['OBR.2']['OBR.2.1'] = msg['OBR']['OBR.2']['OBR.2.1'].toString().replace('_1','');

//msg['OBR']['OBR.27']['OBR.27.8'] = 'RAD Ultraschall';

//Medos Kalender ersetzten mit Orbis Kalender 
//Pr�fung, ob OBR Segment vorhanden
if (msg['OBR'].toString().length > 0){
	
var MedosKal = msg['OBR']['OBR.27']['OBR.27.8'].toString();
var OrbisKal;
var OrbisAnf;

if (MedosKal == "OCT1"||MedosKal == "NCT1"||MedosKal == "OCT2"||MedosKal == "GCT1"||MedosKal == "OGAM"||MedosKal == "OPET") {
	OrbisKal = 'RAD CT Operative F�cher Geb.23';
	OrbisAnf = 'SIMPLECT';
} else if (MedosKal == "ICT2"){
	OrbisKal = 'RAD CT Innere Medizin Geb.26';
	OrbisAnf = 'SIMPLECT';
} else if (MedosKal == "ZCT1"){
	OrbisKal = 'RAD CT Zentraleinheit Geb.55';
	OrbisAnf = 'SIMPLECT';
} else if (MedosKal == "OUS1"||MedosKal == "GUS1"||MedosKal == "IUS1"||MedosKal == "KUS1"||MedosKal == "MUS1"||MedosKal == "ZUS1"||MedosKal == "ZUS2"||MedosKal == "NUS1") {
	OrbisKal = 'RAD Ultraschall';
	OrbisAnf = 'SIMPLEUS';
} else if (MedosKal == "MRT1"||MedosKal == "MRT2"||MedosKal == "MRT3") {
	  OrbisKal = 'RAD MRT Haupthaus Geb.46';
	  OrbisAnf = 'SIMPLEMR';
} else if (MedosKal == "MRT4") {
	  OrbisKal = 'RAD MRT 4 / Elki Geb.30';
	  OrbisAnf = 'SIMPLEMR';
} else if (MedosKal == "NMRT"||MedosKal == "NMR2"||MedosKal == "NMRO") {
	  OrbisKal = 'RAD MRT Neuro MR';
	  OrbisAnf = 'SIMPLEMR';
} else if (MedosKal == "GINT"||MedosKal == "GRO1"||MedosKal == "IINT"||MedosKal == "KINT"||MedosKal == "KRO1"||MedosKal == "KRO2"||MedosKal == "NINT"||
           MedosKal == "NRO1"||MedosKal == "NUNF"||MedosKal == "OAWR"||MedosKal == "OIN2"||MedosKal == "OINT"||MedosKal == "ORO2"||MedosKal == "ORO1"||
           MedosKal == "ORO3"||MedosKal == "OUNF"||MedosKal == "ZKON"||MedosKal == "ZMX1"||MedosKal == "ZMX2") {
       OrbisKal = 'RAD R�ntgen';
       OrbisAnf = 'SIMPLEROE';
} else if (MedosKal == "IHIFU") {
       OrbisKal = 'RAD HIFU';
       OrbisAnf = 'SIMPLEHIFU';
} else if (MedosKal == "IDSA"||MedosKal == "ODSA"||MedosKal == "NDSA"||MedosKal == "NMFA1") {
       OrbisKal = 'RAD DSA';
       OrbisAnf = 'SIMPLEDSA';
} else if (MedosKal == "IDL1"||MedosKal == "KDL1"||MedosKal == "NDL1"||MedosKal == "ODL1") {
       OrbisKal = 'RAD Durchleuchtung';
       OrbisAnf = 'SIMPLEDL';
} else if (MedosKal == "OXSO"||MedosKal == "NXSO"||MedosKal == "IXSO"||MedosKal == "KXSO"||MedosKal == "MXSO"||MedosKal == "ZXSO"||MedosKal == "IXSO") {
       OrbisKal = 'RAD Sonstige';
       OrbisAnf = 'SIMPLESO';
} else if (MedosKal == "SBRA"||MedosKal == "SMD1"||MedosKal == "SARZT"||MedosKal == "SSIM"||MedosKal == "STOM"||MedosKal == "SVAR") {
       OrbisKal = 'RAD Strahlentherapie';
       OrbisAnf = 'SIMPLEST';
} else {
  	OrbisKal = 'RAD Sonstige';
  }

msg['OBR']['OBR.27']['OBR.27.8'] = OrbisKal;
msg['OBR']['OBR.24']['OBR.24.1'] = OrbisAnf;
/*
msg['OBR']['OBR.16']['OBR.16.1'] = 'K�PPENPHP';
msg['OBR']['OBR.16']['OBR.16.2'] = 'K�ppen';
msg['OBR']['OBR.16']['OBR.16.3'] = 'Philipp';*/
}
// Wenn ORC.4 Segment leer ist OCR.2 hineinkopieren

if (msg['ORC']['ORC.4']['ORC.4.1'].toString().length < 1) {
	msg['ORC']['ORC.4']['ORC.4.1'] = msg['ORC']['ORC.2']['ORC.2.1'].toString();
	msg['ORC']['ORC.4']['ORC.4.2'] = msg['ORC']['ORC.2']['ORC.2.2'].toString();
}


// wenn OBR36.1 < 12 -> Tagestermin und es soll im OBR4 der Text Termineingang hinzugef�gt werden
var Termin = msg['OBR']['OBR.36']['OBR.36.1'].toString().length;

if (Termin < 12) {
	var Kommentar = msg['OBR']['OBR.4']['OBR.4.2'].toString();
	var KommentarNeu = Kommentar + ' Termineingang';
	msg['OBR']['OBR.4']['OBR.4.2'] = KommentarNeu;
}

/* 28.01.2021 R�cksprache Frau Birgel. Es sollen die Ger�tezeiten �bermittelt werden!
// CT und MRT Termine vorverlegen
// CT-Abdomen,CT-Tho/Abd. 1 Std. fr�her
// MR alle 30 Min. vorher, MR-Sellink 1 Std. vorher, MR-in Narkose 45 Min. vorher

if (msg['ORC']['ORC.1']['ORC.1.1'].toString() != 'CA'){
	if (msg['ORC']['ORC.1']['ORC.1.1'].toString() != 'OC'){

var Medos_U = msg['OBR']['OBR.4']['OBR.4.2'].toString().substring(0,2);
var MedosAnf = msg['OBR']['OBR.4']['OBR.4.2'].toString().substring(0,10);
var MedosAnf2 = msg['OBR']['OBR.4']['OBR.4.2'].toString().substring(0,7);
var OrbisDate  = DateUtil.getCurrentDate("yyyyMMddHHmm");;
var MedosDate = DateUtil.getDate("yyyyMMddHHmm", msg['OBR']['OBR.27']['OBR.27.4'].toString());

OrbisDate = addHoursToJavaUtilDate(MedosDate, 1);

//logger.info("MedosAnf2 = "+MedosAnf2);

if (Medos_U == 'CT') {
	if (MedosAnf == 'CT-Abdomen' ||  MedosAnf == 'CT-Tho/Abd' ||  MedosAnf2 == 'CT-Hals'){
		OrbisDate = addHoursToJavaUtilDate(MedosDate, 1);
	}else {
	OrbisDate = MedosDate;
	}
}else if (Medos_U == 'MR') {
	if (MedosAnf == 'MR-Sellink'){
		OrbisDate = addHoursToJavaUtilDate(MedosDate, -1);
	}else if (MedosAnf == 'MR-in Nark'){
		OrbisDate = addMinutesToJavaUtilDate(MedosDate, -45);
	}else{
		OrbisDate = addMinutesToJavaUtilDate(MedosDate, -30);
	}
}else {
	OrbisDate = MedosDate;
}

//logger.info("test:"+OrbisDate+"->"+DateUtil.formatDate("yyyyMMddHHmm", OrbisDate));

msg['OBR']['OBR.27']['OBR.27.4'] = DateUtil.formatDate("yyyyMMddHHmm", OrbisDate);
msg['OBR']['OBR.36']['OBR.36.1'] = DateUtil.formatDate("yyyyMMddHHmm", OrbisDate);
 }
}
*/// Einlesen des QRD.8.1 Feldinhalts = FALLNR des ORBIS Patienten.
// Einlesen des QRD.1.1 Feldinhalts = Referenzdatum.
// Ggf. abpr�fen mit anderen Felder.
//Setup myVariables, mit allen Feldern, die extrahiert werden
var myVariables = {	"strFALLNR": null,"strNAME": null,"strVORNAME": null,"strGEBDAT": null,"strGESCHLECHT": null,"strPID": null,"strSYSDATE": null,"strSTORNODAT": null,"strSTORNO": null,"strAUFNDAT": null,"strSTRASSE": null,"strHAUS_NR": null,"strORT": null,"strPLZ": null,"strLKZ": null,"strVORWAHL": null,"strDURCHWAHL": null,"strGEBURTSNAME": null,"strFACH_OEKURZ": null,"strFACH_OENAME": null,"strSTAM_OEKURZ": null,"strSTAM_OENAME": null,"strHLST_KURZ": null,"strHLST_NAME": null,"strfCA": null};
//Setup logger Prefix: MessageID: SendingApplication.Identifier MessageType | 
var strLoggerPrefix = connectorMessage.getMessageId() + ": " + msg['MSH']['MSH.3']['MSH.3.1'].toString() + "." + msg['MSH']['MSH.4']['MSH.4.1'].toString() + " " + msg['MSH']['MSH.9']['MSH.9.1'].toString() + "| ";
// Abfrage-Parameter aus der HL7 QRY Nachricht von Herrn Molitor.
// Parsen der HL7-Nachricht mit Fehler-R�ckmeldung in CSV und Logger
var strQRYFALLNR = msg['QRD']['QRD.8']['QRD.8.1'].toString();	// FALLNR.
if (msg['QRF']['QRF.1']['QRF.1.1'].toString().equals('')) { //Wenn QRF.1.1 Original Style Query Filter - Subject Filter leer
	logger.error(strLoggerPrefix+ "HL7 QRF.1.1 ist leer.");
	tmp['row']['ORBIS_Fallnummer'] = strQRYFALLNR;
	tmp['row']['STATUS'] = "HL7_ERROR:QRF.1.1_EMPTY";
	return false;
	} else {
		if (!msg['QRF']['QRF.1']['QRF.1.1'].toString().equals('WL')) { //Wenn QRF.1.1 Original Style Query Filter - Subject Filter nicht gleich WL (Wahlleistung)
		logger.error(strLoggerPrefix+ "HL7 QRF.1.1 ist falsch ("+msg['QRF']['QRF.1']['QRF.1.1'].toString()+").");
		tmp['row']['ORBIS_Fallnummer'] = strQRYFALLNR;
		tmp['row']['STATUS'] = "HL7_ERROR:QRF.1.1_NOT_WL";
		return false;
		} else {
		if (msg['QRF']['QRF.3']['QRF.3.1'].toString().equals('')) { // Wenn QRF.3.1 Original Style Query Filter - Data End Date/Time leer
			logger.error(strLoggerPrefix + "HL7 QRF.3.1 ist leer");
			tmp['row']['ORBIS_Fallnummer'] = strQRYFALLNR;
			tmp['row']['STATUS'] = "HL7_ERROR:QRF.3.1_IS_EMPTY";
			return false;
			} else {
				var strREFDATUM  = msg['QRF']['QRF.3']['QRF.3.1'].toString();	// Referenzdatum.
			}
		}
	}
// Einsetzen in Ausgabe
// angefragte Fallnummer
tmp['row']['ORBIS_Fallnummer']=strQRYFALLNR;
// angefragtes Referenzdatum
tmp['row']['MIBI_Refdatum']=strREFDATUM;

//logger.info("FallNR:" + strQRYFALLNR + "; REFDATE:"+strREFDATUM);

// Ausf�hren einer SQL Abfrage aus die IKAS.

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');
//Create a SQL Statement to be executed

// Ausgeschaltet am 28.01.2015, PK
//logger.error("FALLNR : " + strQRYFALLNR);

var sqlStr = "\
SELECT \
F.FALLNR,  \
NAT.NAME,  \
NAT.VORNAME,  \
TO_CHAR(NAT.GEBDAT,'YYYYMMDD') GEBDAT,  \
NAT.GESCHLECHT,  \
PF.FREMD_PERSNR PID,  \
TO_CHAR(SYSDATE, 'YYYYMMDDhh24miss') ABFRAGEZEIT,  \
F.STORNO_DATUM,  \
CASE WHEN F.STORNO_DATUM IS NULL THEN '0' else '1' END AS STORNO,  \
TO_CHAR(F.AUFNDAT, 'YYYYMMDDhh24miss') AUFNDAT,  \
ADR.STRASSE,  \
ADR.HAUS_NR,  \
ADR.ORT,  \
ADR.PLZ,  \
ADR.LKZ,  \
ADR.VORWAHL,  \
ADR.DURCHWAHL,  \
NAT.GEBURTSNAME,  \
OE1.OEBENEKURZ FACH_OEBENEKURZ,  \
OE1.OEBENENAME FACH_OEBENENAME,  \
OE2.OEBENEKURZ STATAMBUOEBENEKURZ, \
OE2.OEBENENAME STATAMBUOEBENENAME ,\
SUB2.HLSTKURZ ,  \
SUB2.HLSTBEZ, \
PCK_STATAMBU.F_ISPRIVATE(F.FALLID,TO_DATE('"+strREFDATUM+"', 'YYYYMMDDHH24miss')) f_CA  \
FROM  \
FALL F,	 \
NATPERSON NAT,  \
ADRESSE ADR,  \
PERSON_FREMD PF,  \
ORGAEBENE OE1,  \
ORGAEBENE OE2,  \
(  \
SELECT  \
CW_PATAUF.CW_AKTFA((SELECT FALLID FROM FALL WHERE FALLNR      = '"+strQRYFALLNR+"'),TO_DATE('"+strREFDATUM+"', 'YYYYMMDDHH24miss')) OUT1,  \
CW_PATAUF.CW_AKTSTATAMB((SELECT FALLID FROM FALL WHERE FALLNR = '"+strQRYFALLNR+"'),TO_DATE('"+strREFDATUM+"', 'YYYYMMDDhh24miss')) OUT2  \
FROM DUAL  \
) SUB1 , \
( SELECT 	 \
			F.FALLNR, H.HLSTKURZ , H.HLSTBEZ \
			FROM  \
			FALL_AUFENTHALT FA,  \
			FALL F,  \
			HLST H  \
			WHERE F.FALLID = FA.FALLID AND  \
			FA.HLSTID = H.HLSTID AND  \
			F.STORNO_DATUM IS  NULL AND  \
			F.KENNZEICHEN NOT IN (2,10)  \
			AND F.ENTLDAT = FA.ENDE  \
			AND F.FALLNR = '"+strQRYFALLNR+"' \
) SUB2 \
WHERE  \
F.PERSNR = NAT.PERSNR  AND  \
NAT.PERSNR = PF.PERSNR AND  \
NAT.PERSNR = ADR.PERSNR(+) AND  \
ADR.ADRESSARTNR = 1 AND  \
SUB1.OUT1 = OE1.OEBENEID(+) AND  \
SUB1.OUT2 = OE2.OEBENEID(+) AND  \
F.FALLNR = '" + strQRYFALLNR + "' AND \
F.FALLNR = SUB2.FALLNR(+)"

// Ausgeschaltet am 20.10.2015, PK
//logger.error("SQL String: " + sqlStr);

// Execute SQL Statement and save them as results
var results = dbConn.executeCachedQuery(sqlStr);
// Aufbereiten des Resultsets. 
// hier nur eine Ergebniszeile durch Abfrage.
//.FIXME: Falls mehr Zeilen zur�ckgegeben werden w�rden: Wie wird damit verfahren?
if(results.size()>0){
	results.next();
var myVariables = {	"strFALLNR": results.getString(1), // FallNummer
				"strNAME": results.getString(2), // Nachname
			    	"strVORNAME": results.getString(3), // Vorname
			    	"strGEBDAT": results.getString(4), // Geburtsdatum
			    	"strGESCHLECHT": results.getString(5), // biol. Geschlecht
			    	"strPID": results.getString(6), // PID
			    	"strSYSDATE": results.getString(7), // Systemzeit
			    	"strSTORNODAT": results.getString(8), // STORNO-Datum
			    	"strSTORNO": results.getString(9), // STORNO 0=nein, 1=ja, null=FEHLER
			    	"strAUFNDAT": results.getString(10), // Aufnahmedatum
			    	"strSTRASSE": results.getString(11), // Stra�e
			    	"strHAUS_NR": results.getString(12), // Hausnummer
			    	"strORT": results.getString(13), // Ort
			    	"strPLZ": results.getString(14), // PLZ
			    	"strLKZ": results.getString(15), // LKZ
			    	"strVORWAHL": results.getString(16), // Vorwahl
			    	"strDURCHWAHL": results.getString(17), // Durchwahl
			    	"strGEBURTSNAME": results.getString(18), // Geburtsname / M�dchenname
			    	"strFACH_OEKURZ": results.getString(19), // Fachabteilung K�rzel
			    	"strFACH_OENAME": results.getString(20), // Fachabteilung
			    	"strSTAM_OEKURZ": results.getString(21), // Ambulanz/Station K�rzel
			    	"strSTAM_OENAME": results.getString(22), // Ambulanz/Station
			    	"strHLST_KURZ": results.getString(23), // Abrechnungsart K�rzel
			    	"strHLST_NAME": results.getString(24), // Abrechnungsart
			    	"strfCA": results.getString(25)}; // Wahlleistung Chefarzt
} else {
	logger.error(strLoggerPrefix + "SQL Keine Ergebnisse!");
	tmp['row']['ORBIS_Fallnummer'] = strQRYFALLNR;
	tmp['row']['MIBI_Refdatum'] = strREFDATUM;
	tmp['row']['STATUS'] = "SQL_ERROR:KEINE_ERGEBNISSE";
	dbConn.close();
	return false;
}
dbConn.close();
// �berpr�fung, ob Storno gesetzt, falls ja->FALLSTORNO, falls nein->FALLNR_OK, falls null->UNBEKANNTE_FALLNR.
if (myVariables["strSTORNO"].equals('1')) { 
	tmp['row']['STATUS'] = 'STORNO';
} else {
	if (myVariables["strSTORNO"].equals('0')) { 
	tmp['row']['STATUS'] = 'OK';
	} else {
		tmp['row']['STATUS'] = 'SQL_ERROR:UNBEKANNTE_FALLNUMMER';
		logger.error(strLoggerPrefix + "SQL Unbekannte Fallnummer ("+strQRYFALLNR+")!");
		return false;
	}
};
//DB Verbindung trennen


//PID
if (myVariables["strPID"]!=null) {tmp['row']['ORBIS_PID']	= myVariables["strPID"].trim();}//else{logger.info("MIBI ADT QRY | PID leer!");}
//FALLNR
if (myVariables["strFALLNR"]!=null) {tmp['row']['ORBIS_Fallnummer_aktuell'] = myVariables["strFALLNR"].trim();}//else{logger.warn("MIBI ADT QRY | Fallnummer leer!");}
//Aufnahmedatum
if (myVariables["strAUFNDAT"]!=null) {tmp['row']['Aufnahmedatum'] = myVariables["strAUFNDAT"].trim();}//else{logger.warn("MIBI ADT QRY | Aufnahmedatum leer!");}
//Nachname
if (myVariables["strNAME"]!=null) {tmp['row']['Patienten_Nachname'] = myVariables["strNAME"].trim();}//else{logger.info("MIBI ADT QRY | Nachname leer!");}
//Vorname
if (myVariables["strVORNAME"]!=null) {tmp['row']['Patienten_Vorname'] = myVariables["strVORNAME"].trim();}//else{logger.info("MIBI ADT QRY | Vorname leer!");}
//Geburtsdatum
if (myVariables["strGEBDAT"]!=null) {tmp['row']['Patienten_Geburtstag'] = myVariables["strGEBDAT"].trim();}//else{logger.info("MIBI ADT QRY | Geburtsdatum leer!");}
//Geschlecht
if (myVariables["strGESCHLECHT"]!=null) {tmp['row']['Patienten_Geschlecht'] = myVariables["strGESCHLECHT"].trim();}//else{logger.info("MIBI ADT QRY | Geschlecht leer!");}
//Adresse: Stra�e
if (myVariables["strSTRASSE"]!=null) {tmp['row']['Anschrift_Strasse'] = myVariables["strSTRASSE"].trim();}//else{logger.info("MIBI ADT QRY | Stra�e leer!");}
//Adresse: Hausnummer
if (myVariables["strHAUS_NR"]!=null) {tmp['row']['Anschrift_HausNr'] =  myVariables["strHAUS_NR"].trim();}//else{logger.info("MIBI ADT QRY | Hausnummer leer!");}
//Adresse: Ort
if (myVariables["strORT"]!=null) {tmp['row']['Anschrift_Ort'] = myVariables["strORT"].trim();}//else{logger.info("MIBI ADT QRY | Ort leer!");}
//Adresse: PLZ
if (myVariables["strPLZ"]!=null) {tmp['row']['Anschrift_PLZ'] = myVariables["strPLZ"].trim();}//else{logger.info("MIBI ADT QRY | PLZ leer!");}
//Adresse: LKZ
if (myVariables["strLKZ"]!=null) {tmp['row']['LKZ'] = myVariables["strLKZ"].trim();}//else{logger.info("MIBI ADT QRY | LKZ leer!");}
//Telefon: Vorwahl
if (myVariables["strVORWAHL"]!=null) {tmp['row']['PAT_ADR_VORWAHL'] = myVariables["strVORWAHL"].trim();}//else{logger.info("MIBI ADT QRY | Vorwahl leer!");}
//Telefon: Durchwahl
if (myVariables["strDURCHWAHL"]!=null) {tmp['row']['PAT_ADR_DURCHWAHL'] = myVariables["strDURCHWAHL"].trim();}//else{logger.info("MIBI ADT QRY | Durchwahl leer!");}
//Geburtsname
if (myVariables["strGEBURTSNAME"]!=null) {tmp['row']['Patienten_Geburtsname'] = myVariables["strGEBURTSNAME"].trim();}//else{logger.info("MIBI ADT QRY | Geburtsname leer!");}
//Fachabteilung 
if (myVariables["strFACH_OENAME"]!=null) {tmp['row']['Aufnehmende_FAB_lang'] = myVariables["strFACH_OENAME"].trim();}//else{logger.info("MIBI ADT QRY | Aufnehmende OE leer!");}
//Fachabteilung K�rzel
if (myVariables["strFACH_OEKURZ"]!=null) {tmp['row']['Aufnehmende_fAB_Kurz'] = myVariables["strFACH_OEKURZ"].trim();}//else{logger.info("MIBI ADT QRY | Aufnehmende OE (kurz) leer!");}
//Ambulanz/Station
if (myVariables["strSTAM_OENAME"]!=null) {tmp['row']['Aufnehmende_Station_lang'] = myVariables["strSTAM_OENAME"].trim();}//else{logger.info("MIBI ADT QRY | Aufnehmende Station leer!");}
//Ambulanz/Station K�rzel
if (myVariables["strSTAM_OEKURZ"]!=null) {tmp['row']['Aufnehmende_Station_kurz'] = myVariables["strSTAM_OEKURZ"].trim();}//else{logger.info("MIBI ADT QRY | Aufnehmende Station (kurz) leer!");}
//Abrechnungsart K�rzel
if (myVariables["strHLST_KURZ"]!=null) {tmp['row']['Abrechnungsart_kurz'] = myVariables["strHLST_KURZ"].trim();}//else{logger.info("MIBI ADT QRY | HLST (Krankenkasse;kurz) leer!");}
//Abrechnungsart
if (myVariables["strHLST_NAME"]!=null) {tmp['row']['Abrechnungsart_lang'] = myVariables["strHLST_NAME"].trim();}//else{logger.info("MIBI ADT QRY | KLST (Krankenkasse) leer!");}
//Wahlleistung Chefarzt
if (myVariables["strfCA"]!=null) {tmp['row']['Wahlleistung_Chefarzt'] = myVariables["strfCA"].trim();}//else{logger.info("MIBI ADT QRY | Chefarztbehandlung leer!");}

// L�schen der Abfrageergebnisvariablen.
results = null;
// L�schen der zwischengespeicherten Variablen
myVariables = null;
return true;// Abfrage-Parameter aus der HL7 QRY Nachricht von Herrn Molitor.
// Parsen der HL7-Nachricht mit Fehler-R�ckmeldung in CSV und Logger
var strQRYPID = msg['QRD']['QRD.8']['QRD.8.1'].toString();	// PID.

// Ausf�hren einer SQL Abfrage aus die KHV.

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');
//Create a SQL Statement to be executed

// SQL statement returns a value only if the PID is/was known to the HIS (OBRIS).
// If the given PID has been replaced by a new PID then the new PID will appear too.
// PM = Pid-Merge
var strSQL_PM = "SELECT DISTINCT " +
			 "PF1.FREMD_PERSNR PID_ALT, " +
			 "NVL(PF2.FREMD_PERSNR, PF1.FREMD_PERSNR) PID_NEU " +	// wenn keine Merge-PID gefunden wird, dann wird die AbfragePID rausgegeben
			 "FROM " +
			 "PERSON_FREMD PF1, CW_PERSONMERGE PM, PERSON_FREMD PF2 " +
			 "WHERE " +
			 "PF1.PERSNR = PM.ALTPERSNR(+) AND " +
			 "PM.NEUPERSNR = PF2.PERSNR(+) AND " +
			 "PF1.FREMD_PERSNR = '" + strQRYPID + "'";	// Insert of Velocity Variable from ChannelMap defined in Source Transformer.
				 
var result = dbConn.executeCachedQuery(strSQL_PM);				// Execute SQL Statement and save them as results
var resultSize = result.size();

if(resultSize>0) {
		// Einsetzen in Ausgabe
		result.next();
		tmp['row']['ORBIS_PID_AKTUELL']  = result.getString(2);
		tmp['row']['ORBIS_PID_IN'] = strQRYPID;

} else {

	tmp['row']['KOMMENTAR'] = 'UNBEKANNTE PID';
	
};

dbConn.close();// f�hrende Null bei PID und Fallnummer wegnehmen:


//msg['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());
msg['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

channelMap.put('vPID',msg['PID']['PID.3']['PID.3.1']);

// Postfix bei LSTM Auftragsnummer abschneiden- > SSST-2020-000008_1 : SSST-2020-000008

msg['ORC']['ORC.2']['ORC.2.1'] = msg['ORC']['ORC.2']['ORC.2.1'].toString().replace('_1','');
msg['OBR']['OBR.2']['OBR.2.1'] = msg['OBR']['OBR.2']['OBR.2.1'].toString().replace('_1','');

//msg['OBR']['OBR.27']['OBR.27.8'] = 'RAD Ultraschall';

//Medos Kalender ersetzten mit Orbis Kalender 
//Pr�fung, ob OBR Segment vorhanden
if (msg['OBR'].toString().length > 0){
	
var MedosKal = msg['OBR']['OBR.27']['OBR.27.8'].toString();
var OrbisKal;
var OrbisAnf;

if (MedosKal == "OCT1"||MedosKal == "NCT1"||MedosKal == "OCT2"||MedosKal == "GCT1"||MedosKal == "OGAM"||MedosKal == "OPET") {
	OrbisKal = 'RAD CT Operative F�cher Geb.23';
	OrbisAnf = 'SIMPLECT';
} else if (MedosKal == "ICT2"){
	OrbisKal = 'RAD CT Innere Medizin Geb.26';
	OrbisAnf = 'SIMPLECT';
} else if (MedosKal == "ZCT1"){
	OrbisKal = 'RAD CT Zentraleinheit Geb.55';
	OrbisAnf = 'SIMPLECT';
} else if (MedosKal == "OUS1"||MedosKal == "GUS1"||MedosKal == "IUS1"||MedosKal == "KUS1"||MedosKal == "MUS1"||MedosKal == "ZUS1"||MedosKal == "ZUS2"||MedosKal == "NUS1") {
	OrbisKal = 'RAD Ultraschall';
	OrbisAnf = 'SIMPLEUS';
} else if (MedosKal == "MRT1"||MedosKal == "MRT2"||MedosKal == "MRT3") {
	  OrbisKal = 'RAD MRT Haupthaus Geb.46';
	  OrbisAnf = 'SIMPLEMR';
} else if (MedosKal == "MRT4") {
	  OrbisKal = 'RAD MRT 4 / Elki Geb.30';
	  OrbisAnf = 'SIMPLEMR';
} else if (MedosKal == "NMRT"||MedosKal == "NMR2"||MedosKal == "NMRO") {
	  OrbisKal = 'RAD MRT Neuro MR';
	  OrbisAnf = 'SIMPLEMR';
} else if (MedosKal == "GINT"||MedosKal == "GRO1"||MedosKal == "IINT"||MedosKal == "KINT"||MedosKal == "KRO1"||MedosKal == "KRO2"||MedosKal == "NINT"||
           MedosKal == "NRO1"||MedosKal == "NUNF"||MedosKal == "OAWR"||MedosKal == "OIN2"||MedosKal == "OINT"||MedosKal == "ORO2"||MedosKal == "ORO1"||
           MedosKal == "ORO3"||MedosKal == "OUNF"||MedosKal == "ZKON"||MedosKal == "ZMX1"||MedosKal == "ZMX2") {
       OrbisKal = 'RAD R�ntgen';
       OrbisAnf = 'SIMPLEROE';
} else if (MedosKal == "IHIFU") {
       OrbisKal = 'RAD HIFU';
       OrbisAnf = 'SIMPLEHIFU';
} else if (MedosKal == "IDSA"||MedosKal == "ODSA"||MedosKal == "NDSA"||MedosKal == "NMFA1") {
       OrbisKal = 'RAD DSA';
       OrbisAnf = 'SIMPLEDSA';
} else if (MedosKal == "IDL1"||MedosKal == "KDL1"||MedosKal == "NDL1"||MedosKal == "ODL1") {
       OrbisKal = 'RAD Durchleuchtung';
       OrbisAnf = 'SIMPLEDL';
} else if (MedosKal == "OXSO"||MedosKal == "NXSO"||MedosKal == "IXSO"||MedosKal == "KXSO"||MedosKal == "MXSO"||MedosKal == "ZXSO"||MedosKal == "IXSO") {
       OrbisKal = 'RAD Sonstige';
       OrbisAnf = 'SIMPLESO';
} else if (MedosKal == "SBRA"||MedosKal == "SMD1"||MedosKal == "SARZT"||MedosKal == "SSIM"||MedosKal == "STOM"||MedosKal == "SVAR") {
       OrbisKal = 'RAD Strahlentherapie';
       OrbisAnf = 'SIMPLEST';
} else {
  	OrbisKal = 'RAD Sonstige';
  }

msg['OBR']['OBR.27']['OBR.27.8'] = OrbisKal;
msg['OBR']['OBR.24']['OBR.24.1'] = OrbisAnf;
/*
msg['OBR']['OBR.16']['OBR.16.1'] = 'K�PPENPHP';
msg['OBR']['OBR.16']['OBR.16.2'] = 'K�ppen';
msg['OBR']['OBR.16']['OBR.16.3'] = 'Philipp';*/
}
// Wenn ORC.4 Segment leer ist OCR.2 hineinkopieren

if (msg['ORC']['ORC.4']['ORC.4.1'].toString().length < 1) {
	msg['ORC']['ORC.4']['ORC.4.1'] = msg['ORC']['ORC.2']['ORC.2.1'].toString();
	msg['ORC']['ORC.4']['ORC.4.2'] = msg['ORC']['ORC.2']['ORC.2.2'].toString();
}


// wenn OBR36.1 < 12 -> Tagestermin und es soll im OBR4 der Text Termineingang hinzugef�gt werden
var Termin = msg['OBR']['OBR.36']['OBR.36.1'].toString().length;

if (Termin < 12) {
	var Kommentar = msg['OBR']['OBR.4']['OBR.4.2'].toString();
	var KommentarNeu = Kommentar + ' Termineingang';
	msg['OBR']['OBR.4']['OBR.4.2'] = KommentarNeu;
}

/* 28.01.2021 R�cksprache Frau Birgel. Es sollen die Ger�tezeiten �bermittelt werden!
// CT und MRT Termine vorverlegen
// CT-Abdomen,CT-Tho/Abd. 1 Std. fr�her
// MR alle 30 Min. vorher, MR-Sellink 1 Std. vorher, MR-in Narkose 45 Min. vorher

if (msg['ORC']['ORC.1']['ORC.1.1'].toString() != 'CA'){
	if (msg['ORC']['ORC.1']['ORC.1.1'].toString() != 'OC'){

var Medos_U = msg['OBR']['OBR.4']['OBR.4.2'].toString().substring(0,2);
var MedosAnf = msg['OBR']['OBR.4']['OBR.4.2'].toString().substring(0,10);
var MedosAnf2 = msg['OBR']['OBR.4']['OBR.4.2'].toString().substring(0,7);
var OrbisDate  = DateUtil.getCurrentDate("yyyyMMddHHmm");;
var MedosDate = DateUtil.getDate("yyyyMMddHHmm", msg['OBR']['OBR.27']['OBR.27.4'].toString());

OrbisDate = addHoursToJavaUtilDate(MedosDate, 1);

//logger.info("MedosAnf2 = "+MedosAnf2);

if (Medos_U == 'CT') {
	if (MedosAnf == 'CT-Abdomen' ||  MedosAnf == 'CT-Tho/Abd' ||  MedosAnf2 == 'CT-Hals'){
		OrbisDate = addHoursToJavaUtilDate(MedosDate, 1);
	}else {
	OrbisDate = MedosDate;
	}
}else if (Medos_U == 'MR') {
	if (MedosAnf == 'MR-Sellink'){
		OrbisDate = addHoursToJavaUtilDate(MedosDate, -1);
	}else if (MedosAnf == 'MR-in Nark'){
		OrbisDate = addMinutesToJavaUtilDate(MedosDate, -45);
	}else{
		OrbisDate = addMinutesToJavaUtilDate(MedosDate, -30);
	}
}else {
	OrbisDate = MedosDate;
}

//logger.info("test:"+OrbisDate+"->"+DateUtil.formatDate("yyyyMMddHHmm", OrbisDate));

msg['OBR']['OBR.27']['OBR.27.4'] = DateUtil.formatDate("yyyyMMddHHmm", OrbisDate);
msg['OBR']['OBR.36']['OBR.36.1'] = DateUtil.formatDate("yyyyMMddHHmm", OrbisDate);
 }
}
*/// PID Segment anpassen.
//msg['PID']['PID.3']['PID.3.1'] = '3299570';	// test konstante

// PV1 Segment anpassen.
//msg['PV1']['PV1.19']['PV1.19.1'] = '7281635';	// test konstante

// MSH.10.1 Message Control ID
var strMCID   = msg['MSH']['MSH.10']['MSH.10.1'].toString();
var strPID    = msg['PID']['PID.3']['PID.3.1'].toString();
var strFALLNR = msg['PV1']['PV1.19']['PV1.19.1'].toString();

// Erweiterung der MSH Control ID, f�r eine bessere Auswertungsm�glichkeit im ACK zu haben.
// Korrktur pk, 08.09.2014.

msg['MSH']['MSH.10']['MSH.10.1'] = strMCID + '+' + strPID + '+' + strFALLNR;

// F�llen des TXA 12.2 Feldes mit einem sogn. Namespace, Pflichtfeld seit 09.12.2019 in ORBIS
msg['TXA']['TXA.12']['TXA.12.2'] = 'MIBI';

// Voranstellen des ftp Pfades:
var strFTPPfad = 'ftp://mibi:Ml7rLyBElLcWMSdA@ukb218.klinik.bn/MIBI/PDF/' + msg['TXA']['TXA.16']['TXA.16.1'].toString();
msg['TXA']['TXA.16']['TXA.16.1'] = strFTPPfad;

//logger.error('Ausgabepfade FTP JAIF Aufruf: ' + strFTPPfad);// MSH.10.1 Message Control ID
var strMCID   = msg['MSH']['MSH.10']['MSH.10.1'].toString();
var strPID    = msg['PID']['PID.3']['PID.3.1'].toString();
var strFALLNR = msg['PV1']['PV1.19']['PV1.19.1'].toString();

// Erweiterung der MSH Control ID, f�r eine bessere Auswertungsm�glichkeit im ACK zu haben.
// Korrktur pk, 08.09.2014.

msg['MSH']['MSH.10']['MSH.10.1'] = strMCID + '+' + strPID + '+' + strFALLNR;

// PID

// Pr�fix f�r die PID und Fallnummer:
msg['PID']['PID.2']['PID.2.1'] = 'MIBI-' + msg['PID']['PID.2']['PID.2.1'].toString();
msg['PID']['PID.3']['PID.3.1'] = 'MIBI-' + msg['PID']['PID.3']['PID.3.1'].toString();

// aus Datenschutzgr�nden nur die ersten zwei Buchstaben des Vor- und Nachnamen und die Jahreszahl des Geburtsdatums.
msg['PID']['PID.5']['PID.5.1'] = msg['PID']['PID.5']['PID.5.1'].toString().slice(0,2);
msg['PID']['PID.5']['PID.5.2'] = msg['PID']['PID.5']['PID.5.2'].toString().slice(0,2);
msg['PID']['PID.7']['PID.7.1'] = msg['PID']['PID.7']['PID.7.1'].toString().slice(0,4) + '0101';

// PV1
msg['PV1']['PV1.19']['PV1.19.1'] = 'MIBI-' + msg['PV1']['PV1.19']['PV1.19.1'].toString();

// TXA
// F�llen des TXA 12.2 Feldes mit einem sogn. Namespace, Pflichtfeld seit 09.12.2019 in ORBIS
msg['TXA']['TXA.12']['TXA.12.2'] = 'MIBI';//Besuchsart GF verarbeiten, so dass F�lle in OPUS als OEGD markiert werden
if(msg['PV2']['PV2.7']['PV2.7.1'].toString()=='GF') {
	msg['PV1']['PV1.24']['PV1.24.1'] = 'GF';
	msg['PV1']['PV1.21']['PV1.21.1'] = '';
	}if ($('vPatientGivenName').indexOf(" ")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(" ","-"));
if ($('vPatientFamilyName').indexOf(" ")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(" ","-"));
if ($('vPatientGivenName').indexOf(",")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(",",""));
if ($('vPatientFamilyName').indexOf(",")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(",",""));// Transformation f�r Jaif Mdm Import.

// MSH Anpassungen:

// sende die MDM Nachricht immer als �nderungsnachricht T09.
msg['MSH']['MSH.9']['MSH.9.2'] = 'T09';
msg['EVN']['EVN.1']['EVN.1.1'] = 'T09';

// TXA Anpassungen:

// TXA AnpassungBelegartkuerzel fuer HYDMedia setzen
msg['TXA']['TXA.2']['TXA.2.1']   = 'Virologie-Befund'  + ' #0303#';						// Dokumententyp und DMS Belegartenk�rzel.
msg['TXA']['TXA.12']['TXA.12.1'] = msg['TXA']['TXA.12']['TXA.12.1'].toString();				// eindeutige Dokumenten-ID.
msg['TXA']['TXA.12']['TXA.12.2'] = 'OPUS::L';										// Pflichtfeld, seit 09.12.2019 in ORBIS
msg['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());		// f�hrende Nummer beseitigen.

// Velocity Variablen soll sicherstellen, dass keine Abweichung der Ausgabepfade in der Destination und dem MDM TXA.16 Feld entstehen k�nnen.
msg['TXA']['TXA.16']['TXA.16.1'] = $('vPathToJaifukb1488') + $('vAttachmentFileName');

delete msg['OBX'];if ($('vPatientGivenName').indexOf(" ")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(" ","-"));
if ($('vPatientFamilyName').indexOf(" ")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(" ","-"));
if ($('vPatientGivenName').indexOf(",")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(",",""));
if ($('vPatientFamilyName').indexOf(",")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(",",""));function writeErrorToLogFile(file,id,error,text) {
	org.apache.commons.io.FileUtils.write(new java.io.File(file),("\r\nMSG#"+id+" "+error+"\r\nvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n"+text+"\r\n##############################\r\n"),true)
}
importPackage(Packages.org.apache.http.client);
importPackage(Packages.org.apache.http.client.methods);
importPackage(Packages.org.apache.http.impl.client);
importPackage(Packages.org.apache.http.message);
importPackage(Packages.org.apache.http.client.entity);
importPackage(Packages.org.apache.http.entity);
importPackage(Packages.org.apache.http.util);
importPackage(java.io);


var root = "https://ukbcloud.uniklinik-bonn.de"
var max = 5;
var pw = "C0v1d2020!";
var usr = "mirthdata@ukbonn.de"

function addDays(date, days) {
  var result = new Date(date);
  result.setDate(result.getDate() + days);
  return result;
}function writeErrorToLogFile(file,id,error,text) {
	org.apache.commons.io.FileUtils.write(new java.io.File(file),("\r\nMSG#"+id+" "+error+"\r\nvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n"+text+"\r\n##############################\r\n"),true)
}
importPackage(Packages.org.apache.http.client);
importPackage(Packages.org.apache.http.client.methods);
importPackage(Packages.org.apache.http.impl.client);
importPackage(Packages.org.apache.http.message);
importPackage(Packages.org.apache.http.client.entity);
importPackage(Packages.org.apache.http.entity);
importPackage(Packages.org.apache.http.util);
importPackage(java.io);


var root = "https://ukbcloud.uniklinik-bonn.de"
var max = 5;
var pw = "C0v1d2020!";
var usr = "mirthdata@ukbonn.de"

function addDays(date, days) {
  var result = new Date(date);
  result.setDate(result.getDate() + days);
  return result;
}if ($('vPatientGivenName').indexOf(" ")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(" ","-"));
if ($('vPatientFamilyName').indexOf(" ")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(" ","-"));
if ($('vPatientGivenName').indexOf(",")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(",",""));
if ($('vPatientFamilyName').indexOf(",")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(",",""));if ($('vPatientGivenName').indexOf(" ")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(" ","-"));
if ($('vPatientFamilyName').indexOf(" ")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(" ","-"));
if ($('vPatientGivenName').indexOf(",")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(",",""));
if ($('vPatientFamilyName').indexOf(",")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(",",""));if ($('vPatientGivenName').indexOf(" ")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(" ","-"));
if ($('vPatientFamilyName').indexOf(" ")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(" ","-"));
if ($('vPatientGivenName').indexOf(",")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(",",""));
if ($('vPatientFamilyName').indexOf(",")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(",",""));java.lang.Thread.sleep(20000); // wait for file creation to finish (new cloud seems to be slow!)
// new cloud seems to be buggy and very slow! 11.03.2022 -> INC342256if ($('vPatientGivenName').indexOf(" ")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(" ","-"));
if ($('vPatientFamilyName').indexOf(" ")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(" ","-"));
if ($('vPatientGivenName').indexOf(",")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(",",""));
if ($('vPatientFamilyName').indexOf(",")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(",",""));if ($('vPatientGivenName').indexOf(" ")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(" ","-"));
if ($('vPatientFamilyName').indexOf(" ")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(" ","-"));
if ($('vPatientGivenName').indexOf(",")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(",",""));
if ($('vPatientFamilyName').indexOf(",")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(",",""));if ($('vPatientGivenName').indexOf(" ")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(" ","-"));
if ($('vPatientFamilyName').indexOf(" ")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(" ","-"));
if ($('vPatientGivenName').indexOf(",")!=-1) channelMap.put('vPatientGivenName',$('vPatientGivenName').replace(",",""));
if ($('vPatientFamilyName').indexOf(",")!=-1) channelMap.put('vPatientFamilyName',$('vPatientFamilyName').replace(",",""));function writeErrorToLogFile(file,id,error,text) {
	org.apache.commons.io.FileUtils.write(new java.io.File(file),("\r\nMSG#"+id+" "+error+"\r\nvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n"+text+"\r\n##############################\r\n"),true)
}
importPackage(Packages.org.apache.http.client);
importPackage(Packages.org.apache.http.client.methods);
importPackage(Packages.org.apache.http.impl.client);
importPackage(Packages.org.apache.http.message);
importPackage(Packages.org.apache.http.client.entity);
importPackage(Packages.org.apache.http.entity);
importPackage(Packages.org.apache.http.util);
importPackage(java.io);


var root = "https://ukbcloud.uniklinik-bonn.de"
var max = 5;
var pw = "C0v1d2020!";
var usr = "mirthdata@ukbonn.de"

var tempFile = new java.io.File("X:/Work/cloudUploadTemp/"+$('fullFileName'));
org.apache.commons.io.FileUtils.write(tempFile,Base64Utils.base64Decode($('vPdfContent')),false);
var fileSize = tempFile.length();
channelMap.put('fileSize',fileSize);
FileUtil.deleteFile(tempFile);


function addDays(date, days) {
  var result = new Date(date);
  result.setDate(result.getDate() + days);
  return result;
}java.lang.Thread.sleep(20000); // wait for file creation to finish (new cloud seems to be slow!)
// new cloud seems to be buggy and very slow! PK 11.03.2022 -> INC342256
function writeErrorToLogFile(file,text) {
	org.apache.commons.io.FileUtils.write(new java.io.File(file),text,true)
}importPackage(Packages.org.apache.http.client);
importPackage(Packages.org.apache.http.client.methods);
importPackage(Packages.org.apache.http.impl.client);
importPackage(Packages.org.apache.http.message);
importPackage(Packages.org.apache.http.client.entity);
importPackage(Packages.org.apache.http.entity);
importPackage(Packages.org.apache.http.util);
importPackage(java.io);


var root = "https://ukbcloud.uniklinik-bonn.de"
var max = 5;

function addDays(date, days) {
  var result = new Date(date);
  result.setDate(result.getDate() + days);
  return result;
}

function writeErrorToLogFile(file,id,error,text) {
	//'X:/Work/SMSERRORLOG/log_'+DateUtil.getCurrentDate('yyyyMMdd')+'.log',
	org.apache.commons.io.FileUtils.write(new java.io.File(file),("\r\nMSG#"+id+" "+error+"\r\nvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n"+text+"\r\n##############################\r\n"),true)
}var r1=responseMap.get('d emailVersand').getStatus();

if (r1.toString().indexOf("SENT")!==-1) {
	channelMap.put("emailSent",true);

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('org.sqlite.JDBC','jdbc:sqlite:M:\\SMSPWDB\\sqlsmspw.db','','');
var result;
	try {
			//Setze Email Flag auf 1
			var strSqlInsert = 	"UPDATE password SET EMAIL=1 WHERE ANR like '"+$('vANR')+"' AND FID like '"+$('vFallNr')+"'";
			//logger.info(strSqlInsert);			
			dbConn.executeUpdate(strSqlInsert);
			//L�sche, falls Email und SMS versendet wurden **DEAKTIVIERT**
			var strSqlDelete = "DELETE FROM password WHERE ANR like '"+$('vANR')+"' AND FID like '"+$('vFallNr')+"' AND SMS like '1' AND EMAIL like '1'";
			//dbConn.executeUpdate(strSqlDelete);
			//L�sche Eintr�ge �lter als 14 tage
			var strSqlGarbage = "DELETE FROM password WHERE TIMESTAMP <= strftime('%Y%m%d%H%M%S','now','-14 day')";
			dbConn.executeUpdate(strSqlGarbage);
	} catch (e) {
		logger.error(channelName+"|"+e);
	} finally {
		dbConn.close();
	}
} else {
	channelMap.put("emailSent",false);
}function addDays(date, days) {
  var result = new Date(date);
  result.setDate(result.getDate() + days);
  return result;
}var client = new HttpClientBuilder.create().build();
httpDelete = new HttpDelete("https://ukbcloud.uniklinik-bonn.de/api/v4/nodes/"+$('fileID'));
httpDelete.addHeader("Accept", 'application/json');
httpDelete.addHeader("Content-Type", 'application/json');
httpDelete.addHeader("X-Sds-Auth-Token", $('loginToken'));
if (client.execute(httpDelete).toString().contains("HTTP/1.1 204")) {
	logger.info(channelName +"| File " + $('fullFileName') + " deleted! (No Email or Consent)");
	var dbConn = DatabaseConnectionFactory.createDatabaseConnection('org.sqlite.JDBC','jdbc:sqlite:M:\\SMSPWDB\\sqlsmspw.db','','');
		var result;
	try {
			var strSqlDelete = "DELETE FROM password WHERE ANR like '"+$('vANR')+"' AND FID like '"+$('vFallNr')+"'";
			dbConn.executeUpdate(strSqlDelete);
	} catch (e) {
		logger.error(e);
	} finally {
		dbConn.close();
	}
} else {
	logger.warn(channelName +"| File " + $('fullFileName') + " not deleted");
}channelMap.put('strBody',"{ \
  \"resolutionStrategy\": \"overwrite\", \
  \"keepShareLinks\": false, \
  \"fileName\": \""+$('fullFileName')+"\"}");channelMap.put('strBody',"{\"nodeId\":"+$('fileID')+",\
		\"showCreatorName\": false,\
		\"showCreatorUsername\": false,\
		\"password\":\""+$('strPassword')+"\"}");importPackage(java.util);
var paramList = new ArrayList();
paramList.clear();
paramList.add($('vANR'))
paramList.add($('vFallNr'))
var strSqlSelect = 	"SELECT PW FROM password WHERE ANR like ? AND FID like ?";
var dbConn = DatabaseConnectionFactory.createDatabaseConnection('org.sqlite.JDBC','jdbc:sqlite:M:\\SMSPWDB\\sqlsmspw.db','','');
var result;
	try {
		result = dbConn.executeCachedQuery(strSqlSelect,paramList);
		if(result.size()>0){
			result.next();
			channelMap.put('strPassword',result.getString(1));
			channelMap.put('passwordFound',true);
		} else {
			channelMap.put('strPassword',null);
			channelMap.put('passwordFound',false);
			throw "No Password found!"
		}
	} catch (e) {
		logger.error(channelName+"|"+e);
		throw channelName+"| "+e
	} finally {
		dbConn.close();
	}function validateEmail(email) {
  const re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
  return re.test(email);
}

function umlauteWeg(email) {
	var string = new String(email)
	return string.replace(/[��]/g,"ue").replace(/[��]/g,"oe").replace(/[��]/g,"ae");
}
importPackage(java.util);
paramList = new ArrayList();
paramList.clear();
paramList.add($('vPID'))
var SQLQuery = "SELECT E_MAIL EMAIL \
FROM ADRESSE \
WHERE PERSNR = (SELECT PERSNR FROM NATPERSON WHERE PID = ?) \
AND ADRESSARTNR = 1";
var result = getResultSetFromWithParams("khv", SQLQuery, paramList);
channelMap.put('eMail',null);
if(result.size()>0){
result.next();
var input = new String(result.getString(1));
if (validateEmail(input.trim())) {
channelMap.put('eMail',umlauteWeg(input.trim()));
}
//logger.info("SET EMAIL: " + input);
}
//TESTZWECKE**********************************************
//channelMap.put('eMail','kilian.krockauer@ukbonn.de');
//********************************************************

var strAnrede = "Sehr geehrte Dame, sehr geehrter Herr";
if ($('vSex').equalsIgnoreCase("f")){
	strAnrede = "Sehr geehrte Frau "+$('vPatientFamilyName');
} else {
	if ($('vSex').equalsIgnoreCase("m")){
	strAnrede = "Sehr geehrter Herr "+$('vPatientFamilyName');
} 
}
var strBefDatum = DateUtil.formatDate("dd.MM.yyyy", DateUtil.getDate("yyyyMMddHHmm", $('vDatum')));
var body = strAnrede + ",\r\n\Ihr SARS-CoV-2 Befund vom " + strBefDatum+ " steht Ihnen nun zum Download in der UKB Cloud zur Verf�gung.\r\n\
Die Datei wird 14 Tage zum Download verf�gbar sein, danach wird sie endg�ltig gel�scht.\r\n\
URL: "+$('linkURL')+"\r\n\Das Passwort erhalten Sie separat per SMS an die hinterlegte Nummer.\r\n\
Sollten Sie innerhalb von 1 Stunde nach Erhalt dieser Email keine SMS erhalten haben, wenden Sie sich bitte unter Angabe Ihres vollen Namens, Geburtsdatums, Ihrer Mobilnummer und einer kurzen Problembeschreibung an die UK-IT (servicedesk@ukbonn.de).\r\n\
Sollten Sie mehrere Emails und SMS hintereinander erhalten, so gilt die jeweils letzte Link/Passwort-Kombination.\r\n\r\nIm Falle eines positiven Ergebnisses beachten Sie bitte folgende Informationen: http://www.ukbonn.de/isolations-und-quarantaeneinformationen\r\n\r\nMit freundlichen Gr��en, Ihre UK-IT";
channelMap.put('emailBody',body);
channelMap.put("emailSent",false);//Status auf "folgt" setzen, da die Probe bereits im Labor ist und von L&B aber erst kruz vor Ergebnis�bermittlung eingeschleust wird.

for(i=0;i<msg['OBX'].length(); i++) {
	if(msg['OBX'][i]['OBX.5']['OBX.5.1'].toString()=="!fehlt" && msg['ORC']['ORC.5']['ORC.5.1'].toString()=="IP") {
		msg['OBX'][i]['OBX.5']['OBX.5.1'] = "!folgt";
	}
}var r1=responseMap.get('d emailVersand').getStatus();
//logger.info("emailVersandStatus = " + r1)

if (r1=="SENT") {
	channelMap.put("emailSent",true);

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('org.sqlite.JDBC','jdbc:sqlite:M:\\SMSPWDB\\sqlsmspw.db','','');
var result;
	try {
			//Setze Email Flag auf 1
			var strSqlInsert = 	"UPDATE password SET EMAIL=1 WHERE ANR like '"+$('vANR')+"' AND FID like '"+$('vFallNr')+"'";
			//logger.info(strSqlInsert);			
			dbConn.executeUpdate(strSqlInsert);
			//L�sche, falls Email und SMS versendet wurden **DEAKTIVIERT**
			var strSqlDelete = "DELETE FROM password WHERE ANR like '"+$('vANR')+"' AND FID like '"+$('vFallNr')+"' AND SMS like '1' AND EMAIL like '1'";
			//dbConn.executeUpdate(strSqlDelete);
			//L�sche Eintr�ge �lter als 14 tage
			var strSqlGarbage = "DELETE FROM password WHERE TIMESTAMP <= strftime('%Y%m%d%H%M%S','now','-14 day')";
			dbConn.executeUpdate(strSqlGarbage);
	} catch (e) {
		logger.error(channelName+"|"+e);
	} finally {
		dbConn.close();
	}
} else {
	channelMap.put("emailSent",false);
}var famName = msg['PID']['PID.5']['PID.5.1'].toString();
var givName = msg['PID']['PID.5']['PID.5.2'].toString();
var maidName = msg['PID']['PID.6']['PID.6.1'].toString();
var orderNumber = msg['ORC']['ORC.2']['ORC.2.1'].toString();

//anonymisieren der Patientendaten, erster Buchstabe bleibt stehen.
msg['PID']['PID.5']['PID.5.1'] = famName.substring(0,1);
msg['PID']['PID.5']['PID.5.2'] = givName.substring(0,1);

if (maidName.length>0) {
	msg['PID']['PID.6']['PID.6.1'] = maidName.substring(0,1);
}

//Auftragnummer setzen
msg['ORC']['ORC.2']['ORC.2.1'] = orderNumber.substring(9,17);
for each (seg in msg.children()) {
	if (seg.name().toString() == 'OBR')
		seg['OBR.2']['OBR.2.1'] = orderNumber.substring(9,17);		
}//Status auf "folgt" setzen, da die Probe bereits im Labor ist und von L&B aber erst kruz vor Ergebnis�bermittlung eingeschleust wird.

for(i=0;i<msg['OBX'].length(); i++) {
	if(msg['OBX'][0]['OBX.5']['OBX.5.1'].toString()=="!fehlt") {
		msg['OBX'][0]['OBX.5']['OBX.5.1'] = "!folgt";
	}
}// Transformation f�r Jaif Mdm Import.
tmp['MSH']['MSH.9']['MSH.9.2'] = "T09";
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();
tmp['MSH']['MSH.10']['MSH.10.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

tmp['EVN'] = msg['EVN'];
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09"
tmp['PID']['PID.2']['PID.2.1'] = $('strPID');
tmp['PID']['PID.3']['PID.3.1'] = $('strPID');
tmp['PID']['PID.5']['PID.5.1'] = msg['PID']['PID.5']['PID.5.1'].toString()
tmp['PID']['PID.5']['PID.5.2'] = msg['PID']['PID.5']['PID.5.2'].toString()

tmp['PID']['PID.7']['PID.7.1'] = msg['PID']['PID.7']['PID.7.1'].toString()
tmp['PID']['PID.8']['PID.8.1'] = msg['PID']['PID.8']['PID.8.1'].toString()

tmp['PV1']['PV1.19']['PV1.19.1'] = $('FallID')

delete msg['TXA']['TXA.2']['TXA.2.2'];
tmp['TXA'] = msg['TXA']
tmp['TXA']['TXA.1']['TXA.1.1'] = 1
tmp['TXA']['TXA.2']['TXA.2.1'] = $('strType').replaceAll("�","ss") + $('UDID');
tmp['TXA']['TXA.3']['TXA.3.1'] = "PDF"
tmp['TXA']['TXA.6']['TXA.6.1'] = $('strDate');
tmp['TXA']['TXA.8']['TXA.8.1'] = $('strDate');
tmp['TXA']['TXA.12']['TXA.12.1'] = $('UDID')+"_"+$('strDate');
tmp['TXA']['TXA.12']['TXA.12.2'] = "URO"
tmp['TXA']['TXA.16']['TXA.16.1'] = $('vPathToJaifukb1488') + $('vAttachmentFileName');
tmp['TXA']['TXA.17']['TXA.17.1'] = "F";channelMap.put('vPathToJaifukb1488', '//ukb1488.klinik.bn/m$/srv/transfer/mirth/pdf/');
var strFileName = 'MDM-' + $('UDID') + '_' + $('strPID') + '_' + $('strDate') +'.pdf';
channelMap.put('vAttachmentFileName', strFileName);// Transformation f�r Jaif Mdm Import.
tmp['MSH'] = msg['MSH'];
tmp['MSH']['MSH.9']['MSH.9.2'] = "T09";
tmp['EVN'] = msg['EVN'];

delete msg['PID']['PID.3']['PID.3.2'];
delete msg['PID']['PID.3']['PID.3.3'];
delete msg['PID']['PID.3']['PID.3.4'];
delete msg['PID']['PID.3']['PID.3.5'];

tmp['PID'] = msg['PID'];
tmp['PID']['PID.3']['PID.3.1'] = $('strPID');
tmp['PID']['PID.4']['PID.4.1'] = $('FallID')

tmp['PV1'] = msg['PV1'];
tmp['PV1']['PV1.19']['PV1.19.1'] = $('FallID')

delete msg['TXA']['TXA.2']['TXA.2.2'];
tmp['TXA'] = msg['TXA']

tmp['TXA']['TXA.2']['TXA.2.1'] = msg['TXA']['TXA.2']['TXA.2.1'].toString(); // + ' #0315#';
tmp['TXA']['TXA.7']['TXA.7.1'] = DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['TXA']['TXA.11']['TXA.11.1'] = msg['MSH']['MSH.3']['MSH.3.1'].toString();
tmp['TXA']['TXA.12']['TXA.12.2'] = 'URODYN';		// Pflichtfeld, seit 09.12.2019 in ORBIS
tmp['TXA']['TXA.12']['TXA.12.3'] = $('strType');
tmp['TXA']['TXA.15']['TXA.15.1'] = msg['TXA']['TXA.12']['TXA.12.1'].toString();
tmp['TXA']['TXA.16']['TXA.16.1'] = $('vPathToJaifukb1488') + $('vAttachmentFileName');
tmp['TXA']['TXA.17']['TXA.17.1'] = "P";
tmp['TXA']['TXA.21']['TXA.21.1'] = msg['TXA']['TXA.2']['TXA.2.1'].toString();//Test_Aufnahme_25.07.1955_F_6534560_Uroflowmetrie_01_24.07.2019_28.06.2021_11.58
tmp['MSH']['MSH.7']['MSH.7.1'] = DateUtil.convertDate("dd.MM.yyyyHHmm", "yyyyMMddHHmm00", $('strDate')+$('strUhrzeit'));
tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();
tmp['MSH']['MSH.18']['MSH.18.1'] = "8859/8";
tmp['MSH']['MSH.19']['MSH.19.1'] = "DE";
tmp['EVN']['EVN.2'] = DateUtil.convertDate("dd.MM.yyyyHHmm", "yyyymmddHHmm00", $('strDate')+$('strUhrzeit'));
tmp['PID']['PID.2']['PID.2.1'] = $('strPID');
tmp['PID']['PID.3']['PID.3.1'] = $('strPID');
tmp['PID']['PID.5']['PID.5.1'] = $('strNachname');
tmp['PID']['PID.5']['PID.5.2'] = $('strVorname');
tmp['PID']['PID.7']['PID.7.1'] = $('strSex');
tmp['PID']['PID.7']['PID.7.1'] = DateUtil.convertDate("dd.MM.yyyy", "yyyymmdd", $('strGebdat'));
tmp['PV1']['PV1.19']['PV1.19.1'] = $('strFID');

tmp['TXA']['TXA.2']['TXA.2.1'] = $('strUName').replaceAll("�","ss") + " " + $('strUNum');
tmp['TXA']['TXA.3']['TXA.3.1'] = "PDF";
tmp['TXA']['TXA.6']['TXA.6.1'] = DateUtil.convertDate("dd.MM.yyyyHHmm", "yyyyMMddHHmm00", $('strUDatum')+$('strUZeit'));
tmp['TXA']['TXA.8']['TXA.8.1'] = DateUtil.convertDate("dd.MM.yyyyHHmm", "yyyyMMddHHmm00", $('strUDatum')+$('strUZeit'));
tmp['TXA']['TXA.12']['TXA.12.1'] =  $('strUName')+"-"+$('strUNum')+"_"+$('strFID')+"_"+DateUtil.convertDate("dd.MM.yyyyHHmm", "yyyyMMddHHmm00", $('strUDatum')+$('strUZeit'));
tmp['TXA']['TXA.17']['TXA.17.1'] = "F";
tmp['TXA']['TXA.12']['TXA.12.2'] = "URO"
tmp['TXA']['TXA.16']['TXA.16.1'] = "//ukb1488.klinik.bn/m$/srv/transfer/mirth/pdf/"+$('strDestFilename');// Einlesen des PV1.19 Feldinhalts = FALLNR des ORBIS Patienten.
// Ggf. abpr�fen mit anderen Felder.



// Ausf�hren einer SQL Abfrage auf die KHV.

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');

//Create a SQL Statement to be executed

var strQRYFALLNR = msg['QRD']['QRD.8']['QRD.8.1'].toString();
var paramList = new java.util.ArrayList();
paramList.add(strQRYFALLNR);

var sqlStr ="SELECT DISTINCT 	\
		  F.FALLNR, 	\
		  NAT.PID, 	\
		  NAT.NAME, 	\
		  NAT.VORNAME, 	\
		  NAT.GEBDAT, 	\
		  NAT.GESCHLECHT,	\
		  TO_CHAR(SYSDATE, 'YYYYMMDDHH24miss') ABFRAGEZEIT 	\
		  FROM 	\
		  FALL F	\
		  INNER JOIN NATPERSON NAT ON NAT.PERSNR = F.PERSNR	\
		  WHERE 	\
		  F.FALLNR = ? AND 	\
		  F.STORNO_DATUM IS NULL  AND 	\
		  F.KENNZEICHEN NOT IN (2,5,10)"


/*
paramList.add(strQRYFALLNR);
paramList.add(strQRYFALLNR);

var sqlStr ="SELECT DISTINCT " +	// Ambulante F�lle
		  "F.FALLNR, " +
		  "NAT.PID, " +
		  "NAT.NAME, " +
		  "NAT.VORNAME, " +
		  "NAT.GEBDAT, " +
		  "NAT.GESCHLECHT, " +
		  "TO_CHAR(SYSDATE, 'YYYYMMDDHH24miss') ABFRAGEZEIT " +
		  "FROM " +
		  "FALL F, FALL_AMBU FA, ORGAEBENE OE_AMBU, ORGA_STRUK OS, ORGAEBENE OE_INST, PM_MANDANT PM, GESELLSCHAFT GE, NATPERSON NAT " +
		  "WHERE " +
		  "F.FALLID = FA.FALLID(+) AND " +
		  "F.PERSNR = NAT.PERSNR AND " +
		  "F.AKTSTATNR = 1 AND " +
		  "FA.OEBENEID = OE_AMBU.OEBENEID(+) AND " +
		  "FA.OEBENEID = OS.U_OEBENEID AND " +
		  "SUBSTR(OE_AMBU.OEBENEKURZ,1,2) in ('16','TS','14','06') AND " +	// Einschr�nkung auf OE 16 = Urologie
		  "OS.O_OEBENEID = OE_INST.OEBENEID(+) AND  " +
		  "F.MANDANTID = PM.PERSNR AND PM.KH_PERSNR = GE.PERSNR AND GE.G_KURZ = 'UKB'  AND " +
		  "F.FALLNR = ? AND " +
		  "F.STORNO_DATUM IS NULL  AND " +
		  "F.KENNZEICHEN NOT IN (2,5,10) " +
		  "UNION ALL " +
		  "SELECT DISTINCT " + 	// Station�re F�lle
		  "F.FALLNR, " +
		  "NAT.PID, " +
		  "NAT.NAME, " +
		  "NAT.VORNAME, " +
		  "NAT.GEBDAT, " +
		  "NAT.GESCHLECHT, " +
		  "TO_CHAR(SYSDATE, 'YYYYMMDDhh24miss') ABFRAGEZEIT " +
		  "FROM  " +
		  "V_FALL_AUFENTHALT FA, FALL F, " +
		  "ORGAEBENE OE_FACH,  PM_MANDANT PM, GESELLSCHAFT GE , NATPERSON NAT " +
		  "WHERE " +
		  "F.PERSNR = NAT.PERSNR  " +
		  "AND FA.FALLID = F.FALLID " +
		  "AND FA.OEBENEID_DEPARTMENT = OE_FACH.OEBENEID " +
		  "AND OE_FACH.OEBENEKURZ in ('16','TST','14','06') " +			// Einschr�nkung auf OE 16 = Urologie
		  "AND FA.CHANGEPATTERN = 111111 " +
		  "AND FA.OEBENEID_DEPARTMENT != -400 AND F.STORNO_DATUM IS NULL " +
		  "AND F.KENNZEICHEN NOT IN (2,5,10) AND F.MANDANTID = PM.PERSNR  AND PM.KH_PERSNR = GE.PERSNR " +
		  "AND GE.G_KURZ = 'UKB' " +
		  "AND F.FALLNR = ? AND " +
		  "F.STORNO_DATUM IS NULL  AND F.KENNZEICHEN NOT IN (2,5,10) " +
		  "UNION ALL " + 		// Konsile
      	  "SELECT " +
      	  "F.FALLNR, " +
		  "NAT.PID, " +
		  "NAT.NAME, " +
		  "NAT.VORNAME, " +
		  "NAT.GEBDAT, " +
		  "NAT.GESCHLECHT, " +
		  "TO_CHAR(SYSDATE, 'YYYYMMDDhh24miss') ABFRAGEZEIT " +
      	  "FROM " +
      	  "FALL F, ERLEDIGT ERL, HLST HLS, " +
      	  "ORGAEBENE OEB, NATPERSON NAT, " +
      	  "GESELLSCHAFT GE, PM_MANDANT PM " +
      	  "WHERE " +
      	  "OEB.OEBENEID = ERL.ABG_OEBENEID " +
      	  "AND HLS.HLSTID = ERL.HLSTID " +
      	  "AND ERL.FALLID = F.FALLID  " +
      	  "AND F.PERSNR = NAT.PERSNR " +
      	  "AND HLS.HLSTKURZ IN ('10006006','Y_D60_000','Y_D60_001') " +
      	  "AND F.MANDANTID = PM.PERSNR AND PM.KH_PERSNR = GE.PERSNR AND GE.G_KURZ = 'UKB'  " +
      	  "AND F.FALLNR = ? " +
      	  "AND F.STORNO_DATUM IS NULL  " +
      	  "AND F.KENNZEICHEN NOT IN (2,5,10) " +
      	  "AND SUBSTR(OEB.OEBENEKURZ,1,2) in ('16','TST','14','06') ";		// Einschr�nkung auf OE 16 = Urologie
*/

// Execute SQL Statement and save them as results

var results = dbConn.executeCachedQuery(sqlStr, paramList);

var resultSize = results.size();


// Aufbereiten des Resultsets. // hier nur eine Ergebniszeile durch Abfrage.
if(resultSize>0){
	
	results.next();

	var strFALLNR 		= results.getString(1); 
	var strPID 		= results.getString(2); 
	var strNAME 		= results.getString(3); 
	var strVORNAME 	= results.getString(4); 
	var strGEBDAT 		= DateUtil.convertDate("yyyy-MM-dd 00:00:00.0", "yyyyMMdd", results.getString(5)); 
	var strGESCHLECHT 	= results.getString(6); 
	var strSYSDATE		= results.getString(7); 

} else {

	var strFALLNR 		= strQRYFALLNR; 
	var strNAME 		= ''; 
	var strVORNAME 	= ''; 
	var strGEBDAT 		= ''; 
	var strGESCHLECHT 	= ''; 
	var strPID 		= ''; 
	var strSYSDATE		= DateUtil.getCurrentDate('yyyyMMddHHmmss');
	//logger.error(strSYSDATE);
/*
http://www.mirthcorp.com/community/wiki/display/mirth/Working+with+Dates
G - Era Text (e.g. AD)
y - Year
M - Month
w - Week (in the year)
W - Week (in the month)
D - Day (in the year)
d - Day (in the month)
F - Day (of the week; numeric)
E - Day (of the week; word)
a - AM/PM
H - Hour (0-23)
k - Hour (1-24)
K - Hour (0-11)
h - Hour (1-12)
m - Minute
s - Second
S - Millisecond
z - Time zone
Z - Time zone (different formatting) 
 */
 
}

// Kopieren der Resultsetdaten in das OMT.

// MSH
// MSH.7.1 Date/Time of Message = Abfragezeit der SQL Abfrage
tmp['MSH']['MSH.7']['MSH.7.1'] = strSYSDATE;

// MSA
// MSA.2.1 Message Control ID (= Msg ID der Anfragenachricht)
tmp['MSA']['MSA.2']['MSA.2.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

// QRD
// R�ck�bermittlung des eingegangenen QRD Segments.
tmp['QRD'] = msg['QRD'].copy();

// PID
// PID.2.1 External ID Number
tmp['PID']['PID.2']['PID.2.1'] = strPID;
// PID.3.1 Internal ID Number
tmp['PID']['PID.3']['PID.3.1'] = strPID;
// PID.5.1 Family Name
tmp['PID']['PID.5']['PID.5.1'] = strNAME;
// PID.5.2 Given Name
tmp['PID']['PID.5']['PID.5.2'] = strVORNAME;
// PID.7.1 Date of Birth
tmp['PID']['PID.7']['PID.7.1'] = strGEBDAT;
// PID.8.1 Sex
if (strGESCHLECHT == 'W') strGESCHLECHT = 'F'; 
tmp['PID']['PID.8']['PID.8.1'] = strGESCHLECHT;

// PV1
// PV1.19 Fallnummer
tmp['PV1']['PV1.19']['PV1.19.1'] = strQRYFALLNR;

// Schliessen der Connection.

dbConn.close();


// Erstellen der AckMessage.
var ackMessage = SerializerFactory.getSerializer('HL7V2').fromXML(tmp);

// F�llen der Antwortvariablen (ResponseMap f�r Source ACK).
// responseMap.put("customResponse", ResponseFactory.getSuccessResponse(ackMessage));
// Austausch der Funktion gemaess MIRTH Empfehlung, PK, 02.06.2015.
// logger.info("CMmsNexamProQryA19Khv|"+ackMessage);
responseMap.put("customResponse", ResponseFactory.getSentResponse(ackMessage));

// L�schen der Abfrageergebnisvariablen.
results = "";//Test_Aufnahme_25.07.1955_F_6534560_Uroflowmetrie_01_24.07.2019_28.06.2021_11.58
tmp['MSH']['MSH.7']['MSH.7.1'] = DateUtil.convertDate("dd.MM.yyyyHHmm", "yyyyMMddHHmm00", $('strDate')+$('strUhrzeit'));
tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();
tmp['MSH']['MSH.18']['MSH.18.1'] = "8859/8";
tmp['MSH']['MSH.19']['MSH.19.1'] = "DE";
tmp['EVN']['EVN.2'] = DateUtil.convertDate("dd.MM.yyyyHHmm", "yyyymmddHHmm00", $('strDate')+$('strUhrzeit'));
tmp['PID']['PID.2']['PID.2.1'] = $('strPID');
tmp['PID']['PID.3']['PID.3.1'] = $('strPID');
tmp['PID']['PID.5']['PID.5.1'] = $('strNachname');
tmp['PID']['PID.5']['PID.5.2'] = $('strVorname');
tmp['PID']['PID.7']['PID.7.1'] = $('strSex');
tmp['PID']['PID.7']['PID.7.1'] = DateUtil.convertDate("dd.MM.yyyy", "yyyymmdd", $('strGebdat'));
tmp['PV1']['PV1.19']['PV1.19.1'] = $('strFID');

tmp['TXA']['TXA.2']['TXA.2.1'] = $('strUName').replaceAll("�","ss");
tmp['TXA']['TXA.3']['TXA.3.1'] = "PDF";
tmp['TXA']['TXA.6']['TXA.6.1'] = DateUtil.convertDate("dd.MM.yyyyHHmm", "yyyyMMddHHmm00", $('strUDatum')+$('strUZeit'));
tmp['TXA']['TXA.8']['TXA.8.1'] = DateUtil.convertDate("dd.MM.yyyyHHmm", "yyyyMMddHHmm00", $('strUDatum')+$('strUZeit'));
tmp['TXA']['TXA.12']['TXA.12.1'] =  $('strUName').replaceAll("�","ss");
tmp['TXA']['TXA.17']['TXA.17.1'] = "F";
tmp['TXA']['TXA.12']['TXA.12.2'] = "URO"
tmp['TXA']['TXA.16']['TXA.16.1'] = "//ukb1488.klinik.bn/m$/srv/transfer/mirth/pdf/"+$('strDestFilename');// der Hersteller Natus empfielt das Pr�fix "Fragestellung: " zu l�schen, damit mehr Zeichen in der Natus-Anzeige dargestellt werden k�nnen:
// der Anzeigfeld ist von Natus/KeyPointG4 auf 100 Zeichen begrenzt. In Absprache mit Hr. Doer (Stortz) und Fr. Bartuli (NCH).

msg['OBR']['OBR.13']['OBR.13.1'] = msg['OBR']['OBR.13']['OBR.13.1'].toString().replace('Fragestellung: ', '');// MSH
msg['MSH']['MSH.4']['MSH.4.1']	= 'NCH';
msg['MSH']['MSH.5']['MSH.5.1']	= 'ORBIS';
msg['MSH']['MSH.6']['MSH.6.1']	= 'UKB';
msg['MSH']['MSH.15']['MSH.15.1']	= 'AL';
msg['MSH']['MSH.16']['MSH.16.1'] 	= 'AL';
msg['MSH']['MSH.9']['MSH.9.2']	= 'T09'; 		// �nderungsnachricht
msg['MSH']['MSH.12']['MSH.12.1']	= '2.3';

// EVN
msg['EVN']['EVN.1']['EVN.1.1']	= 'T09';

// TXA

msg['TXA']['TXA.12']['TXA.12.1']	= msg['TXA']['TXA.16']['TXA.16.1'].toString();
msg['TXA']['TXA.12']['TXA.12.2']	= 'KPNCH';	// KeyPoint Neurochirugie.

var prefix = '\\\\ukb1488\\m$\\srv\\transfer\\mirth\\pdf\\';		// mit ge�ndertem JAIF Server ukb1488
msg['TXA']['TXA.16']['TXA.16.1'] = prefix + msg['TXA']['TXA.16']['TXA.16.1'].toString();

msg['TXA']['TXA.2']['TXA.2.1']   = 'Neurophysiologischer Befund';

// OBX
delete msg['OBX'];	// wird fuer die MDM Nachricht nicht ben�tigt.// MSH
msg['MSH']['MSH.4']['MSH.4.1']	= 'NCH';
msg['MSH']['MSH.5']['MSH.5.1']	= 'ORBIS';
msg['MSH']['MSH.6']['MSH.6.1']	= 'UKB';
msg['MSH']['MSH.15']['MSH.15.1']	= 'AL';
msg['MSH']['MSH.16']['MSH.16.1'] 	= 'AL';
msg['MSH']['MSH.9']['MSH.9.2']	= 'T09'; 		// �nderungsnachricht
msg['MSH']['MSH.12']['MSH.12.1']	= '2.3';

// EVN
msg['EVN']['EVN.1']['EVN.1.1']	= 'T09';

// TXA

msg['TXA']['TXA.12']['TXA.12.1']	= msg['TXA']['TXA.16']['TXA.16.1'].toString();
msg['TXA']['TXA.12']['TXA.12.2']	= 'KPNCH';	// KeyPoint Neurochirugie.

var prefix = '\\\\ukb1488\\m$\\srv\\transfer\\mirth\\pdf\\';		// mit ge�ndertem JAIF Server ukb1488
msg['TXA']['TXA.16']['TXA.16.1'] = prefix + msg['TXA']['TXA.16']['TXA.16.1'].toString();

msg['TXA']['TXA.2']['TXA.2.1']   = 'Neurophysiologischer Befund';

// OBX
delete msg['OBX'];	// wird fuer die MDM Nachricht nicht ben�tigt.channelMap.put('hl7Type',msg['MSH']['MSH.9']['MSH.9.1'].toString());
channelMap.put('hl7SubType',msg['MSH']['MSH.9']['MSH.9.2'].toString());// der Hersteller Natus empfielt das Pr�fix "Fragestellung: " zu l�schen, damit mehr Zeichen in der Natus-Anzeige dargestellt werden k�nnen:
// der Anzeigfeld ist von Natus/KeyPointG4 auf 100 Zeichen begrenzt. In Absprache mit Hr. Doer (Stortz) und Fr. Bartuli (NCH).
// Abstimmung mit Herrn Hache (Natus) am 17.05.2022 erfolgt.

// Mapping
tmp['MSH'] = msg['MSH'].copy();
tmp['PID'] = msg['PID'].copy();
tmp['PV1'] = msg['PV1'].copy();
tmp['ORC'] = msg['ORC'].copy();
tmp['OBR'] = msg['OBR'].copy();

// PV1
tmp['PV1']['PV1.39']['PV1.39.1'] = msg['PV1']['PV1.3']['PV1.3.4'].toString();	// Servicing Facility -> Fachabteilung

// OBR, ORC Segmente

// Custom Field Value
tmp['OBR']['OBR.2']['OBR.2.1']	= msg['OBR']['OBR.3']['OBR.3.1'].toString();	// OrderID
tmp['ORC']['ORC.2']['ORC.2.1']	= msg['ORC']['ORC.3']['ORC.3.1'].toString(); // Auftragsnummer

// added 2019-10-28 Mhache

tmp['ORC']['ORC.10']['ORC.10.1']	= msg['ORC']['ORC.10']['ORC.10.1'].toString();	// Aforderer (Natus Feldbezeichnung "Anforderer SAP")
tmp['ORC']['ORC.12']['ORC.12.1']	= msg['ORC']['ORC.12']['ORC.12.1'].toString();	// MitarbeiterID
tmp['ORC']['ORC.12']['ORC.12.2']	= msg['ORC']['ORC.12']['ORC.12.2'].toString();	// MitarbeiterNachname
tmp['ORC']['ORC.12']['ORC.12.3']	= msg['ORC']['ORC.12']['ORC.12.3'].toString();	// MitarbeiterVorname
// Mitarbeiter Titel ORC.12.6 wird von ORBIS nicht mitgegeben.
tmp['ORC']['ORC.12']['ORC.12.6']	= '';
tmp['ORC']['ORC.17']['ORC.17.1']	= msg['ORC']['ORC.17']['ORC.17.2'].toString() + ' (' + msg['ORC']['ORC.17']['ORC.17.1'].toString() + ')';	// Beauftragende Station; wird zusammengesetzt auf dem K�rzel und Langbezeichnung, PK, 17.05.2022


tmp['OBR']['OBR.4']['OBR.4.1']	= msg['OBR']['OBR.4']['OBR.4.1'].toString();		// LeistungsID
tmp['OBR']['OBR.4']['OBR.4.2']	= msg['OBR']['OBR.4']['OBR.4.2'].toString();		// Leistung
tmp['OBR']['OBR.4']['OBR.4.4']	= msg['OBR']['OBR.4']['OBR.4.4'].toString();		// LeistungsCode
tmp['OBR']['OBR.4']['OBR.4.5']	= msg['OBR']['OBR.4']['OBR.4.5'].toString();		// Leistungstext
tmp['OBR']['OBR.13']['OBR.13.1'] 	= msg['OBR']['OBR.13']['OBR.13.1'].toString().replace('Fragestellung: ', '');	// Fragestellung
tmp['OBR']['OBR.16']['OBR.16.1']	= msg['OBR']['OBR.16']['OBR.16.1'].toString();	// Anfordernder Mitarbeiter
tmp['OBR']['OBR.24']['OBR.24.1']	= msg['OBR']['OBR.4']['OBR.4.4'].toString();		// Leistungsstelle

// Feld "Fragestellung" soll gef�llt werden mit Inhalt von OBR.13.

tmp['OBX'][1]['OBX.5']['OBX.5.1'] = msg['OBR']['OBR.13']['OBR.13.1'].toString().replace('Fragestellung: ', '');		// Fragestellung// der Hersteller Natus empfielt das Pr�fix "Fragestellung: " zu l�schen, damit mehr Zeichen in der Natus-Anzeige dargestellt werden k�nnen:
// der Anzeigfeld ist von Natus/KeyPointG4 auf 100 Zeichen begrenzt. In Absprache mit Hr. Doer (Stortz) und Fr. Bartuli (NCH).
// Abstimmung mit Herrn Hache (Natus) am 17.05.2022 erfolgt.

// Mapping
tmp['MSH'] = msg['MSH'].copy();
tmp['PID'] = msg['PID'].copy();
tmp['PV1'] = msg['PV1'].copy();
tmp['ORC'] = msg['ORC'].copy();
tmp['OBR'] = msg['OBR'].copy();

// PV1
tmp['PV1']['PV1.39']['PV1.39.1'] = msg['PV1']['PV1.3']['PV1.3.4'].toString();	// Servicing Facility -> Fachabteilung

// OBR, ORC Segmente

// Custom Field Value
tmp['OBR']['OBR.2']['OBR.2.1']	= msg['OBR']['OBR.3']['OBR.3.1'].toString();	// OrderID
tmp['ORC']['ORC.2']['ORC.2.1']	= msg['ORC']['ORC.3']['ORC.3.1'].toString(); // Auftragsnummer

// added 2019-10-28 Mhache

tmp['ORC']['ORC.10']['ORC.10.1']	= msg['ORC']['ORC.10']['ORC.10.1'].toString();	// Aforderer (Natus Feldbezeichnung "Anforderer SAP")
tmp['ORC']['ORC.12']['ORC.12.1']	= msg['ORC']['ORC.12']['ORC.12.1'].toString();	// MitarbeiterID
tmp['ORC']['ORC.12']['ORC.12.2']	= msg['ORC']['ORC.12']['ORC.12.2'].toString();	// MitarbeiterNachname
tmp['ORC']['ORC.12']['ORC.12.3']	= msg['ORC']['ORC.12']['ORC.12.3'].toString();	// MitarbeiterVorname
// Mitarbeiter Titel ORC.12.6 wird von ORBIS nicht mitgegeben.
tmp['ORC']['ORC.12']['ORC.12.6']	= '';
tmp['ORC']['ORC.17']['ORC.17.1']	= msg['ORC']['ORC.17']['ORC.17.2'].toString() + ' (' + msg['ORC']['ORC.17']['ORC.17.1'].toString() + ')';	// Beauftragende Station; wird zusammengesetzt auf dem K�rzel und Langbezeichnung, PK, 17.05.2022


tmp['OBR']['OBR.4']['OBR.4.1']	= msg['OBR']['OBR.4']['OBR.4.1'].toString();		// LeistungsID
tmp['OBR']['OBR.4']['OBR.4.2']	= msg['OBR']['OBR.4']['OBR.4.2'].toString();		// Leistung
tmp['OBR']['OBR.4']['OBR.4.4']	= msg['OBR']['OBR.4']['OBR.4.4'].toString();		// LeistungsCode
tmp['OBR']['OBR.4']['OBR.4.5']	= msg['OBR']['OBR.4']['OBR.4.5'].toString();		// Leistungstext
tmp['OBR']['OBR.13']['OBR.13.1'] 	= msg['OBR']['OBR.13']['OBR.13.1'].toString().replace('Fragestellung: ', '');	// Fragestellung
tmp['OBR']['OBR.16']['OBR.16.1']	= msg['OBR']['OBR.16']['OBR.16.1'].toString();	// Anfordernder Mitarbeiter
tmp['OBR']['OBR.24']['OBR.24.1']	= msg['OBR']['OBR.4']['OBR.4.4'].toString();		// Leistungsstelle

// Feld "Fragestellung" soll gef�llt werden mit Inhalt von OBR.13.

tmp['OBX'][1]['OBX.5']['OBX.5.1'] = msg['OBR']['OBR.13']['OBR.13.1'].toString().replace('Fragestellung: ', '');		// Fragestellung// Umstellung 31.08.2021, Mapping von bisherigen LSTM-ORM Anforderungsnachricht nach SSST-ORM Anforderungsnachricht.

// Mapping
tmp['MSH'] = msg['MSH'].copy();
tmp['PID'] = msg['PID'].copy();
tmp['PV1'] = msg['PV1'].copy();
tmp['ORC'] = msg['ORC'].copy();
tmp['OBR'] = msg['OBR'].copy();

// Fragestellung:
tmp['OBX'][1]['OBX.5']['OBX.5.1'] = msg['OBR']['OBR.13']['OBR.13.1'].toString();// MSH
msg['MSH']['MSH.3']['MSH.3.1']	= 'Keypoint';
msg['MSH']['MSH.4']['MSH.4.1']	= 'NEU';
msg['MSH']['MSH.5']['MSH.5.1']	= 'ORBIS';
msg['MSH']['MSH.6']['MSH.6.1']	= 'UKB';
msg['MSH']['MSH.11']['MSH.11.1']	= 'P';
msg['MSH']['MSH.16']['MSH.16.1'] 	= 'AL';
msg['MSH']['MSH.9']['MSH.9.2']	= 'T09'; 		// �nderungsnachricht

// EVN
msg['EVN']['EVN.1']['EVN.1.1']	= 'T09';

// TXA

msg['TXA']['TXA.12']['TXA.12.1']	= msg['TXA']['TXA.16']['TXA.16.1'].toString();
msg['TXA']['TXA.12']['TXA.12.2']	= 'KPNEU';	// KeyPoint Neurochirugie.

var prefix = '\\\\ukb1488\\m$\\srv\\transfer\\mirth\\pdf\\';		// mit ge�ndertem JAIF Server ukb1488
msg['TXA']['TXA.16']['TXA.16.1'] = prefix + msg['TXA']['TXA.16']['TXA.16.1'].toString();

msg['TXA']['TXA.2']['TXA.2.1']   = 'Neurophysiologie NEU';	// in Absprache mit Hr. J. Reinmann und Hr. J. Weller Dez. 2019

// OBX
delete msg['OBX'];	// wird fuer die MDM Nachricht nicht ben�tigt.// Umstellung 31.08.2021, Mapping von bisherigen LSTM-ORM Anforderungsnachricht nach SSST-ORM Anforderungsnachricht.

// Mapping
tmp['MSH'] = msg['MSH'].copy();
tmp['PID'] = msg['PID'].copy();
tmp['PV1'] = msg['PV1'].copy();
tmp['ORC'] = msg['ORC'].copy();
tmp['OBR'] = msg['OBR'].copy();

// Fragestellung:
tmp['OBX'][1]['OBX.5']['OBX.5.1'] = msg['OBR']['OBR.13']['OBR.13.1'].toString();// Anpassungen der ORU Nachricht.

msg['MSH']['MSH.3']['MSH.3.1'] = 'Textbefund';/*

Einlesen der HL7-Nachrichten in die Tabelle:

CREATE TABLE `transfer`.`hl7` (
  `trans_id` INT NOT NULL AUTO_INCREMENT,
  `msg` VARCHAR(10) NOT NULL,
  `verleg_dat` DATE NULL,
  `patientno` DECIMAL(38) NOT NULL,
  `oldpatientno` DECIMAL(38) NOT NULL,
  `name` VARCHAR(45) NULL,
  'titel' VARCHAR(45) NULL,
  `vorname` VARCHAR(45) NULL,
  `geb_name` VARCHAR(45) NULL,
  `geb_dat` DATE NULL,
  `geschlecht` VARCHAR(1) NULL,
  `staatsang` VARCHAR(45) NULL,
  `land` VARCHAR(45) NULL,
  `wohnort` VARCHAR(45) NULL,
  `strasse` VARCHAR(45) NULL,
  `telefon` VARCHAR(45) NULL,
  `beruf` VARCHAR(45) NULL,
  `caseno` DECIMAL(38) NULL,
  `privileg` VARCHAR(1) NULL,
  `station` VARCHAR(45) NULL,
  `auf_dat` DATE NULL,
  `auf_zeit` TIME NULL,
  `entl_dat` DATE NULL,
  `arzt_name` VARCHAR(45) NULL,
  `arzt_fach` VARCHAR(45) NULL,
  `ang_name` VARCHAR(45) NULL,
  `ang_vorname` VARCHAR(45) NULL,
  `ang_plz` VARCHAR(45) NULL,
  `ang_ort` VARCHAR(45) NULL,
  `ang_strasse` VARCHAR(45) NULL,
  `vers_name` VARCHAR(45) NULL,
  `vers_titel` VARCHAR(45) NULL,
  `vers_vorname` VARCHAR(45) NULL,
  `vers_plz` VARCHAR(45) NULL,
  `vers_ort` VARCHAR(45) NULL,
  `vers_strasse` VARCHAR(45) NULL,
  `kass_name` VARCHAR(45) NULL,
  `kass_plz` VARCHAR(45) NULL,
  `kass_ort` VARCHAR(45) NULL,
  `kass_strasse` VARCHAR(45) NULL,
  PRIMARY KEY (`trans_id`),
  UNIQUE INDEX `trans_id_UNIQUE` (`trans_id` ASC))
ENGINE = MyISAM; 
*/


var nname = new Array();
var sdate = new Date();
var privat = new RegExp("^P");


// EVN
if (msg['EVN']['EVN.1']['EVN.1.1'].toString() == 'A34')
channelMap.put('msg', 'A40');	
else channelMap.put('msg', msg['EVN']['EVN.1']['EVN.1.1'].toString());
// PID
channelMap.put('patientno', msg['PID']['PID.3']['PID.3.1'].toString().lpad("0", 8));
nname = [
	msg['PID']['PID.5']['PID.5.4'].toString(), 
	msg['PID']['PID.5']['PID.5.5'].toString(),
	msg['PID']['PID.5']['PID.5.1'].toString()
];
channelMap.put('name', nname.join2(' ').substring(0,45));
channelMap.put('titel', msg['PID']['PID.5']['PID.5.6'].toString().substring(0,45));
channelMap.put('vorname', msg['PID']['PID.5']['PID.5.2'].toString().substring(0,45));
channelMap.put('geb_name', msg['PID']['PID.6']['PID.6.1'].toString().substring(0,45));
sdate.hl7parse(msg['PID']['PID.7']['PID.7.1'].toString());
channelMap.put('geb_dat', sdate.toSqlDateString());
channelMap.put('geschlecht', msg['PID']['PID.8']['PID.8.1'].toString());
channelMap.put('staatsang', msg['PID']['PID.26']['PID.26.1'].toString());
channelMap.put('land', msg['PID']['PID.11']['PID.11.6'].toString());
channelMap.put('plz', msg['PID']['PID.11']['PID.11.5'].toString());
channelMap.put('wohnort', msg['PID']['PID.11']['PID.11.3'].toString().substring(0,45));
channelMap.put('strasse', msg['PID']['PID.11']['PID.11.1'].toString().substring(0,45));
channelMap.put('telefon', msg['PID']['PID.13']['PID.13.1'].toString().substring(0,45));
channelMap.put('beruf', msg['PID']['PID.27']['PID.27.1'].toString().substring(0,45));
// MRG
if (msg['MRG'].length() > 0) {
	channelMap.put('oldpatientno', msg['MRG']['MRG.1']['MRG.1.1'].toString().lpad("0", 8));
}
// PV1
if (msg['PV1'].length() > 0)
{	
	channelMap.put('caseno', msg['PV1']['PV1.19']['PV1.19.1'].toString().lpad("0", 8));
    if (msg['PV1']['PV1.21']['PV1.21.1'].toString() == 'S') {
	    if (privat.test(msg['PV2']['PV2.2']['PV2.2.1'].toString())) 
			channelMap.put('privileg', 'P');
        else channelMap.put('privileg', 'K');
    } else channelMap.put('privileg', msg['PV1']['PV1.21']['PV1.21.1'].toString());
	channelMap.put('station', msg['PV1']['PV1.3']['PV1.3.6'].toString());
	sdate.hl7parse(msg['PV1']['PV1.44']['PV1.44.1'].toString());
	channelMap.put('auf_dat', sdate.toSqlDateString());
	sdate.hl7parse(msg['PV1']['PV1.44']['PV1.44.1'].toString() + '00');
    // Der HL7-Timestamp von AGFA enth�lt keine Sekunden!
	channelMap.put('auf_zeit', sdate.toGermanTimeString());
    if (msg['PV1']['PV1.45']['PV1.45.1'].length() > 0) {
		sdate.hl7parse(msg['PV1']['PV1.45']['PV1.45.1'].toString());
		channelMap.put('entl_dat', sdate.toSqlDateString());
	}
	channelMap.put('arzt_name', Number(msg['PV1']['PV1.9']['PV1.9.1'].toString()));
	channelMap.put('arzt_fach', Number(msg['PV1']['PV1.8']['PV1.8.1'].toString()));
}
// NK1
if (msg['NK1'].length() > 0)
{	
	if (msg['NK1'][0]['NK1.3']['NK1.3.3'].toString() == 'ISH') {
		channelMap.put('ang_name', msg['NK1'][0]['NK1.2']['NK1.2.1'].toString().substring(0,45));
		channelMap.put('ang_vorname', msg['NK1'][0]['NK1.2']['NK1.2.2'].toString().substring(0,45));
		channelMap.put('ang_plz', msg['NK1'][0]['NK1.4']['NK1.4.5'].toString());
		channelMap.put('ang_ort', msg['NK1'][0]['NK1.4']['NK1.4.3'].toString());
		channelMap.put('ang_strasse', msg['NK1'][0]['NK1.4']['NK1.4.1'].toString().substring(0,45));
	}
}
// IN1
if (msg['IN1'].length() > 0) {
	if (msg['IN1'][0]['IN1.16']['IN1.16.1'].length() > 0) {
		nname = [
			msg['IN1'][0]['IN1.16']['IN1.16.4'].toString(), 
			msg['IN1'][0]['IN1.16']['IN1.16.5'].toString(), 
		 	msg['IN1'][0]['IN1.16']['IN1.16.1'].toString()
		];
		channelMap.put('vers_name', nname.join2(' ').substring(0,45));
		channelMap.put('vers_titel', msg['IN1'][0]['IN1.16']['IN1.16.6'].toString());
		channelMap.put('vers_vorname', msg['IN1'][0]['IN1.16']['IN1.16.2'].toString().substring(0,45));
		channelMap.put('vers_plz', msg['IN1'][0]['IN1.19']['IN1.19.5'].toString());
		channelMap.put('vers_ort', msg['IN1'][0]['IN1.19']['IN1.19.3'].toString());
		channelMap.put('vers_strasse', msg['IN1'][0]['IN1.19']['IN1.19.1'].toString().substring(0,45));
	}
	if (msg['IN1']['IN1.4']['IN1.4.1'].length() > 0) {
		channelMap.put('kass_name', msg['IN1'][0]['IN1.4']['IN1.4.1'].toString().substring(0,45));
		channelMap.put('kass_plz', msg['IN1'][0]['IN1.5']['IN1.5.5'].toString());
		channelMap.put('kass_ort', msg['IN1'][0]['IN1.5']['IN1.5.3'].toString());
		channelMap.put('kass_strasse', msg['IN1'][0]['IN1.5']['IN1.5.1'].toString().substring(0,45));
	}
}
// ZBE
if (msg['ZBE'].length() > 0)
{
	sdate.hl7parse(msg['ZBE']['ZBE.2']['ZBE.2.1'].toString() + '00');
	channelMap.put('verleg_dat', sdate.toSqlDateString());
}// Die eingehende HL7 ORU Nachricht mit einem OBX Segment, das den PDF Befund enth�lt
// wird im Folgenden zu einer HL7 MDM Nachricht transformiert.
// Die MDM Vorlage im OMT (Outbound Message Template) wird mit einigen Feldinhalten aus der ORU
// gef�llt.


// MSH
// Date/Time of Message
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();
// Message Control ID
tmp['MSH']['MSH.10']['MSH.10.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

// EVN
// Recorded Date / Time = Date/Time of Message
tmp['EVN']['EVN.2']['EVN.2.1'] = tmp['MSH']['MSH.7']['MSH.7.1']; 

// PID
// Patient ID
tmp['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString();

// PV1
// Patient Visit Number
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString();

// TXA

// Document Type (Dokumentenbezeichnung inkl. Zuordnungsk�rzel f�r HYDMedia)
tmp['TXA']['TXA.2']['TXA.2.1'] = msg['OBR']['OBR.4']['OBR.4.1'].toString() + ' #0307#'; // #0307# => 3 Medizinische Befunde, 3.07 Pathologie, Zytologie (lt. Aktenplan vom 01.03.2022)
// Origination Date/Time (Erstellungzeitpunkt)  = OBR.14 Specimen Recieved Date/Time
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['OBR']['OBR.14']['OBR.14.1'].toString();
// Transcription Date/Time
tmp['TXA']['TXA.7']['TXA.7.1'] = msg['OBR']['OBR.14']['OBR.14.1'].toString();

// Unique Document Number (!) = Filler Order Number (Laborauftragsnummer)
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['OBR']['OBR.3']['OBR.3.1'].toString();
// Namespace
tmp['TXA']['TXA.12']['TXA.12.2'] = 'NEXUS-LIS'; // Muss in ORBIS im Namespace Katalog hinterlegt sein.

// Dokumentenpfad bzw Unique Document File Name (mit Pfad).
tmp['TXA']['TXA.16']['TXA.16.1'] = '//ukb1488.klinik.bn/m$/srv/transfer/mirth/pdf/' + $('PDFFileName');// Die ADT Nachrichten werden f�r Nexus aufbereitet:
// (1) alle Z-Segmente bis auf das ZEB-Segment werden gel�scht.FIXME:
// (2) Im Fled PV1-21 wird in Abh�ngigkeit der Behandlungskategorie ein P oder K hinterlegt.


// (1) L�schen alle Z-Segment bis auf ZBE.

for each (seg in msg.children()) {

	// Z-Segmente identifizieren:
	if (seg.name().toString().substr(0,1) == "Z") {
		
		if(seg.name().toString() != 'ZBE') delete msg.children()[seg.childIndex()];		
	}
}

if (msg['PV1'].length()>0) {		// Pr�fung auf die Existenz des PV1-Segments	

	// (2) Bestimmung des Versichertenstatus:

		// Mapping des Privatkennzeichens
		// PV2||PV^Priv. Pflegeklasse 1 BZ + WC vermin.^ORBIS-BEHANDLUNGSKATEGORIE
		// Pr�fen auf die Existenz des Feldes PV2.2.1

	if(msg['PV2']['PV2.2']['PV2.2.1'].length() > 0) {

		var strPKKnz = msg['PV2']['PV2.2']['PV2.2.1'].toString();
		// var strPKKnz = msg['PV1']['PV1.21']['PV1.21.1'].toString();

		if (strPKKnz.substr(0,1) == 'P' ) {

			msg['PV1']['PV1.21']['PV1.21.1']= 'P'

		} else {

			msg['PV1']['PV1.21']['PV1.21.1']= 'K'
		}

	};

	
	// (3) Prim�rschl�ssel erstellen und ins vereinbarte Fled PV1-39 schreiben.
	// Aufgabe: es muss ein Prim�rschl�ssel aus den OE K�rzeln des PV1-3 Feldes (inkl. Subfelder) erstellt werden noch folgendem Algorithmus:
	// bei station�rem Fall (PV1-1 = I): PS = PV1.3.4 + '_' + PV1.3.1 , z.B. 01_0124
	// bei ambulantem  Fall (PV1-1 = O): PS = substr(PV1.3.4,1,2) + '_' + PV1.3.4 , z.B. bei 0115PAMB -> 01_0115PAMB

	var strFallstatusart = msg['PV1']['PV1.2']['PV1.2.1'].toString(); // Auspr�gung I = inpatient, O = outpatient, T = Tagesklinik, TS = Teilstation�re
	var strPrimaerSchluessel = '';

	if (msg['PV1']['PV1.3']['PV1.3.1'].toString().length>0)  {		// Pr�fen, ob Feld gef�llt ist.

		// wenn gef�llt, dann ist es ein station�rer Fall:
		var strKlinikOE = msg['PV1']['PV1.3']['PV1.3.4'].toString();
		var strStation = msg['PV1']['PV1.3']['PV1.3.1'].toString();
	
		strPrimaerSchluessel = strKlinikOE + '_' + strStation;

	} else {

		// sonst ist es ein ambulanter Fall:

		
		var strAmbulanzkuerzel = msg['PV1']['PV1.3']['PV1.3.4'].toString();		// Ambulanzkuerzel bestimmten:

		var listAusnahmeAmbulanzen = ['10451PODAMB', '10452PODKIDAMB', '10453PAAMB'];
 
		
		if(listAusnahmeAmbulanzen.indexOf(strAmbulanzkuerzel) >= 0) {	// Ausnahmebehandlung: WENN es sich um eine INTERPOD (Ausnahme-)Ambulanz handelt, die eine dreistellige Kliniknummer hat
															// DANN gilt Folgendes:
	
			var strKlinikOE = strAmbulanzkuerzel.substring(0, 3);
			strPrimaerSchluessel = strKlinikOE + '_' + strAmbulanzkuerzel;
											
			
		} else {
		
		var strKlinikOE = strAmbulanzkuerzel.substring(0, 2);

		strPrimaerSchluessel = strKlinikOE + '_' + strAmbulanzkuerzel;
		
		}
	}

	msg['PV1']['PV1.39']['PV1.39.1'] = strPrimaerSchluessel;
}


/* 

Beispielnachricht station�rer Fall:

MSH|^~\&|ORBIS|UKB|MIRTH|UKB|202203171552||ADT^A08|74760585|P|2.3|||||D||DEEVN|A08|202203171552|202203161920||MED02040||PID|1|4935234|4935234||Stimpfig^Rolf^^^^|Stimpfig|19600513|M|||Annabergerstr.   46c^^Bonn^^53175^D^L|||||U||||||||N||D|PV1|1|I|0711^^^07^0001^938135|07^Notfall^301||0711^^^07^0001^938135||||N||||||N|||20326658||K||||||||||||||||||0100|||||202203161646|||||||HPV2||A^Allg. Pflegeklasse^ORBIS-BEHANDLUNGSKATEGORIE|01^KH-Behandlung, vollstat.^301||||||||||||||||||N|||I||||||||||||N|IN1|1||1013008|Postbeamtenkrankenkasse Competence Center Stat. Behandlung|^^Stuttgart^^70467^UNB||||Sonstige^5^^^1&gesetzlich^^^|||||||Stimpfig^Rolf|^|19600513|Annabergerstr.   46c^^Bonn^^53175^D|||1|||||||||M||||||||||||M| ^^^^^|IN2|1||^||||||||||||||||||||||||||^PC^100^K|IN1|2||SELBST|Selbstzahler|^^^^^||||Sonstige^5^^^1&gesetzlich^^^|||||||Stimpfig^Rolf|^|19600513|Annabergerstr.   46c^^Bonn^^53175^D|||2|||||||||M||||||||||||M| ^^^^^|IN2|2||^||||||||||||||||||||||||||^PC^^S|ZBE|35961279^ORBIS|202203161920|202203161934|UPDATE|

Beispielnachricht ambulanter Fall:

MSH|^~\&|ORBIS|UKB|MIRTH|UKB|202203171551||ADT^A04|74760566|P|2.3|||||D||DEEVN|A04|202203171551|202203171550||50115826||PID|1|3003345|3003345||Aleko^Mohammed^^^^|Aleko|19981105|M|||Berta-Lungstras-Str. 43 43^^Bonn^^53119^D^L||01578/3463804^^PH|||S|MO|||||||N||D|PV1|1|O|^^^9014INZ^90 INZ^944195|^^301|||||16581^UKB-Ambulanz Urologische Klinik^^^^^Venusberg-Campus 1^53127^Bonn^^^|N||||||N|||20328031||K|||KV||||||||||||||||||||202203171550|||||||APV2|||^^301||||N||||||||||||||N|||O||||||||||||N|IN1|1|104940005|0001006040|BEK Wuppertal|Lichtscheider Str. 89-95 ^^Wuppertal^^42285^D||||Ersatzkassen^13^^^1&gesetzlich^^^|||||||Aleko^Mohammed|^|19981105|Berta-Lungstras-Str. 43 43^^Bonn^^53119^D|||1|||||||202203171551||F|||||T052239405|||||||M| ^^^^^|IN2|1||^||||||||||||||||||||||||||^PC^0^K|ZAS|4337337|0104^Notfalldienst/Vertretung/Notfall|||||||Notfall|20220317|20220331ZVK||Mohammed||Aleko|19981105|Berta-Lungstras-Str. 43 |D  |53119|Bonn|T052239405|3000|1|104080005|BARMER|00038|||20220317ZBE|35971669^ORBIS|202203171550||INSERT|

Besonderheit station�rer Fall (I), der sich auf eine Ergenis r�ckwirkend bezieht, als der Fallstatus ambulant war:

MSH|^~\&|ORBIS|UKB|MIRTH|UKB|202203171656||ADT^A08|74762744|P|2.3|||||D||DEEVN|A08|202203171656|202203171047||AN�26297||PID|1|4406210|4406210||Neuschaefer-Rube^J�rg^^^^||19640822|M|||Augustinusstr. 30^^Sankt Augustin^^53757^D^L|||||||||||||N||D|PV1|1|I|^^^9723NNZ^97NNZ^941296|07^Notfall^301||^^^^97NNZ^||||N||||||N|||20327396||K|||||||||||||||||||||||202203171047|||||||HPV2|||01^KH-Behandlung, vollstat.^301||||N||||||||||||||N|||I||||||||||||N|IN1|1|101575519|0001004425|Techniker Krankenkasse|^^Hamburg^^20907^D||||Ersatzkassen^13^^^1&gesetzlich^^^|||||||Neuschaefer-Rube^J�rg|^|19640822|Augustinusstr. 30^^Sankt Augustin^^53757^D|||1|||||||202203171047||M|||||Y992775057|||||||M| ^^^^^|IN2|1||^||||||||||||||||||||||||||^PC^100^K|ZVK||J�rg||Neuschaefer-Rube|19640822|Augustinusstr. 30|D  |53757|Sankt Augustin|Y992775057|1000|1|104077501|TK|00038|||20220317ZBE|35967127^ORBIS|202203171046||UPDATE|
*/// Passt das ADT-UKB-AGFA f�r OrgaCard an
// 
// $Id$

var privat = new RegExp("^P|^TP");

tmp = msg.copy();

// MSH 
tmp['MSH']['MSH.15']['MSH.15.1'] = 'AL';
tmp['MSH']['MSH.16']['MSH.16.1'] = 'NE';
tmp['MSH']['MSH.5']['MSH.5.1'] = 'ORGACARD';
tmp['MSH']['MSH.6']['MSH.6.1'] = 'VUV';

// PV1
if(msg['PV1'].length()>0) {
	if (msg['PV1']['PV1.21']['PV1.21.1'].toString() == 'S') {
		if (privat.test(msg['PV2']['PV2.2']['PV2.2.1'].toString())) 
			tmp['PV1']['PV1.21']['PV1.21.1'] = 'P';	
        	else tmp['PV1']['PV1.21']['PV1.21.1'] = 'K';
	}
	// Bei ADT^A13 Entlassdatum l�schen
	if (msg['MSH']['MSH.9']['MSH.9.2'].toString() == 'A13')
	{
		delete tmp['PV1']['PV1.45']['PV1.45.1'];	 
	}
	// Fallnummer pseudonymisieren:
	var strFALLNR = msg['PV1']['PV1.19']['PV1.19.1'].toString();
	var strSalt   = 'S4lTuKb20i8!';
	// https://stackoverflow.com/questions/5531455/how-to-hash-some-string-with-sha256-in-java (99) and http://commons.apache.org/proper/commons-codec/
	var sha256ID = org.apache.commons.codec.digest.DigestUtils.sha256Hex(strFALLNR + strSalt); //connectorMessage.getRawData()
	channelMap.put('vFallnummerSHA256', sha256ID.substring(0,15).toUpperCase());
	tmp['PV1']['PV1.50']['PV1.50.1'] = sha256ID.substring(0,15).toUpperCase();
}

msg = tmp.copy();if (responseMap.get('dsendPDF2JAIF').getStatus()=="FILTERED" && $('PDFError')) logger.error(channelName+"| Message #"+ connectorMessage.getMessageId() +" was FILTERED because there was an Error in recieving the PDF! Error(s): " + $('ERRORS'));logger.info("File \""+$('vAttachmentFileName')+"\" should be moved to JAIF!");sleep(1000)// Zus�tzlich wird im PV1.3.1 ein fest hinterlegter Einweiser "SMH" (f�r St. Marienhospital) hinterlegt.

// MSH
msg['PV1']['PV1.3']['PV1.3.1'] = 'SMH';// Setzen des FTP Pfades (aus JAIF Sicht) vor dem PDF-Dokumentenname.
// Z.B.:
// TXA.16.1 = "57083_284100.pdf"
// Lokaler Verzeichnispfad auf dem Cato System = D:\CMS\PDF\
// Basis FTP Pfad = "ftp://ukb369.klinik.bn/PDF/"
// Basis FTP Pfad mit Zugriffsdaten f�r JAIF = "ftp://egate:hgmJoxLoeiG7wlic@ukb369.klinik.bn/PDF/"
//
// FTP Pfad mit CATO Dokument = "ftp://egate:hgmJoxLoeiG7wlic@ukb369.klinik.bn/PDF/" + "57083_284100.pdf"
// Neuer TXA.16.1 Feldinhalt  = "ftp://egate:hgmJoxLoeiG7wlic@ukb369.klinik.bn/PDF/57083_284100.pdf"


// Kopiert die eingehende HL7 Nachricht in das OMT (ggf. mit Erweiterungen).

tmp = msg.copy();

// Anpassungen im MSH Segment:

// Recieving Application
tmp['MSH']['MSH.5']['MSH.5.1'] = 'OBRIS';

// Recieving Facility
tmp['MSH']['MSH.6']['MSH.6.1'] = 'UKB';

// Message Type 
// ORBIS unterst�tzt den MDM T07 Nachrichtentyp nicht.
// daher wird er auf T01 �bergeleitet.

//if (msg['MSH']['MSH.9']['MSH.9.2'].toString() == 'T07') {
// Nach Absprache mit Herrn Reymon (Agfa) kann statt dem T07 Typen der T09 Typ verwendet werden.
// Anpassung pk, 05.06.2014
	tmp['MSH']['MSH.9']['MSH.9.2'] = 'T09';
	tmp['EVN']['EVN.1']['EVN.1.1'] = 'T09';	// analog wird dies im EVN.1 durchgef�hrt.
//}

// Anpassungen im PV1 Segment:

var PoC_Cato = msg['PV1']['PV1.3']['PV1.3.1'].toString();	// z.B. 00002612@00000026
// Poc(Station) ist immer 8-stellig
// Facility ist ebenfalls immer 8-stellig

tmp['PV1']['PV1.3']['PV1.3.1'] = PoC_Cato.substr(0,8);


tmp['PV1']['PV1.3']['PV1.3.4'] = PoC_Cato.substr(9,8);



// Anpassung im TXA Segment.

// Voranstellen des UNC-Pfades der Freigabe auf dem CATO-Server:
tmp['TXA']['TXA.16']['TXA.16.1'] = '//ukb1518.klinik.bn/CDE/PDF/' + msg['TXA']['TXA.16']['TXA.16.1'].toString();

// Setzen der fallnummernbezogenen Dokumenten-ID
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString() + msg['TXA']['TXA.12']['TXA.12.1'].toString();

// Setzen des Namensraumbezeichners (hier 'CATO')
tmp['TXA']['TXA.12']['TXA.12.2'] = 'CATO';



return tmp;


// PV1.3 (Assigned Patient Location) wie ORBIS es ben�tigt:  PV1||O|00003056^^^00000030|||[...]var strMsgTime = DateUtil.getCurrentDate('yyyyMMddHHmmss');


tmp['MSH']['MSH.7']['MSH.7.1'] 		= strMsgTime;
tmp['MSH']['MSH.10']['MSH.10.1'] 	= UUIDGenerator.getUUID();
tmp['PID']['PID.3']['PID.3.1']		= msg['patient_id'].toString();
tmp['PID']['PID.5']['PID.5.2']		= msg['firstname'].toString();
tmp['PID']['PID.5']['PID.5.1']  	= msg['lastname'].toString();
tmp['PID']['PID.7']['PID.7.1']		= msg['birthday'].toString();
tmp['PID']['PID.8']['PID.8.1']		= msg['identifier'].toString();
tmp['PV1']['PV1.19']['PV1.19.1']	= msg['case_id'].toString();
tmp['PV1']['PV1.44']['PV1.44.1']	= msg['case_checkin_date'].toString();
tmp['PV1']['PV1.45']['PV1.45.1']	= msg['case_checkout_date'].toString();
tmp['ORC']['ORC.3']['ORC.3.1']		= msg['case_id'].toString();
tmp['ORC']['ORC.9']['ORC.9.1']		= msg['case_checkin_date'].toString();
tmp['OBR']['OBR.6']['OBR.6.1']		= strMsgTime;
tmp['OBR']['OBR.8']['OBR.8.1']		= strMsgTime;
tmp['OBR']['OBR.18']['OBR.18.1']	= msg['documentid'].toString();
tmp['OBX']['OBX.3']['OBX.3.1']		= msg['externalid'].toString();
tmp['OBX']['OBX.5']['OBX.5.1']		= msg['hauptbelegart'].toString();
tmp['OBX']['OBX.14']['OBX.14.1']	= strMsgTime;// PID 

// F�hrende Null abschneiden (durch Number()-Konvertierung):
msg['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// Anpassungen von Feldern aus Datenschutzgr�nden.

msg['PID']['PID.5']['PID.5.1'] = '';
msg['PID']['PID.5']['PID.5.2'] = '';// SSST ist kein g�ltiger Einsender; Hr. Kr�ger IFMS melden.
if (msg['MSH']['MSH.6']['MSH.6.1'].toString() == 'SSST') msg['MSH']['MSH.6']['MSH.6.1'] = 'JOH';// Zus�tzlich wird im PV1.3.1 ein fest hinterlegter Einweiser "SMH" (f�r St. Marienhospital) hinterlegt.

// MSH
msg['PV1']['PV1.3']['PV1.3.1'] = 'SMH';var crRetLnFeed = "\r\n";
// Backslash r backslash n.
channelMap.put('CRLF',  crRetLnFeed);var crRetLnFeed = "\r\n";
// Backslash r backslash n.
channelMap.put('CRLF',  crRetLnFeed);// Transformationen der HL7 Nachrichten f�r den reibungslosen Import ins MTG ORBIS (Maltesertr�gergesellschaft)

msg['MSH']['MSH.3']['MSH.3.1'] = 'Fremdbefund';
msg['MSH']['MSH.4']['MSH.4.1'] = 'UKB-Pathologie';
msg['MSH']['MSH.5']['MSH.5.1'] = 'ORBIS';
msg['MSH']['MSH.6']['MSH.6.1'] = 'MKHBONN';


// F�hrende Nullen l�schen.
var strFallnummer = msg['PV1']['PV1.19']['PV1.19.1'].toString();

msg['PV1']['PV1.19']['PV1.19.1'] = strFallnummer.replace(/^0+/, '');


// ORC Anpassungen auf Wunsch von Maltesern.
// ORC-3 soll die Malteser Auftragsnummer enthalten. Anfoderung von Socura, Frau Anke Holland.
var strAuftragsnummerMKH		= msg['ORC']['ORC.2']['ORC.2.1'].toString();
msg['ORC']['ORC.3']['ORC.3.1'] = strAuftragsnummerMKH;


// Hilfvariablen f�r OBR und OBX Anpassungen:
var strAuftragsIdPP 	     = msg['OBR']['OBR.2']['OBR.2.1'].toString();		// �nderung, PK, 30.08.2017. 
var strAuftragsnummerPP 	     = msg['OBR']['OBR.3']['OBR.3.1'].toString();		// �nderung, PK, 30.08.2017. 

// Folgende Anpassungen sollen dem Befund vorangestellt werden:
// (1) Auftragsnummer: T 2014000025-01\.br\
// (2) Befunddatum vom: 06.10.2014\.br\

var strAuftrNrPPspez = strAuftragsnummerPP.substring(0,2) + ' ' + strAuftragsnummerPP.substring(6, 12).replace(/^[0\.]+/, "") + '/' + strAuftragsnummerPP.substring(4, 6);



var strBefunddatumPP		= msg['OBR']['OBR.8']['OBR.8.1'].toString();
var strBefunddatumPPConv 	= DateUtil.convertDate('yyyyMMddHHmmss', 'dd.MM.yyyy', strBefunddatumPP);

//logger.error(strBefunddatumPP + ' nachher ' + strBefunddatumPPConv);

// OBR Anpassung:
msg['OBR']['OBR.22']['OBR.22.1'] = strBefunddatumPP;

// OBX Anpassungen:

msg['OBX'][0]['OBX.5']['OBX.5.1'] = 'Auftragsnummer: '	+ 
							 strAuftragsnummerPP + ' (' + strAuftrNrPPspez + ')' + '\\.br\\' +
							 'Befunddatum vom: ' + strBefunddatumPPConv 	+ '\\.br\\' + 
							 'Institut f�r Pathologie: Uniklinik Bonn' 	+ '\\.br\\' +
							 msg['OBX'][0]['OBX.5']['OBX.5.1'].toString();
						 
// L�schen des PDF Segments (wird nicht vom MKH BONN ben�tigt).
delete msg['OBX'][1];// Transformationen der HL7 Nachrichten f�r den reibungslosen Import ins MTG ORBIS (Maltesertr�gergesellschaft)

msg['MSH']['MSH.3']['MSH.3.1'] = 'Fremdbefund';
msg['MSH']['MSH.4']['MSH.4.1'] = 'UKB-Pathologie';
msg['MSH']['MSH.5']['MSH.5.1'] = 'ORBIS';
msg['MSH']['MSH.6']['MSH.6.1'] = 'MKHBONN';


// F�hrende Nullen l�schen.
var strFallnummer = msg['PV1']['PV1.19']['PV1.19.1'].toString();

msg['PV1']['PV1.19']['PV1.19.1'] = strFallnummer.replace(/^0+/, '');


// ORC Anpassungen auf Wunsch von Maltesern.
// ORC-3 soll die Malteser Auftragsnummer enthalten. Anfoderung von Socura, Frau Anke Holland.
var strAuftragsnummerMKH		= msg['ORC']['ORC.2']['ORC.2.1'].toString();
msg['ORC']['ORC.3']['ORC.3.1'] = strAuftragsnummerMKH;


// Hilfvariablen f�r OBR und OBX Anpassungen:
var strAuftragsIdPP 	     = msg['OBR']['OBR.2']['OBR.2.1'].toString();		// �nderung, PK, 30.08.2017. 
var strAuftragsnummerPP 	     = msg['OBR']['OBR.3']['OBR.3.1'].toString();		// �nderung, PK, 30.08.2017. 

// Folgende Anpassungen sollen dem Befund vorangestellt werden:
// (1) Auftragsnummer: T 2014000025-01\.br\
// (2) Befunddatum vom: 06.10.2014\.br\

var strAuftrNrPPspez = strAuftragsnummerPP.substring(0,2) + ' ' + strAuftragsnummerPP.substring(6, 12).replace(/^[0\.]+/, "") + '/' + strAuftragsnummerPP.substring(4, 6);



var strBefunddatumPP		= msg['OBR']['OBR.8']['OBR.8.1'].toString();
var strBefunddatumPPConv 	= DateUtil.convertDate('yyyyMMddHHmmss', 'dd.MM.yyyy', strBefunddatumPP);

//logger.error(strBefunddatumPP + ' nachher ' + strBefunddatumPPConv);

// OBR Anpassung:
msg['OBR']['OBR.22']['OBR.22.1'] = strBefunddatumPP;

// OBX Anpassungen:

msg['OBX'][0]['OBX.5']['OBX.5.1'] = 'Auftragsnummer: '	+ 
							 strAuftragsnummerPP + ' (' + strAuftrNrPPspez + ')' + '\\.br\\' +
							 'Befunddatum vom: ' + strBefunddatumPPConv 	+ '\\.br\\' + 
							 'Institut f�r Pathologie: Uniklinik Bonn' 	+ '\\.br\\' +
							 msg['OBX'][0]['OBX.5']['OBX.5.1'].toString();
						 
// L�schen des PDF Segments (wird nicht vom MKH BONN ben�tigt).
delete msg['OBX'][1];var crRetLnFeed = "\r\n";
// Backslash r backslash n.
channelMap.put('CRLF',  crRetLnFeed);var crRetLnFeed = "\r\n";
// Backslash r backslash n.
channelMap.put('CRLF',  crRetLnFeed);var crRetLnFeed = "\r\n";
// Backslash r backslash n.
channelMap.put('CRLF',  crRetLnFeed);// IP
// Transform "Biobank Einsendung Anlegen" Patho Pro ORM Message into CentraXX ORM
// Author Jochen Kamuf
// Version: 1.8 05.05.2022
// Changelog: 1.2 -> 1.3 : Extract the Sample ID prefix Character instead of just assuming it is "E"
// Changelog: 1.3 -> 1.4 : Use regex instead of .slice to get the year and sample ID of 'OBX.15.1' -> .slice does not work with prefixes with different character count
// Changelog: 1.4 -> 1.5 : Leerzeichen "E " ist Platzhalter f�r zweiten buchstaben -> RegEx umge�ndert -> '|DM2020000443-00|' wird nicht mehr '|DM 20.443' sondern '|DM20.443'
// Changelog: 1.5 -> 1.6 : check if PV1.2 is I/O Inpatient or Outpatient ; Only Accept JOH outpatients in PV1.3 and add as Prefix to PID 
// Changelog: 1.6 -> 1.7 : check if PV1.2 is I/O Inpatient or Outpatient ; Only Accept JOH & MKH outpatients in PV1.3 and add as Prefix to PID / Fallnummer
// Changelog: 1.7 -> 1.8 : neue Kostenstellen-OE-Zuordnungs-SQL, SQL null-Wert�berpr�fung

if (msg['ORC']['ORC.5']['ORC.5.1'].toString() == 'IP') {

	// MSH segment can be copied
	tmp['MSH'] = msg['MSH'].copy();
	tmp['MSH']['MSH.9']['MSH.9.3'] = "ORM_O01";

	// PID segment can be copied -> remove leading zeros
	tmp['PID'] = msg['PID'].copy();
	tmp['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

	// PV1 segment can be copied -> remove leading zeros
	tmp['PV1'] = msg['PV1'].copy();
	tmp['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

	// check if internal or external Patient PV1.2 I/O
	
	if (tmp['PV1']['PV1.2']['PV1.2.1'].toString() === 'O') {
   
   		var tmp_assignedPatientLocation = tmp['PV1']['PV1.3']['PV1.3.1'].toString();
   		
    		if (tmp_assignedPatientLocation === 'JOH' || tmp_assignedPatientLocation === 'MKH') {

        		// Add samplePrefixCharacter to PID and Fallnummer
        		tmp['PID']['PID.3']['PID.3.1'] 	= tmp_assignedPatientLocation + '_' + tmp['PID']['PID.3']['PID.3.1'];
        		tmp['PV1']['PV1.19']['PV1.19.1'] 	= tmp_assignedPatientLocation + '_' + tmp['PV1']['PV1.19']['PV1.19.1'];
    		} else {

        		throw('Outpatient with unknown location only JOH/MKH allowed')	// sollte nicht vorkommen.
    		}
	}

	// the information that PathoPro seems to send
	var pathoProFachStationAmbulanzInfo = msg['ORC']['ORC.13']['ORC.13.1'].toString();

	// create rest of ORC Segment
	tmp['ORC']['ORC.1']['ORC.1.1'] = "RE";
	tmp['ORC']['ORC.5']['ORC.5.1'] = msg['ORC']['ORC.5']['ORC.5.1'].toString();
	tmp['ORC']['ORC.15']['ORC.15.1'] = msg['ORC']['ORC.15']['ORC.15.1'].toString();
	tmp['OBX'] = msg['OBX'].copy();
	var stringOBX15 = msg['OBX']['OBX.15']['OBX.15.1'].toString();
	tmp['OBX']['OBX.14']['OBX.14.1'] = msg['OBX']['OBX.7']['OBX.7.1'].toString();
	// change the sample ID to the physical barcode format that it can be scanned
	// 'E 2018005862-00' -> E leer Jahr2stellig Punkt Nummer_ohne_f�hrende_Null
	// <sampleID>OBX_15</sampleID>
	var samplePrefixCharacter = stringOBX15.match(/^([A-Z ]{2})/)[0];
	var pathoProSampleYearAndNumber = stringOBX15.match(/^[^\d]*(\d+)/)[1];
	var pathoProSampleYear = pathoProSampleYearAndNumber.match(/^\d{2}(\d{2})/)[1];
	var pathoProSampleNumber = pathoProSampleYearAndNumber.substring(4).replace(/^0+/, '');
	tmp['OBX']['OBX.15']['OBX.15.1'] = samplePrefixCharacter +  pathoProSampleYear + '.' + pathoProSampleNumber;

	// Abfrage der Kostenstellenname, Orbis.Fachabteilung, Orbis.Station/Ambulanz zu der Kostenstellennummer via Oracle sql abfrage
	var strKostenstelleNumber = msg['ORC']['ORC.12']['ORC.12.1'].toString();
	var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');
	//var dbConn = DatabaseConnectionFactory.createDatabaseConnection('com.mysql.jdbc.Driver', 'jdbc:mysql://127.0.0.1:3306/kostenstelle_to_fachstationambulanz', 'root', '$YCd1JrP6QquC+JERBeh');
	

	var sqlStr =	"SELECT " +
    			"RD.KSTNR, " +
			"RD.KSTBEZEICH KST_DESCRIPTION, " +
			"CASE WHEN RD.KS_OE_1_OETYP = 'Fachabteilung' THEN KS_OE_2_KURZ ELSE KS_OE_1_KURZ END AS AMBULANZ_STATION_KURZ, " +
			"CASE WHEN RD.KS_OE_1_OETYP = 'Fachabteilung' THEN KS_OE_2_NAME ELSE KS_OE_1_NAME END AS AMBULANZ_STATION_NAME, " +
			"CASE WHEN RD.KS_OE_1_OETYP = 'Fachabteilung' THEN KS_OE_1_KURZ ELSE SUBSTR(KS_OE_1_KURZ, 1,2) END AS FAB_KLINIK " +
			"FROM " +
			"( " +
			"SELECT " +
			"K.KSTNR, " +
			"K.KSTBEZEICH," +
			"OE_FA.OEBENEKURZ KS_OE_1_KURZ, " +
			"OE_FA.OEBENENAME KS_OE_1_NAME, " +
			"OE_STAT_AMB.OEBENEKURZ KS_OE_2_KURZ, " +
			"OE_STAT_AMB.OEBENENAME KS_OE_2_NAME, " +
			"ON_FA.ORGANAME KS_OE_1_OETYP, " +
			"ON_STAT_AMB.ORGANAME KS_OE_2_OETYP " +
			"FROM " +
			"KOSTENSTELLE K, " +
			"KST_ORG KO,  " +
			"ORGAEBENE OE_FA, " +
			"ORGAEBENE OE_STAT_AMB ," +
			"organame ON_FA, " +
			"organame ON_STAT_AMB " +
			"WHERE " +
			"1=1 " +
			"AND K.KSTNR_ID = KO.KSTNR_ID " +
			"AND KO.OEBENEID = OE_FA.OEBENEID(+) " +
			"AND OE_FA.ORGANAMEID = ON_FA.ORGANAMEID(+) " +
			"AND KO.OEBENEID_2 = OE_STAT_AMB.OEBENEID(+) " +
			"AND OE_STAT_AMB.ORGANAMEID = ON_STAT_AMB.ORGANAMEID(+) " +
			"AND SYSDATE >= K.GUELTIG_AB  AND (SYSDATE <= K.GUELTIG_BIS OR K.GUELTIG_BIS IS null) " +
			"AND SYSDATE >= KO.GUELTIG_AB AND (SYSDATE <= KO.GUELTIG_BIS OR KO.GUELTIG_BIS IS null) " +
 			"AND K.KSTNR = '" + strKostenstelleNumber + "' " +
			") RD ";  // Rohdaten

	// Ausgabe des SQL Statement zu Debug-Zewecken.
	//logger.error(sqlStr);
	//var results = dbConn.executeCachedQuery('SELECT DISTINCT FAB_KLINIK, AMBULANZ_STATION_KURZ, AMBULANZ_STATION_NAME, KST_DESCRIPTION FROM merged WHERE KST_NR=' + strKostenstelleNumber);
	var results         = dbConn.executeCachedQuery(sqlStr); // Koeppen Version
	var nextEnterersLocationStationAmbulanz = 'PATHOPRO_UNKNOWN';
	var nextEnterersLocationListStationAmbulanz = 'PATHOPRO_UNKNOWN';
	var enteredByFachabteilung = '';    // Fachabteilung
	var kostenstellenbeschreibung = '';
	var firstEntryInEnterersLocationListStationAmbulanz = true;
	
	// falls die Kostenstelle in Orbis existiert und eventuell ( mehreren ) Orbis.Fachabteilungen zugeordnet ist
	while (results.next()) {

		if(results.getString('KST_DESCRIPTION') != null) kostenstellenbeschreibung = results.getString('KST_DESCRIPTION');

    	// falls eine Kostenstelle ( mindestens )einer Orbis.Fachabteilung zugeordnet ist
    	if (results.getString('FAB_KLINIK')) {
     	   enteredByFachabteilung = results.getString('FAB_KLINIK');

	   var AMBULANZ_STATION_NAME  = '';
        if(results.getString('AMBULANZ_STATION_NAME') != null) AMBULANZ_STATION_NAME = results.getString('AMBULANZ_STATION_NAME');
        var AMBULANZ_STATION_KURZ = '';
        if(results.getString('AMBULANZ_STATION_KURZ') != null) AMBULANZ_STATION_KURZ = results.getString('AMBULANZ_STATION_KURZ');


		// falls AMBULANZ_STATION_KURZ Nummer schon im langen Namen steht verzichten wir auf AMBULANZ_STATION_KURZ
        	if (AMBULANZ_STATION_NAME.match(/^\d/)) {

            nextEnterersLocationStationAmbulanz = AMBULANZ_STATION_NAME; // '1151 Epileptologie'

        	} else {

            nextEnterersLocationStationAmbulanz = AMBULANZ_STATION_KURZ + " " + AMBULANZ_STATION_NAME; // '1901' + 'Station Zenker'
        	}

        	if (firstEntryInEnterersLocationListStationAmbulanz === true) { // beim ersten Eintrag in die Liste kein '; ' davor stellen

          	nextEnterersLocationListStationAmbulanz = nextEnterersLocationStationAmbulanz;
            	firstEntryInEnterersLocationListStationAmbulanz = false;

        	} else { // Folgeeintr�ge bekommen ein '; '

          	nextEnterersLocationListStationAmbulanz += '; ' + nextEnterersLocationStationAmbulanz;
        	}

        // falls die Kostenstelle existiert aber keiner Orbis.Fachabteilung zugeordnet ist
    } else if (kostenstellenbeschreibung) {

    		nextEnterersLocationListStationAmbulanz = "Kostenstelle keiner Orbis.Fachabteilung zugeordnet"
    }

	}

	// max allowed length 255 characters
	nextEnterersLocationListStationAmbulanz = nextEnterersLocationListStationAmbulanz.slice(0, 254);
	// An "&" Character in HL7 is a command Character -> ampersand replacement
	nextEnterersLocationListStationAmbulanz = nextEnterersLocationListStationAmbulanz.replace("&", "\\T\\");

	tmp['ORC']['ORC.10']['ORC.10.1'] = enteredByFachabteilung; // Aus Abfrage ermittelte Fachabteilung zur Kostenstelle wird CentraXX OE
	tmp['ORC']['ORC.13']['ORC.13.1'] = nextEnterersLocationListStationAmbulanz;   // Aus Abfrage ermittelte POC Liste zur Kostenstelle
	// create a comment segment
	createSegment(['NTE'], tmp);
	tmp['NTE']['NTE.1']['NTE.1.1'] = 1;
	var tmpNTE3 = "Kostenstelle: " + strKostenstelleNumber + " " + kostenstellenbeschreibung + ";  PathoProInfo: " + pathoProFachStationAmbulanzInfo;
	tmpNTE3 = tmpNTE3.replace("&", "\\T\\"); // An "&" Character in HL7 is a command Character -> ampersand replacement
	tmp['NTE']['NTE.3'] = tmpNTE3;
}// IP
// Transform "Biobank Einsendung Anlegen" Patho Pro ORM Message into CentraXX ORM
// Author Jochen Kamuf
// Version: 1.8 05.05.2022
// Changelog: 1.2 -> 1.3 : Extract the Sample ID prefix Character instead of just assuming it is "E"
// Changelog: 1.3 -> 1.4 : Use regex instead of .slice to get the year and sample ID of 'OBX.15.1' -> .slice does not work with prefixes with different character count
// Changelog: 1.4 -> 1.5 : Leerzeichen "E " ist Platzhalter f�r zweiten buchstaben -> RegEx umge�ndert -> '|DM2020000443-00|' wird nicht mehr '|DM 20.443' sondern '|DM20.443'
// Changelog: 1.5 -> 1.6 : check if PV1.2 is I/O Inpatient or Outpatient ; Only Accept JOH outpatients in PV1.3 and add as Prefix to PID / Fallnummer
// Changelog: 1.6 -> 1.7 : check if PV1.2 is I/O Inpatient or Outpatient ; Only Accept JOH & MKH outpatients in PV1.3 and add as Prefix to PID / Fallnummer
// Changelog: 1.7 -> 1.8 : neue Kostenstellen-OE-Zuordnungs-SQL, SQL null-Wert�berpr�fung

if (msg['ORC']['ORC.5']['ORC.5.1'].toString() == 'IP') {

	// MSH segment can be copied
	tmp['MSH'] = msg['MSH'].copy();
	tmp['MSH']['MSH.9']['MSH.9.3'] = "ORM_O01";

	// PID segment can be copied -> remove leading zeros
	tmp['PID'] = msg['PID'].copy();
	tmp['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

	// PV1 segment can be copied -> remove leading zeros
	tmp['PV1'] = msg['PV1'].copy();
	tmp['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

	// check if internal or external Patient PV1.2 I/O
	
	if (tmp['PV1']['PV1.2']['PV1.2.1'].toString() === 'O') {
   
   		var tmp_assignedPatientLocation = tmp['PV1']['PV1.3']['PV1.3.1'].toString();
   		
    		if (tmp_assignedPatientLocation === 'JOH' || tmp_assignedPatientLocation === 'MKH') {

        		// Add samplePrefixCharacter to PID and Fallnummer
        		tmp['PID']['PID.3']['PID.3.1'] 	= tmp_assignedPatientLocation + '_' + tmp['PID']['PID.3']['PID.3.1'];
        		tmp['PV1']['PV1.19']['PV1.19.1'] 	= tmp_assignedPatientLocation + '_' + tmp['PV1']['PV1.19']['PV1.19.1'];
    		} else {

        		throw('Outpatient with unknown location only JOH/MKH allowed')	// sollte nicht vorkommen.
    		}
	}

	// the information that PathoPro seems to send
	var pathoProFachStationAmbulanzInfo = msg['ORC']['ORC.13']['ORC.13.1'].toString();

	// create rest of ORC Segment
	tmp['ORC']['ORC.1']['ORC.1.1'] = "RE";
	tmp['ORC']['ORC.5']['ORC.5.1'] = msg['ORC']['ORC.5']['ORC.5.1'].toString();
	tmp['ORC']['ORC.15']['ORC.15.1'] = msg['ORC']['ORC.15']['ORC.15.1'].toString();
	tmp['OBX'] = msg['OBX'].copy();
	var stringOBX15 = msg['OBX']['OBX.15']['OBX.15.1'].toString();
	tmp['OBX']['OBX.14']['OBX.14.1'] = msg['OBX']['OBX.7']['OBX.7.1'].toString();
	// change the sample ID to the physical barcode format that it can be scanned
	// 'E 2018005862-00' -> E leer Jahr2stellig Punkt Nummer_ohne_f�hrende_Null
	// <sampleID>OBX_15</sampleID>
	var samplePrefixCharacter = stringOBX15.match(/^([A-Z ]{2})/)[0];
	var pathoProSampleYearAndNumber = stringOBX15.match(/^[^\d]*(\d+)/)[1];
	var pathoProSampleYear = pathoProSampleYearAndNumber.match(/^\d{2}(\d{2})/)[1];
	var pathoProSampleNumber = pathoProSampleYearAndNumber.substring(4).replace(/^0+/, '');
	tmp['OBX']['OBX.15']['OBX.15.1'] = samplePrefixCharacter +  pathoProSampleYear + '.' + pathoProSampleNumber;

	// Abfrage der Kostenstellenname, Orbis.Fachabteilung, Orbis.Station/Ambulanz zu der Kostenstellennummer via Oracle sql abfrage
	var strKostenstelleNumber = msg['ORC']['ORC.12']['ORC.12.1'].toString();
	var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');
	//var dbConn = DatabaseConnectionFactory.createDatabaseConnection('com.mysql.jdbc.Driver', 'jdbc:mysql://127.0.0.1:3306/kostenstelle_to_fachstationambulanz', 'root', '$YCd1JrP6QquC+JERBeh');
	
	var sqlStr =	"SELECT " +
    			"RD.KSTNR, " +
			"RD.KSTBEZEICH KST_DESCRIPTION, " +
			"CASE WHEN RD.KS_OE_1_OETYP = 'Fachabteilung' THEN KS_OE_2_KURZ ELSE KS_OE_1_KURZ END AS AMBULANZ_STATION_KURZ, " +
			"CASE WHEN RD.KS_OE_1_OETYP = 'Fachabteilung' THEN KS_OE_2_NAME ELSE KS_OE_1_NAME END AS AMBULANZ_STATION_NAME, " +
			"CASE WHEN RD.KS_OE_1_OETYP = 'Fachabteilung' THEN KS_OE_1_KURZ ELSE SUBSTR(KS_OE_1_KURZ, 1,2) END AS FAB_KLINIK " +
			"FROM " +
			"( " +
			"SELECT " +
			"K.KSTNR, " +
			"K.KSTBEZEICH," +
			"OE_FA.OEBENEKURZ KS_OE_1_KURZ, " +
			"OE_FA.OEBENENAME KS_OE_1_NAME, " +
			"OE_STAT_AMB.OEBENEKURZ KS_OE_2_KURZ, " +
			"OE_STAT_AMB.OEBENENAME KS_OE_2_NAME, " +
			"ON_FA.ORGANAME KS_OE_1_OETYP, " +
			"ON_STAT_AMB.ORGANAME KS_OE_2_OETYP " +
			"FROM " +
			"KOSTENSTELLE K, " +
			"KST_ORG KO,  " +
			"ORGAEBENE OE_FA, " +
			"ORGAEBENE OE_STAT_AMB ," +
			"organame ON_FA, " +
			"organame ON_STAT_AMB " +
			"WHERE " +
			"1=1 " +
			"AND K.KSTNR_ID = KO.KSTNR_ID " +
			"AND KO.OEBENEID = OE_FA.OEBENEID(+) " +
			"AND OE_FA.ORGANAMEID = ON_FA.ORGANAMEID(+) " +
			"AND KO.OEBENEID_2 = OE_STAT_AMB.OEBENEID(+) " +
			"AND OE_STAT_AMB.ORGANAMEID = ON_STAT_AMB.ORGANAMEID(+) " +
			"AND SYSDATE >= K.GUELTIG_AB  AND (SYSDATE <= K.GUELTIG_BIS OR K.GUELTIG_BIS IS null) " +
			"AND SYSDATE >= KO.GUELTIG_AB AND (SYSDATE <= KO.GUELTIG_BIS OR KO.GUELTIG_BIS IS null) " +
 			"AND K.KSTNR = '" + strKostenstelleNumber + "' " +
			") RD ";  // Rohdaten
   

	// Ausgabe des SQL Statement zu Debug-Zewecken.
	//logger.error(sqlStr);
	//var results = dbConn.executeCachedQuery('SELECT DISTINCT FAB_KLINIK, AMBULANZ_STATION_KURZ, AMBULANZ_STATION_NAME, KST_DESCRIPTION FROM merged WHERE KST_NR=' + strKostenstelleNumber);
	var results         = dbConn.executeCachedQuery(sqlStr); // Koeppen Version
	var nextEnterersLocationStationAmbulanz = 'PATHOPRO_UNKNOWN';
	var nextEnterersLocationListStationAmbulanz = 'PATHOPRO_UNKNOWN';
	var enteredByFachabteilung = '';    // Fachabteilung
	var kostenstellenbeschreibung = '';
	var firstEntryInEnterersLocationListStationAmbulanz = true;
	
	// falls die Kostenstelle in Orbis existiert und eventuell ( mehreren ) Orbis.Fachabteilungen zugeordnet ist
	while (results.next()) {

    		if(results.getString('KST_DESCRIPTION') != null) kostenstellenbeschreibung = results.getString('KST_DESCRIPTION');


    	// falls eine Kostenstelle ( mindestens )einer Orbis.Fachabteilung zugeordnet ist
    	if (results.getString('FAB_KLINIK')) {
     	   enteredByFachabteilung = results.getString('FAB_KLINIK');

		   var AMBULANZ_STATION_NAME  = '';
        	   if(results.getString('AMBULANZ_STATION_NAME') != null) AMBULANZ_STATION_NAME = results.getString('AMBULANZ_STATION_NAME');
             var AMBULANZ_STATION_KURZ = '';
             if(results.getString('AMBULANZ_STATION_KURZ') != null) AMBULANZ_STATION_KURZ = results.getString('AMBULANZ_STATION_KURZ');

		// falls AMBULANZ_STATION_KURZ Nummer schon im langen Namen steht verzichten wir auf AMBULANZ_STATION_KURZ
        	if (AMBULANZ_STATION_NAME.match(/^\d/)) {

            nextEnterersLocationStationAmbulanz = AMBULANZ_STATION_NAME; // '1151 Epileptologie'

        	} else {

            nextEnterersLocationStationAmbulanz = AMBULANZ_STATION_KURZ + " " + AMBULANZ_STATION_NAME; // '1901' + 'Station Zenker'
        	}

        	if (firstEntryInEnterersLocationListStationAmbulanz === true) { // beim ersten Eintrag in die Liste kein '; ' davor stellen

          	nextEnterersLocationListStationAmbulanz = nextEnterersLocationStationAmbulanz;
            	firstEntryInEnterersLocationListStationAmbulanz = false;

        	} else { // Folgeeintr�ge bekommen ein '; '

          	nextEnterersLocationListStationAmbulanz += '; ' + nextEnterersLocationStationAmbulanz;
        	}

        // falls die Kostenstelle existiert aber keiner Orbis.Fachabteilung zugeordnet ist
    } else if (kostenstellenbeschreibung) {

    		nextEnterersLocationListStationAmbulanz = "Kostenstelle keiner Orbis.Fachabteilung zugeordnet"
    }

	}

	// max allowed length 255 characters
	nextEnterersLocationListStationAmbulanz = nextEnterersLocationListStationAmbulanz.slice(0, 254);
	// An "&" Character in HL7 is a command Character -> ampersand replacement
	nextEnterersLocationListStationAmbulanz = nextEnterersLocationListStationAmbulanz.replace("&", "\\T\\");

	tmp['ORC']['ORC.10']['ORC.10.1'] = enteredByFachabteilung; // Aus Abfrage ermittelte Fachabteilung zur Kostenstelle wird CentraXX OE
	tmp['ORC']['ORC.13']['ORC.13.1'] = nextEnterersLocationListStationAmbulanz;   // Aus Abfrage ermittelte POC Liste zur Kostenstelle
	// create a comment segment
	createSegment(['NTE'], tmp);
	tmp['NTE']['NTE.1']['NTE.1.1'] = 1;
	var tmpNTE3 = "Kostenstelle: " + strKostenstelleNumber + " " + kostenstellenbeschreibung + ";  PathoProInfo: " + pathoProFachStationAmbulanzInfo;
	tmpNTE3 = tmpNTE3.replace("&", "\\T\\"); // An "&" Character in HL7 is a command Character -> ampersand replacement
	tmp['NTE']['NTE.3'] = tmpNTE3;
}// MSH

// HL7 Version setzen, damit die MIRTH3 Fehlermeldungen stoppen.
// Sehr geehrter Herr K�ppen,
// der Fehler deutet darauf hin, dass beim Channel cPathoProStMOruInStMClOut die HL7-Versionsnummer in MSH-12 fehlt.
// Bitte versuchen Sie entweder im Transformer die HL7-Version einzutragen oder veranlassen Sie das sendende System, diese mit zu senden.
// Mit freundlichen Gr��en
// Andreas Korte
// 27.01.2015.

msg['MSH']['MSH.3']['MSH.3.1']   = 'Textbefund';
msg['MSH']['MSH.12']['MSH.12.1'] = '2.3';

// PID

// Fuehrende Nullen wegnehmen von PID Nummer
// (2) PID.3 -> f�hrende Null wegnehmen = letzte 8 Stellen der PID nehmen, 01234567 ist eine
// zul�ssige PID, hier darf die erste Null nicht weggenommen werden.
msg['PID']['PID.3']['PID.3.1']  = Number(msg['PID']['PID.3']['PID.3.1'].toString());
msg['PID']['PID.2']['PID.2.1']  = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// PV1
// (1) PV1.19 -> f�hrende Null wegnehmen.
// http://stackoverflow.com/questions/6676488/remove-leading-zeros-from-a-number-in-javascript
msg['PV1']['PV1.2']['PV1.2.1']	 = '';
msg['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

// ORC

// # vor ORC-3 setzen (Pr�fix)
var strPrefix  = '#';
var strPostfix = 'A';
msg['ORC']['ORC.3']['ORC.3.1']	=  strPrefix + msg['ORC']['ORC.3']['ORC.3.1'].toString() + strPostfix;

// OBR

// Analog zu Egate Vorlage: Im OBR41 steht der Text "Dermatohistopathologischer Befund"
msg['OBR']['OBR.4']['OBR.4.1']  = msg['OBR']['OBR.4']['OBR.4.2'].toString();
msg['OBR']['OBR.4']['OBR.4.2']  = '';  // l�schen.

// OBR-8 zus�tzlich in OBR-22 kopieren
msg['OBR']['OBR.22']['OBR.22.1'] = msg['OBR']['OBR.8']['OBR.8.1'].toString();

// OBX

msg['OBX'][0]['OBX.1']['OBX.1.1'] = '1'; 	// OBX-1 mit "1" f�llen
msg['OBX'][0]['OBX.2']['OBX.2.1'] = 'FT';	// OBX-2 mit "FT" f�llen
// OBX-3 l�schen ???
msg['OBX'][0]['OBX.3'] = '';

// Textbaustein dem OBX-5 voranstellen + OBX-5 Text ab Marker "Diagnose:"
var strTextbaustein = "\\X5C\\m8Der komplette Befund ist als eingelesenes PDF-Dokument einsehbar und nur in seiner Gesamtheit g�ltig.\\N\\\\.br\\\\H\\Die Beurteilung lautet:\\N\\";
var strOBX5BefText 	= msg['OBX'][0]['OBX.5']['OBX.5.1'].toString();
var n				= strOBX5BefText.lastIndexOf("Diagnose:");	// stelle an der der Textmarker "Diagnose:" steht.

if (n >= 0) {	// wenn ein Textmarker "Diagnose:" gefunden wurde, 
				// dann nehme die Extraktion vor, 
				// sonst zeige im Zweifelsfall den kompletten Befund an.

	var strDiagnose		= strOBX5BefText.substring(n + 9 );
	msg['OBX'][0]['OBX.5']['OBX.5.1'] = strTextbaustein + strDiagnose;

};


// OBX[1] d.h. zweites OBX Segment l�schen.
delete msg['OBX'][1];

// NTE Segment einfuegen. | bringt hier nichts. PK, 30.08.2017
// createSegment('NTE', msg);
// msg['NTE']['NTE.1']['NTE.1.1'] = '1';
// msg['NTE']['NTE.2']['NTE.2.1'] = '0';
// msg['NTE']['NTE.3']['NTE.3.1'] = 'Der komplette Befund ist als eingelesenes PDF-Dokument einsehbar und nur in seiner Gesamtheit g�ltig.';// Ziel ist es aus der ORU Nachricht mit dem OBX[1] (zweites OBX Segment) 
// eine MDM Nachricht zu erzeugen, die erfolgreich von ORBIS/JAIF verarbeitet
// werden kann.

// Beispiel-(Ziel-)Nachricht:
/*
MSH|^~\&|PAT|PAT|ORBIS|JAIF|||MDM^T01|0288740||2.5
EVN|T01|20150715155200|20150715110300 EVN-2 = OBR-8 EVN-3 = OBR-7
PID||0|6129361|||Telohe^Karin||19560925|
PV1||I|||||||||||||||||9167020|
TXA|1|Pathologiebefund|PDF|||||20150715155200||||0288740^PATHOPRO||||DM2015001585.pdf| 
TXA.8 = OBR-8 , TXA.12.1 = ORC.2 (besser), TXA.16 = OBX[1].5.1
*/

// MSH

tmp['MSH']['MSH.7']['MSH.7.1']		= msg['MSH']['MSH.7']['MSH.7.1'].toString();
tmp['MSH']['MSH.10']['MSH.10.1'] 	= msg['MSH']['MSH.10']['MSH.10.1'].toString();

// EVN

tmp['EVN']['EVN.2']['EVN.2.1']		= msg['OBR']['OBR.8']['OBR.8.1'].toString();
tmp['EVN']['EVN.3']['EVN.3.1']		= msg['OBR']['OBR.7']['OBR.7.1'].toString();

// PID

tmp['PID']['PID.1']['PID.1.1'] 		= '1';

tmp['PID']['PID.3']['PID.3.1']		= msg['PID']['PID.3']['PID.3.1'].toString();
tmp['PID']['PID.6']['PID.6.1']		= msg['PID']['PID.6']['PID.6.1'].toString();
tmp['PID']['PID.6']['PID.6.2']		= msg['PID']['PID.6']['PID.6.2'].toString();

// Fuehrende Nullen wegnehmen von PID Nummer
// (2) PID.3 -> f�hrende Null wegnehmen = letzte 8 Stellen der PID nehmen, 01234567 ist eine
// zul�ssige PID, hier darf die erste Null nicht weggenommen werden.
tmp['PID']['PID.2']['PID.2.1']	= Number(msg['PID']['PID.3']['PID.3.1'].toString());
tmp['PID']['PID.3']['PID.3.1']  	= Number(msg['PID']['PID.3']['PID.3.1'].toString());

// PV1
var strPPFallnr 	= msg['PV1']['PV1.19']['PV1.19.1'].toString();
var strOrbisFallnr 	= Number(strPPFallnr);	// Korrektur am 02.06.2021, wegen 8-stelligen Fallnummernkreis
tmp['PV1']['PV1.19']['PV1.19.1']	= strOrbisFallnr;

// TXA

tmp['TXA']['TXA.8']['TXA.8.1']	= msg['OBR']['OBR.8']['OBR.8.1'].toString();
tmp['TXA']['TXA.12']['TXA.12.1']	= msg['ORC']['ORC.2']['ORC.2.1'].toString();
tmp['TXA']['TXA.12']['TXA.12.2']	= 'PATHOPRO';

// Einbindung der Dokumentennummer aus PathoPro, z.B. E 2015017819-01.
// Zusammenstellen der Befundnummer, so wie sie in den PDF Befunden von PathoPro
// aufgef�hrt sind. Diese Befundnummer wird im Fehlerfalle per Mail an die
// Pathologie gesendet, so dass dort eine schnelle Identifikation des Befunds
// erfolgen kann.
	var strHL7Befundnummer = msg['ORC']['ORC.3']['ORC.3.1'].toString();
	// logger.error(strHL7Befundnummer);
	var strPraefix  = strHL7Befundnummer.slice(0,2);
	var strJahr     = strHL7Befundnummer.slice(4,6);
	var strBefNr    = strHL7Befundnummer.slice(6,12);
	var strPDFBefNr = strPraefix + Number(strBefNr) + '/' + strJahr;

tmp['TXA']['TXA.13']['TXA.13.1']    = strPDFBefNr;

// Voranstellen des ftp Pfades:
// var strFTPPfad = 'ftp://eGate:7PUf3fzCzInNU4tY@10.100.171.189/outgoing/PDF/' + msg['OBX'][1]['OBX.5']['OBX.5.1'].toString();
var strUncPfad = '//ukb1106.klinik.bn/PDF_Export/' + msg['OBX'][1]['OBX.5']['OBX.5.1'].toString();

tmp['TXA']['TXA.16']['TXA.16.1'] = strUncPfad;// 

msg['MSH']['MSH.3']['MSH.3.1'] = 'Fremdbefund';
msg['MSH']['MSH.4']['MSH.4.1'] = 'UKB-Pathologie';
msg['MSH']['MSH.5']['MSH.5.1'] = 'ORBIS';
msg['MSH']['MSH.6']['MSH.6.1'] = 'BON';

// Kopieren des OBR.8.1 (Befunderstellungsdatum) in das OBR.22.1 
// auf Wunsch von Herrn Segeth (GFO)
// Hallo Herr K�ppen,
// mir ist gerade noch etwas bez�glich dem Befund aufgefallen.
// Wir lesen das Befunderstelldatum im Feld OBR#22 aus, k�nne Sie dieses noch einpflegen?
// Mit freundlichen Gr��en
// Robert Segeth

// F�hrende Nullen l�schen.
var strFallnummer = msg['PV1']['PV1.19']['PV1.19.1'].toString();

msg['PV1']['PV1.19']['PV1.19.1'] = strFallnummer.replace(/^0+/, '');


// Hilfvariablen f�r OBR und OBX Anpassungen:

var strAuftragsnummerPP 	= msg['OBR']['OBR.2']['OBR.2.1'].toString();
var strBefunddatumPP		= msg['OBR']['OBR.8']['OBR.8.1'].toString();
var strBefunddatumPPConv 	= DateUtil.convertDate('yyyyMMddHHmmss', 'dd.MM.yyyy', strBefunddatumPP);

// OBR Anpassung:
msg['OBR']['OBR.22']['OBR.22.1'] = strBefunddatumPP;
// OBX Anpassungen:
// Folgende Anpassungen sollen dem Befund vorangestellt werden:
// (1) Auftragsnummer: T 2014000025-01\.br\
// (2) Befunddatum vom: 06.10.2014\.br\


msg['OBX'][0]['OBX.5']['OBX.5.1'] = 'Auftragsnummer: '	+ 
									strAuftragsnummerPP + '\\.br\\' + 
									'Befunddatum vom: ' + strBefunddatumPPConv 	+ '\\.br\\' + 
									'Institut f�r Pathologie: Uniklinik Bonn' 	+ '\\.br\\' +
									msg['OBX'][0]['OBX.5']['OBX.5.1'].toString();
// L�schen des PDF Segments (wird nicht vom St. Marienhospital ben�tigt).
delete msg['OBX'][1];// Ggf. noch pruefen, ob PID aktuell ist!

// Aktuelle Fallnummer ermitteln
var strPID = Number(msg['PID']['PID.3']['PID.3.1'].toString());
var strSql = "SELECT " +
		   "SUB.FALLNR " +
		   "FROM " +
		   "( " +
		   "SELECT NAT.PID, F.AUFNDAT, F.FALLNR, F.STORNO_DATUM FROM FALL F, NATPERSON NAT " +
		   "WHERE " +
		   "F.PERSNR = NAT.PERSNR AND " +
		   "F.STORNO_DATUM is NULL AND " +
		   "NAT.PID = '" + strPID + "'" +
		   "ORDER BY 2 DESC " +
		   ") SUB " +
		   "WHERE rownum = 1 ";

// wenn resultsize = 0, dann gibt es keinen aktuellen Fall

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');
var result = dbConn.executeCachedQuery(strSql);
var resultSize = result.size(); // logger.error(resultSize);

if (resultSize >0 ) {		// Storno zur Fallnummer gefunden...

		result.next();		// springe in die erste Zeile der Treffenmenge
		var strAktuelleFALLNR = result.getString(1);
		channelMap.put('vAktuelleFallnummer', strAktuelleFALLNR);
} 

dbConn.close();// Aus datenschutzerw�gungen werden nur die relevanten HL7 Nachrichtensegmente
// MSH
// EVN
// PID
// PV1 (lediglich Fallnummer und Einsender OE)
// an das PathoPro System weitergeleitet.

// Zus�tzlich wird im PV1.3.1 ein fest hinterlegter Einweiser "SMH" (f�r St. Marienhospital) hinterlegt.

tmp['MSH'] = msg['MSH'].copy();
tmp['EVN'] = msg['EVN'].copy();
tmp['PID'] = msg['PID'].copy();

// PV1
tmp['PV1']['PV1.3']['PV1.3.1'] = 'SMH';
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString();// 

msg['MSH']['MSH.3']['MSH.3.1'] = 'Fremdbefund';
msg['MSH']['MSH.4']['MSH.4.1'] = 'UKB-Pathologie';
msg['MSH']['MSH.5']['MSH.5.1'] = 'ORBIS';
msg['MSH']['MSH.6']['MSH.6.1'] = 'BON';

// Kopieren des OBR.8.1 (Befunderstellungsdatum) in das OBR.22.1 
// auf Wunsch von Herrn Segeth (GFO)
// Hallo Herr K�ppen,
// mir ist gerade noch etwas bez�glich dem Befund aufgefallen.
// Wir lesen das Befunderstelldatum im Feld OBR#22 aus, k�nne Sie dieses noch einpflegen?
// Mit freundlichen Gr��en
// Robert Segeth

// F�hrende Nullen l�schen.
var strFallnummer = msg['PV1']['PV1.19']['PV1.19.1'].toString();

msg['PV1']['PV1.19']['PV1.19.1'] = strFallnummer.replace(/^0+/, '');


// Hilfvariablen f�r OBR und OBX Anpassungen:

var strAuftragsnummerPP 	= msg['OBR']['OBR.2']['OBR.2.1'].toString();
var strBefunddatumPP		= msg['OBR']['OBR.8']['OBR.8.1'].toString();
var strBefunddatumPPConv 	= DateUtil.convertDate('yyyyMMDDHHmmss', 'DD.MM.yyyy', strBefunddatumPP);

// OBR Anpassung:
msg['OBR']['OBR.22']['OBR.22.1'] = strBefunddatumPP;
// OBX Anpassungen:
// Folgende Anpassungen sollen dem Befund vorangestellt werden:
// (1) Auftragsnummer: T 2014000025-01\.br\
// (2) Befunddatum vom: 06.10.2014\.br\


msg['OBX'][0]['OBX.5']['OBX.5.1'] = 'Auftragsnummer: '	+ 
									strAuftragsnummerPP + '\\.br\\' + 
									'Befunddatum vom: ' + strBefunddatumPPConv 	+ '\\.br\\' + 
									'Institut f�r Pathologie: Uniklinik Bonn' 	+ '\\.br\\' +
									msg['OBX'][0]['OBX.5']['OBX.5.1'].toString();
// L�schen des PDF Segments (wird nicht vom St. Marienhospital ben�tigt).
delete msg['OBX'][1];// Durch die Segmente iterieren und die OBX l�schen, damit die base64 kodierte Information gel�scht wird.

for each (seg in msg.children()) {
	
	if (seg.name().toString() == "OBX") {  
		
		delete (msg.children()[seg.childIndex()]);
	}
	
}// Das Subsystem XPER liefert als Befunderstellzeitpunkt nur ein Datum ohne Zeitangabe.
// Da ORBIS ein Zeistempel ben�tigt wird die Zeit 00:00:00 angeh�ngt.

var strTXA61 = msg['TXA']['TXA.6']['TXA.6.1'].toString();
var strTXA81 = DateUtil.convertDate('yyyyMMdd', 'yyyyMMdd000000', strTXA61);
tmp['TXA']['TXA.8']['TXA.8.1'] = strTXA81;// Anpassungen im MSH Segment
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['hl7datetime'].toString();	// Zeitpunkt der Nachrichten�bermittlung.
var uuid = UUIDGenerator.getUUID();	// Eindeutige Nachrichten ID generieren.
tmp['MSH']['MSH.10']['MSH.10.1'] = uuid;

// EVN Segment
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['hl7datetime'].toString();
tmp['EVN']['EVN.3']['EVN.3.1'] = msg['hl7datetime'].toString();

// Anpassungen im PID Segment
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString(); // Familiy Name (Nachname)
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString(); // Given Name (Vorname)

// Anpassungen im PV1 Segment

// Aufenthaltsstatus wichtig? I, O amb., station�r?
tmp['PV1']['PV1.2']['PV1.2.1'] = 'I';
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['case_id'].toString();	// FALLNR


// TXA Segment

// TXA.2 Dokumententyp. Ge�ndert 16.01.2015, PK
// Besonderheit bei den Sozialdienst Anforderungen und Befunden.
// Um eine inhatliche Unterscheidung darzustellen muss hierbei
// die Zustanzinformation "Allgemeiner Befund" oder "Allgemeine Anfoderung"
// hierzugef�gt werden.

if (msg['dokinfo'].toString() == 'Sozialdienst') {

		tmp['TXA']['TXA.2']['TXA.2.1'] = msg['containerclassname'].toString() + ' ' + msg['dokinfo'].toString();

} else {

		tmp['TXA']['TXA.2']['TXA.2.1'] = msg['dokinfo'].toString();
}

// TXA.3.1 Extension-Hinweis (Mimetyp) z.B. PDF, TIFF, JPEG, etc...
var mimetype = msg['mimetype'].toString();	// wird noch weiter untergebraucht.

tmp['TXA']['TXA.3']['TXA.3.1'] = mimetype;
channelMap.put('Mimetype zum Dokument',mimetype);

// TXA.4 Activity Date/Time
tmp['TXA']['TXA.4']['TXA.4.1'] = msg['hl7datetimedokudatum'].toString();

// TXA.6 Origination Date/Time
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['hl7datetimecreationdate'].toString();

// TXA.8 Edit Date/Time = changedate
//tmp['TXA']['TXA.8']['TXA.8.1'] = datestring1;

// TXA.12 Unique Document Number TXA.12.1 Entity Identifier = objectid
// Quelle PHYD Tabelle "DC_DYN_BASEPATIENTDOCCLASS", Spalte "OBJECTID".
// i.A. mit Hr. Dr. Jungck, 27.05.2014.
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['objectid'].toString();

// TXA.12.2 Namespace ID
tmp['TXA']['TXA.12']['TXA.12.2'] = 'DokumentenID';

// TXA.14.1 Place Order Number = Auftragsnummer (z.B. EDOK-2014-12345678)
tmp['TXA']['TXA.14']['TXA.14.1'] = msg['auftragsnummer'].toString();

// TXA.16, Unique Document File Name = Dokumentenname (auf dem PHYD Volume (F:\ Laufwerk).
tmp['TXA']['TXA.16']['TXA.16.1'] = msg['filename'].toString();		


// Anpassungen im OBX Segment

// OBX.3 Observation Idenfifier = ORBIS DokumentenID
tmp['OBX']['OBX.3']['OBX.3.1'] = msg['orbisdokumentenid'].toString();

// OSM Version: 
var atts=getAttachments();

if(!getAttachments().isEmpty()) {
	tmp['OBX']['OBX.5']['OBX.5.1'] = atts.get(0).getAttachmentId();
} else {
	logger.error("Kein Attachment gefunden");
}	

sleep(1000);// Anpassungen im MSH Segment
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['hl7datetime'].toString();	// Zeitpunkt der Nachrichten�bermittlung.
var uuid = UUIDGenerator.getUUID();	// Eindeutige Nachrichten ID generieren.
tmp['MSH']['MSH.10']['MSH.10.1'] = uuid;

// EVN Segment
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['hl7datetime'].toString();
tmp['EVN']['EVN.3']['EVN.3.1'] = msg['hl7datetime'].toString();

// Anpassungen im PID Segment
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString(); // Familiy Name (Nachname)
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString(); // Given Name (Vorname)

// Anpassungen im PV1 Segment

// Aufenthaltsstatus wichtig? I, O amb., station�r?
tmp['PV1']['PV1.2']['PV1.2.1'] = 'I';
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['case_id'].toString();	// FALLNR


// TXA Segment
//tmp['TXA']['TXA.2']['TXA.2.1'] = msg['containerclassname'].toString();	// TXA.2 Dokumententyp.
tmp['TXA']['TXA.2']['TXA.2.1'] = msg['dokinfo'].toString()
// TXA.2 Dokumententyp. Ge�ndert 16.01.2015, PK

// TXA.3.1 Extension-Hinweis (Mimetyp) z.B. PDF, TIFF, JPEG, etc...
var mimetype = msg['mimetype'].toString();	// wird noch weiter untergebraucht.

tmp['TXA']['TXA.3']['TXA.3.1'] = mimetype;
channelMap.put(mimetype,'Mimetype zum Dokument');

// TXA.4 Activity Date/Time
tmp['TXA']['TXA.4']['TXA.4.1'] = msg['hl7datetimedokudatum'].toString();

// TXA.6 Origination Date/Time
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['hl7datetimecreationdate'].toString();

// TXA.8 Edit Date/Time = changedate
//tmp['TXA']['TXA.8']['TXA.8.1'] = datestring1;

// TXA.12 Unique Document Number TXA.12.1 Entity Identifier = objectid
// Quelle PHYD Tabelle "DC_DYN_BASEPATIENTDOCCLASS", Spalte "OBJECTID".
// i.A. mit Hr. Dr. Jungck, 27.05.2014.
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['objectid'].toString();

// TXA.12.2 Namespace ID
tmp['TXA']['TXA.12']['TXA.12.2'] = 'DokumentenID';

// TXA.14.1 Place Order Number = Auftragsnummer (z.B. EDOK-2014-12345678)
tmp['TXA']['TXA.14']['TXA.14.1'] = msg['auftragsnummer'].toString();

// TXA.16, Unique Document File Name = Dokumentenname (auf dem PHYD Volume (F:\ Laufwerk).
tmp['TXA']['TXA.16']['TXA.16.1'] = msg['filename'].toString();		


// Anpassungen im OBX Segment

// OBX.3 Observation Idenfifier = ORBIS DokumentenID
tmp['OBX']['OBX.3']['OBX.3.1'] = msg['orbisdokumentenid'].toString();

// OSM Version: 
var atts=getAttachments();

if(!getAttachments().isEmpty()) {
	tmp['OBX']['OBX.5']['OBX.5.1'] = atts.get(0).getAttachmentId();
} else {
	logger.error("Kein Attachment gefunden");
}	

sleep(1000);// Anpassungen im MSH Segment
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['hl7datetime'].toString();	// Zeitpunkt der Nachrichten�bermittlung.
var uuid = UUIDGenerator.getUUID();	// Eindeutige Nachrichten ID generieren.
tmp['MSH']['MSH.10']['MSH.10.1'] = uuid;

// EVN Segment
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['hl7datetime'].toString();
tmp['EVN']['EVN.3']['EVN.3.1'] = msg['hl7datetime'].toString();

// Anpassungen im PID Segment
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString(); // Familiy Name (Nachname)
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString(); // Given Name (Vorname)

// Anpassungen im PV1 Segment

// Aufenthaltsstatus wichtig? I, O amb., station�r?
tmp['PV1']['PV1.2']['PV1.2.1'] = 'I';
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['case_id'].toString();	// FALLNR


// TXA Segment

// TXA.2 Dokumententyp. Ge�ndert 16.01.2015, PK
// Besonderheit bei den Sozialdienst Anforderungen und Befunden.
// Um eine inhatliche Unterscheidung darzustellen muss hierbei
// die Zustanzinformation "Allgemeiner Befund" oder "Allgemeine Anfoderung"
// hierzugef�gt werden.

if (msg['dokinfo'].toString() == 'Sozialdienst') {

		tmp['TXA']['TXA.2']['TXA.2.1'] = msg['containerclassname'].toString() + ' ' + msg['dokinfo'].toString();

} else {

		tmp['TXA']['TXA.2']['TXA.2.1'] = msg['dokinfo'].toString();
}

// TXA.3.1 Extension-Hinweis (Mimetyp) z.B. PDF, TIFF, JPEG, etc...
var mimetype = msg['mimetype'].toString();	// wird noch weiter untergebraucht.

tmp['TXA']['TXA.3']['TXA.3.1'] = mimetype;
channelMap.put(mimetype,'Mimetype zum Dokument');

// TXA.4 Activity Date/Time
tmp['TXA']['TXA.4']['TXA.4.1'] = msg['hl7datetimedokudatum'].toString();

// TXA.6 Origination Date/Time
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['hl7datetimecreationdate'].toString();

// TXA.8 Edit Date/Time = changedate
//tmp['TXA']['TXA.8']['TXA.8.1'] = datestring1;

// TXA.12 Unique Document Number TXA.12.1 Entity Identifier = objectid
// Quelle PHYD Tabelle "DC_DYN_BASEPATIENTDOCCLASS", Spalte "OBJECTID".
// i.A. mit Hr. Dr. Jungck, 27.05.2014.
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['objectid'].toString();

// TXA.12.2 Namespace ID
tmp['TXA']['TXA.12']['TXA.12.2'] = 'DokumentenID';

// TXA.14.1 Place Order Number = Auftragsnummer (z.B. EDOK-2014-12345678)
tmp['TXA']['TXA.14']['TXA.14.1'] = msg['auftragsnummer'].toString();

// TXA.16, Unique Document File Name = Dokumentenname (auf dem PHYD Volume (F:\ Laufwerk).
tmp['TXA']['TXA.16']['TXA.16.1'] = msg['filename'].toString();		


// Anpassungen im OBX Segment

// OBX.3 Observation Idenfifier = ORBIS DokumentenID
tmp['OBX']['OBX.3']['OBX.3.1'] = msg['orbisdokumentenid'].toString();

// OSM Version: 
var atts=getAttachments();

if(!getAttachments().isEmpty()) {
	tmp['OBX']['OBX.5']['OBX.5.1'] = atts.get(0).getAttachmentId();
} else {
	logger.warn("Kein Attachment gefunden");
}	

sleep(1000);// Anpassungen im MSH Segment
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['hl7datetime'].toString();	// Zeitpunkt der Nachrichten�bermittlung.
var uuid = UUIDGenerator.getUUID();	// Eindeutige Nachrichten ID generieren.
tmp['MSH']['MSH.10']['MSH.10.1'] = uuid;

// EVN Segment
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['hl7datetime'].toString();
tmp['EVN']['EVN.3']['EVN.3.1'] = msg['hl7datetime'].toString();

// Anpassungen im PID Segment
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString(); // Familiy Name (Nachname)
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString(); // Given Name (Vorname)

// Anpassungen im PV1 Segment

// Aufenthaltsstatus wichtig? I, O amb., station�r?
tmp['PV1']['PV1.2']['PV1.2.1'] = 'I';
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['case_id'].toString();	// FALLNR


// TXA Segment

// TXA.2 Dokumententyp. Ge�ndert 16.01.2015, PK
// Besonderheit bei den Sozialdienst Anforderungen und Befunden.
// Um eine inhatliche Unterscheidung darzustellen muss hierbei
// die Zustanzinformation "Allgemeiner Befund" oder "Allgemeine Anfoderung"
// hierzugef�gt werden.

if (msg['dokinfo'].toString() == 'Sozialdienst') {

		tmp['TXA']['TXA.2']['TXA.2.1'] = msg['containerclassname'].toString() + ' ' + msg['dokinfo'].toString();

} else {

		tmp['TXA']['TXA.2']['TXA.2.1'] = msg['dokinfo'].toString();
}

// TXA.3.1 Extension-Hinweis (Mimetyp) z.B. PDF, TIFF, JPEG, etc...
var mimetype = msg['mimetype'].toString();	// wird noch weiter untergebraucht.

tmp['TXA']['TXA.3']['TXA.3.1'] = mimetype;
channelMap.put(mimetype,'Mimetype zum Dokument');

// TXA.4 Activity Date/Time
tmp['TXA']['TXA.4']['TXA.4.1'] = msg['hl7datetimedokudatum'].toString();

// TXA.6 Origination Date/Time
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['hl7datetimecreationdate'].toString();

// TXA.8 Edit Date/Time = changedate
//tmp['TXA']['TXA.8']['TXA.8.1'] = datestring1;

// TXA.12 Unique Document Number TXA.12.1 Entity Identifier = objectid
// Quelle PHYD Tabelle "DC_DYN_BASEPATIENTDOCCLASS", Spalte "OBJECTID".
// i.A. mit Hr. Dr. Jungck, 27.05.2014.
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['objectid'].toString();

// TXA.12.2 Namespace ID
tmp['TXA']['TXA.12']['TXA.12.2'] = 'DokumentenID';

// TXA.14.1 Place Order Number = Auftragsnummer (z.B. EDOK-2014-12345678)
tmp['TXA']['TXA.14']['TXA.14.1'] = msg['auftragsnummer'].toString();

// TXA.16, Unique Document File Name = Dokumentenname (auf dem PHYD Volume (F:\ Laufwerk).
tmp['TXA']['TXA.16']['TXA.16.1'] = msg['filename'].toString();		


// Anpassungen im OBX Segment

// OBX.3 Observation Idenfifier = ORBIS DokumentenID
tmp['OBX']['OBX.3']['OBX.3.1'] = msg['orbisdokumentenid'].toString();

// OSM Version: 
var atts=getAttachments();

if(!getAttachments().isEmpty()) {
	tmp['OBX']['OBX.5']['OBX.5.1'] = atts.get(0).getAttachmentId();
} else {
	logger.error("Kein Attachment gefunden");
}	

sleep(1000);// Anpassungen im MSH Segment
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['hl7datetime'].toString();	// Zeitpunkt der Nachrichten�bermittlung.
var uuid = UUIDGenerator.getUUID();	// Eindeutige Nachrichten ID generieren.
tmp['MSH']['MSH.10']['MSH.10.1'] = uuid;

// EVN Segment
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['hl7datetime'].toString();
tmp['EVN']['EVN.3']['EVN.3.1'] = msg['hl7datetime'].toString();

// Anpassungen im PID Segment
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString(); // Familiy Name (Nachname)
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString(); // Given Name (Vorname)

// Anpassungen im PV1 Segment

// Aufenthaltsstatus wichtig? I, O amb., station�r?
tmp['PV1']['PV1.2']['PV1.2.1'] = 'I';
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['case_id'].toString();	// FALLNR


// TXA Segment

// TXA.2 Dokumententyp. Ge�ndert 16.01.2015, PK
// Besonderheit bei den Sozialdienst Anforderungen und Befunden.
// Um eine inhatliche Unterscheidung darzustellen muss hierbei
// die Zustanzinformation "Allgemeiner Befund" oder "Allgemeine Anfoderung"
// hierzugef�gt werden.

if (msg['dokinfo'].toString() == 'Sozialdienst') {

		tmp['TXA']['TXA.2']['TXA.2.1'] = msg['containerclassname'].toString() + ' ' + msg['dokinfo'].toString();

} else {

		tmp['TXA']['TXA.2']['TXA.2.1'] = msg['dokinfo'].toString();
}

// TXA.3.1 Extension-Hinweis (Mimetyp) z.B. PDF, TIFF, JPEG, etc...
var mimetype = msg['mimetype'].toString();	// wird noch weiter untergebraucht.

tmp['TXA']['TXA.3']['TXA.3.1'] = mimetype;
channelMap.put(mimetype,'Mimetype zum Dokument');

// TXA.4 Activity Date/Time
tmp['TXA']['TXA.4']['TXA.4.1'] = msg['hl7datetimedokudatum'].toString();

// TXA.6 Origination Date/Time
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['hl7datetimecreationdate'].toString();

// TXA.8 Edit Date/Time = changedate
//tmp['TXA']['TXA.8']['TXA.8.1'] = datestring1;

// TXA.12 Unique Document Number TXA.12.1 Entity Identifier = objectid
// Quelle PHYD Tabelle "DC_DYN_BASEPATIENTDOCCLASS", Spalte "OBJECTID".
// i.A. mit Hr. Dr. Jungck, 27.05.2014.
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['objectid'].toString();

// TXA.12.2 Namespace ID
tmp['TXA']['TXA.12']['TXA.12.2'] = 'DokumentenID';

// TXA.14.1 Place Order Number = Auftragsnummer (z.B. EDOK-2014-12345678)
tmp['TXA']['TXA.14']['TXA.14.1'] = msg['auftragsnummer'].toString();

// TXA.16, Unique Document File Name = Dokumentenname (auf dem PHYD Volume (F:\ Laufwerk).
tmp['TXA']['TXA.16']['TXA.16.1'] = msg['filename'].toString();		


// Anpassungen im OBX Segment

// OBX.3 Observation Idenfifier = ORBIS DokumentenID
tmp['OBX']['OBX.3']['OBX.3.1'] = msg['orbisdokumentenid'].toString();

// OSM Version: 
var atts=getAttachments();

if(!getAttachments().isEmpty()) {
	tmp['OBX']['OBX.5']['OBX.5.1'] = atts.get(0).getAttachmentId();
} else {
	logger.error("Kein Attachment gefunden");
}	

sleep(1000);// Anpassungen im MSH Segment
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['hl7datetime'].toString();	// Zeitpunkt der Nachrichten�bermittlung.
var uuid = UUIDGenerator.getUUID();	// Eindeutige Nachrichten ID generieren.
tmp['MSH']['MSH.10']['MSH.10.1'] = uuid;

// EVN Segment
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['hl7datetime'].toString();
tmp['EVN']['EVN.3']['EVN.3.1'] = msg['hl7datetime'].toString();

// Anpassungen im PID Segment
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString(); // Familiy Name (Nachname)
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString(); // Given Name (Vorname)

// Anpassungen im PV1 Segment

// Aufenthaltsstatus wichtig? I, O amb., station�r?
tmp['PV1']['PV1.2']['PV1.2.1'] = 'I';
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['case_id'].toString();	// FALLNR


// TXA Segment
//tmp['TXA']['TXA.2']['TXA.2.1'] = msg['containerclassname'].toString();	// TXA.2 Dokumententyp.
tmp['TXA']['TXA.2']['TXA.2.1'] = msg['dokinfo'].toString()
// TXA.2 Dokumententyp. Ge�ndert 16.01.2015, PK

// TXA.3.1 Extension-Hinweis (Mimetyp) z.B. PDF, TIFF, JPEG, etc...
var mimetype = msg['mimetype'].toString();	// wird noch weiter untergebraucht.

tmp['TXA']['TXA.3']['TXA.3.1'] = mimetype;
channelMap.put(mimetype,'Mimetype zum Dokument');

// TXA.4 Activity Date/Time
tmp['TXA']['TXA.4']['TXA.4.1'] = msg['hl7datetimedokudatum'].toString();

// TXA.6 Origination Date/Time
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['hl7datetimecreationdate'].toString();

// TXA.8 Edit Date/Time = changedate
//tmp['TXA']['TXA.8']['TXA.8.1'] = datestring1;

// TXA.12 Unique Document Number TXA.12.1 Entity Identifier = objectid
// Quelle PHYD Tabelle "DC_DYN_BASEPATIENTDOCCLASS", Spalte "OBJECTID".
// i.A. mit Hr. Dr. Jungck, 27.05.2014.
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['objectid'].toString();

// TXA.12.2 Namespace ID
tmp['TXA']['TXA.12']['TXA.12.2'] = 'DokumentenID';

// TXA.14.1 Place Order Number = Auftragsnummer (z.B. EDOK-2014-12345678)
tmp['TXA']['TXA.14']['TXA.14.1'] = msg['auftragsnummer'].toString();

// TXA.16, Unique Document File Name = Dokumentenname (auf dem PHYD Volume (F:\ Laufwerk).
tmp['TXA']['TXA.16']['TXA.16.1'] = msg['filename'].toString();		


// Anpassungen im OBX Segment

// OBX.3 Observation Idenfifier = ORBIS DokumentenID
tmp['OBX']['OBX.3']['OBX.3.1'] = msg['orbisdokumentenid'].toString();

// OSM Version: 
var atts=getAttachments();

if(!getAttachments().isEmpty()) {
	tmp['OBX']['OBX.5']['OBX.5.1'] = atts.get(0).getAttachmentId();
} else {
	logger.warn("Kein Attachment gefunden");
}	

sleep(1000);// Anpassungen im MSH Segment
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['hl7datetime'].toString();	// Zeitpunkt der Nachrichten�bermittlung.
var uuid = UUIDGenerator.getUUID();	// Eindeutige Nachrichten ID generieren.
tmp['MSH']['MSH.10']['MSH.10.1'] = uuid;

// EVN Segment
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['hl7datetime'].toString();
tmp['EVN']['EVN.3']['EVN.3.1'] = msg['hl7datetime'].toString();

// Anpassungen im PID Segment
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString(); // Familiy Name (Nachname)
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString(); // Given Name (Vorname)

// Anpassungen im PV1 Segment

// Aufenthaltsstatus wichtig? I, O amb., station�r?
tmp['PV1']['PV1.2']['PV1.2.1'] = 'I';
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['case_id'].toString();	// FALLNR


// TXA Segment

// TXA.2 Dokumententyp. Ge�ndert 16.01.2015, PK
// Besonderheit bei den Sozialdienst Anforderungen und Befunden.
// Um eine inhatliche Unterscheidung darzustellen muss hierbei
// die Zustanzinformation "Allgemeiner Befund" oder "Allgemeine Anfoderung"
// hierzugef�gt werden.

if (msg['dokinfo'].toString() == 'Sozialdienst') {

		tmp['TXA']['TXA.2']['TXA.2.1'] = msg['containerclassname'].toString() + ' ' + msg['dokinfo'].toString();

} else {

		tmp['TXA']['TXA.2']['TXA.2.1'] = msg['dokinfo'].toString();
}

// TXA.3.1 Extension-Hinweis (Mimetyp) z.B. PDF, TIFF, JPEG, etc...
var mimetype = msg['mimetype'].toString();	// wird noch weiter untergebraucht.

tmp['TXA']['TXA.3']['TXA.3.1'] = mimetype;
channelMap.put(mimetype,'Mimetype zum Dokument');

// TXA.4 Activity Date/Time
tmp['TXA']['TXA.4']['TXA.4.1'] = msg['hl7datetimedokudatum'].toString();

// TXA.6 Origination Date/Time
tmp['TXA']['TXA.6']['TXA.6.1'] = msg['hl7datetimecreationdate'].toString();

// TXA.8 Edit Date/Time = changedate
//tmp['TXA']['TXA.8']['TXA.8.1'] = datestring1;

// TXA.12 Unique Document Number TXA.12.1 Entity Identifier = objectid
// Quelle PHYD Tabelle "DC_DYN_BASEPATIENTDOCCLASS", Spalte "OBJECTID".
// i.A. mit Hr. Dr. Jungck, 27.05.2014.
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['objectid'].toString();

// TXA.12.2 Namespace ID
tmp['TXA']['TXA.12']['TXA.12.2'] = 'DokumentenID';

// TXA.14.1 Place Order Number = Auftragsnummer (z.B. EDOK-2014-12345678)
tmp['TXA']['TXA.14']['TXA.14.1'] = msg['auftragsnummer'].toString();

// TXA.16, Unique Document File Name = Dokumentenname (auf dem PHYD Volume (F:\ Laufwerk).
tmp['TXA']['TXA.16']['TXA.16.1'] = msg['filename'].toString();		


// Anpassungen im OBX Segment

// OBX.3 Observation Idenfifier = ORBIS DokumentenID
tmp['OBX']['OBX.3']['OBX.3.1'] = msg['orbisdokumentenid'].toString();

// OSM Version: 
var atts=getAttachments();

if(!getAttachments().isEmpty()) {
	tmp['OBX']['OBX.5']['OBX.5.1'] = atts.get(0).getAttachmentId();
} else {
	logger.error("Kein Attachment gefunden");
}	

sleep(1000);// MSH
var strAbfragezeit = msg['abfragezeit'].toString();
var strAbfragezeitHl7 = DateUtil.convertDate("dd.MM.yyyy HH:mm", "yyyyMMddHHmm00", strAbfragezeit);

tmp['MSH']['MSH.7']['MSH.7.1'] = strAbfragezeitHl7;
tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();

// EVN
tmp['EVN']['EVN.2']['EVN.2.1'] = strAbfragezeitHl7;

// PID
tmp['PID']['PID.2']['PID.2.1'] = msg['pid'].toString();
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString();
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString();
tmp['PID']['PID.7']['PID.7.1'] = msg['birthday'].toString();

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['fallnr'].toString();

// FT1
tmp['FT1']['FT1.2']['FT1.2.1'] = 'U' + msg['fallnr'].toString() + msg['kostenstelle_fuer_hlst'].toString();					// Als ID wird das Pr�fix "U" und die Fallnummer genommen.
																	// Pro Fall und(!) Kostenstelle kann es nur ein Hausleistungsk�rzel geben.
// var strDatum   = msg['erstes_transferdatum'].toString();
// var datestring = DateUtil.convertDate("dd.MM.yyyy", "yyyyMMdd", strDatum);
tmp['FT1']['FT1.4']['FT1.4.1'] = msg['leistdat_hl7'].toString();					// Das Leistungserbringungsdatum muss f�r ORBIS innerhalb des Behandlungs- oder Scheinzeitraums liegen. 
																	// Daher wird das Aufnahmendatum genommen, womit sichergestellt ist, dass diese Voraussetzung immer erf�llt ist.
																	// Sonst erscheint die Fehlermeldung "Das Leistungsdatum liegt ausserhalb des Aufenthaltszeitraums oder der Scheing�ltigkeit".
tmp['FT1']['FT1.20']['FT1.20.1'] = msg['kostenstelle_fuer_hlst'].toString(); 		// Erbringende Kostenstelle der Hausleitung
tmp['FT1']['FT1.21']['FT1.21.1'] = msg['kostenstelle_fuer_hlst'].toString(); 		// Erbringende Kostenstelle der Hausleitung// MSH
var strAbfragezeit = msg['abfragezeit'].toString();
var strAbfragezeitHl7 = DateUtil.convertDate("dd.MM.yyyy HH:mm", "yyyyMMddHHmm00", strAbfragezeit);

tmp['MSH']['MSH.7']['MSH.7.1'] = strAbfragezeitHl7;
tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();

// EVN
tmp['EVN']['EVN.2']['EVN.2.1'] = strAbfragezeitHl7;

// PID
tmp['PID']['PID.2']['PID.2.1'] = msg['pid'].toString();
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString();
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString();
tmp['PID']['PID.7']['PID.7.1'] = msg['birthday'].toString();

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['fallnr'].toString();

// FT1
tmp['FT1']['FT1.2']['FT1.2.1'] = 'U' + msg['fallnr'].toString();					// Als ID wird das Pr�fix "U" und die Fallnummer genommen.
																	// Pro Fall kann es nur ein Hausleistungsk�rzel geben.
// var strDatum   = msg['erstes_transferdatum'].toString();
// var datestring = DateUtil.convertDate("dd.MM.yyyy", "yyyyMMdd", strDatum);
tmp['FT1']['FT1.4']['FT1.4.1'] = msg['leistdat_hl7'].toString();					// Das Leistungserbringungsdatum muss f�r ORBIS innerhalb des Behandlungs- oder Scheinzeitraums liegen. 
																	// Daher wird das Aufnahmendatum genommen, womit sichergestellt ist, dass diese Voraussetzung immer erf�llt ist.
																	// Sonst erscheint die Fehlermeldung "Das Leistungsdatum liegt ausserhalb des Aufenthaltszeitraums oder der Scheing�ltigkeit".
tmp['FT1']['FT1.20']['FT1.20.1'] = msg['kostenstelle_fuer_hlst'].toString(); 		// Erbringende Kostenstelle der Hausleitung
tmp['FT1']['FT1.21']['FT1.21.1'] = msg['kostenstelle_fuer_hlst'].toString(); 		// Erbringende Kostenstelle der Hausleitung// MSH
var strAbfragezeit = msg['abfragezeit'].toString();
var strAbfragezeitHl7 = DateUtil.convertDate("dd.MM.yyyy HH:mm", "yyyyMMddHHmm00", strAbfragezeit);

tmp['MSH']['MSH.7']['MSH.7.1'] = strAbfragezeitHl7;
tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();

// EVN
tmp['EVN']['EVN.2']['EVN.2.1'] = strAbfragezeitHl7;

// PID
tmp['PID']['PID.2']['PID.2.1'] = msg['pid'].toString();
tmp['PID']['PID.3']['PID.3.1'] = msg['pid'].toString();
tmp['PID']['PID.5']['PID.5.1'] = msg['lastname'].toString();
tmp['PID']['PID.5']['PID.5.2'] = msg['firstname'].toString();
tmp['PID']['PID.7']['PID.7.1'] = msg['birthday'].toString();

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['fallnr'].toString();

// FT1
tmp['FT1']['FT1.2']['FT1.2.1'] = 'U' + msg['fallnr'].toString() + msg['kostenstelle_fuer_hlst'].toString();					// Als ID wird das Pr�fix "U" und die Fallnummer genommen.
																	// Pro Fall und(!) Kostenstelle kann es nur ein Hausleistungsk�rzel geben.
// var strDatum   = msg['erstes_transferdatum'].toString();
// var datestring = DateUtil.convertDate("dd.MM.yyyy", "yyyyMMdd", strDatum);
tmp['FT1']['FT1.4']['FT1.4.1'] = msg['leistdat_hl7'].toString();					// Das Leistungserbringungsdatum muss f�r ORBIS innerhalb des Behandlungs- oder Scheinzeitraums liegen. 
																	// Daher wird das Aufnahmendatum genommen, womit sichergestellt ist, dass diese Voraussetzung immer erf�llt ist.
																	// Sonst erscheint die Fehlermeldung "Das Leistungsdatum liegt ausserhalb des Aufenthaltszeitraums oder der Scheing�ltigkeit".
tmp['FT1']['FT1.20']['FT1.20.1'] = msg['kostenstelle_fuer_hlst'].toString(); 		// Erbringende Kostenstelle der Hausleitung
tmp['FT1']['FT1.21']['FT1.21.1'] = msg['kostenstelle_fuer_hlst'].toString(); 		// Erbringende Kostenstelle der Hausleitung// Anpassungen f�r THG:
// Es m�ssen f�hrende Nullen vorangestellt werden, damit die alte SAP IS-H Systematik
// beibehalten wird.

var strStation = msg['PV1']['PV1.3']['PV1.3.1'].toString().lpad("0", 8);
var strKlinik  = msg['PV1']['PV1.3']['PV1.3.4'].toString().lpad("0", 8);

msg['PV1']['PV1.3']['PV1.3.1'] = strStation;
msg['PV1']['PV1.3']['PV1.3.4'] = strKlinik;

// Debug-Ausgabe:
// logger.error('Test: ' + msg['PV1']['PV1.3']['PV1.3.4'].toString());

// Anlegen einer f�hrenden Null.
// Nach Umstellung der Schnittstelle von SAP IS-H nach ORBIS.
// Muss bei R�ck�bermittlung wieder abgeschnitten werden.
// PK, 26.08.2014

var strPID = msg['PID']['PID.3']['PID.3.1'].toString().lpad("0", 8);

msg['PID']['PID.3']['PID.3.1'] = strPID;
msg['PID']['PID.2']['PID.2.1'] = strPID;// DG1.1 (Set ID) DiagnoseID aus THGQIMS muss gel�scht werden,
// damit in ORBIS der Import und die Verabreitung erflgen kann.
// pk, 20.08.2014.
// Das stimmt nicht (mehr). Mit einer OPS- oder ICD-ID k�nnen Nachbearbeitungen und Korrekturen vorgenommen werden und sind somit zu empfehlen.
// pk, 09.01.2018

// Loeschen der ICD ID (alt)
// Pr�fix vor ICD ID setzen

if (msg['DG1'].length() > 0) {


		msg['DG1']['DG1.1']['DG1.1.1'] = 'THGICD' + msg['DG1']['DG1.1']['DG1.1.1'];
		// Diagnoseart konstant auf "BD" setzen.
		// PK, 22.02.2016.
		msg['DG1']['DG1.6']['DG1.6.1'] = 'BD';

}


// Loeschen der OPS ID (alt)
// Pr�fix von OPS ID setzen

if (msg['PR1'].length() > 0) {

		msg['PR1']['PR1.1']['PR1.1.1'] = 'THGOPS-' + msg['PR1']['PR1.1']['PR1.1.1'];

}

// F�hrende Nullen wieder bei PID abschneiden.
// Zur Datenkonsistenz mit SAP IS-H.
var strPID_ofn = Number(msg['PID']['PID.3']['PID.3.1'].toString());
msg['PID']['PID.3']['PID.3.1'] = strPID_ofn;// Anpassungen im MSH Segment.

msg['MSH']['MSH.3']['MSH.3.1'] = 'THG';
msg['MSH']['MSH.6']['MSH.6.1'] = 'UKB';


// F�hrende Nullen wieder bei PID abschneiden.
// Zur Datenkonsistenz mit SAP IS-H.
var strPID_ofn = Number(msg['PID']['PID.3']['PID.3.1'].toString());
msg['PID']['PID.3']['PID.3.1'] = strPID_ofn;// Anpassungen f�r THG:
// Es m�ssen f�hrende Nullen vorangestellt werden, damit die alte SAP IS-H Systematik
// beibehalten wird.

var strStation = msg['PV1']['PV1.3']['PV1.3.1'].toString().lpad("0", 8);
var strKlinik  = msg['PV1']['PV1.3']['PV1.3.4'].toString().lpad("0", 8);

msg['PV1']['PV1.3']['PV1.3.1'] = strStation;
msg['PV1']['PV1.3']['PV1.3.4'] = strKlinik;

// Debug-Ausgabe:
// logger.error('Test: ' + msg['PV1']['PV1.3']['PV1.3.4'].toString());

// Anlegen einer f�hrenden Null.
// Nach Umstellung der Schnittstelle von SAP IS-H nach ORBIS.
// Muss bei R�ck�bermittlung wieder abgeschnitten werden.
// PK, 26.08.2014

var strPID = msg['PID']['PID.3']['PID.3.1'].toString().lpad("0", 8);

msg['PID']['PID.3']['PID.3.1'] = strPID;
msg['PID']['PID.2']['PID.2.1'] = strPID;// Auf Wunsch der Klinik NEU soll die ADT Belieferung auf eine ORM Belieferung umgestellt werden.
// Nach R�cksprache mit Herrn Rehder (Hersteller der FEES T�rme) reicht es den Nachrichtentyp anzupassen, damit die Nachrichtenverarbeitung weiter funktioniert.
// Daher wird im Folgenden aus ORM -> ADT und konstant der Nachrichtentyp stat. Aufnahme A01 hinterlegt. Dies reicht dem RPSzene-System, um die Patientenstammdaten und Fallnummer aufzunehmen.
// PK, 26.08.2021

msg['MSH']['MSH.9']['MSH.9.1'] = 'ADT';
msg['MSH']['MSH.9']['MSH.9.2'] = 'A01';msg['MSH']['MSH.3']['MSH.3.1'] = 'Textbefund';
msg['MSH']['MSH.4']['MSH.4.1'] = 'NEU';
msg['MSH']['MSH.5']['MSH.5.1'] = 'ORBIS';
msg['MSH']['MSH.6']['MSH.6.1'] = 'SSST';// Auf Wunsch der Klinik NEU soll die ADT Belieferung auf eine ORM Belieferung umgestellt werden.
// Nach R�cksprache mit Herrn Rehder (Hersteller der FEES T�rme) reicht es den Nachrichtentyp anzupassen, damit die Nachrichtenverarbeitung weiter funktioniert.
// Daher wird im Folgenden aus ORM -> ADT und konstant der Nachrichtentyp stat. Aufnahme A01 hinterlegt. Dies reicht dem RPSzene-System, um die Patientenstammdaten und Fallnummer aufzunehmen.
// PK, 26.08.2021

msg['MSH']['MSH.9']['MSH.9.1'] = 'ADT';
msg['MSH']['MSH.9']['MSH.9.2'] = 'A01';channelMap.put('patId', msg['PID']['PID.3']['PID.3.1'].toString());
channelMap.put('visitId', msg['PV1']['PV1.19']['PV1.19.1'].toString());

OutFileName = 'RPZENE' + msg['MSH']['MSH.10']['MSH.10.1'].toString() + '.pdf';
FileContent = msg['OBX'][1]['OBX.5']['OBX.5.1'].toString();

channelMap.put('OutFileName',OutFileName);
channelMap.put('FileContent',FileContent);tmp['MSH'] = msg['MSH'].copy();// Einlesen des PV1.19 Feldinhalts = FALLNR des ORBIS Patienten.
// Ggf. abpr�fen mit anderen Felder.



// Ausf�hren einer SQL Abfrage auf die KHV.

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('oracle.jdbc.driver.OracleDriver','jdbc:oracle:thin:@10.3.80.41:1521:KHV','orbis_rep','embi_45gbw71');

//Create a SQL Statement to be executed

var strQRYFALLNR = msg['QRD']['QRD.8']['QRD.8.1'].toString();
// Ausgeschaltet am 28.01.2015, PK
//logger.error("FALLNR : " + strQRYFALLNR);

var sqlStr ="\
SELECT \
F.FALLNR, 	\
NAT.NAME,	\
NAT.VORNAME, \
TO_CHAR(NAT.GEBDAT,'YYYYMMDD') GEBDAT,	\
NAT.GESCHLECHT, \
PF.FREMD_PERSNR PID,	\
TO_CHAR(SYSDATE, 'YYYYMMDDhh24miss') ABFRAGEZEIT \
FROM \
FALL F,	\
NATPERSON NAT,	\
PERSON_FREMD PF	\
WHERE	\
F.PERSNR = NAT.PERSNR  AND	\
NAT.PERSNR = PF.PERSNR AND	\
F.STORNO_DATUM IS NULL AND	\
F.FALLNR = '" + strQRYFALLNR + "'";

// Ausgeschaltet am 28.01.2015, PK
// logger.error("SQL String" + sqlStr);

// Execute SQL Statement and save them as results

var results = dbConn.executeCachedQuery(sqlStr);

var resultSize = results.size();


// Aufbereiten des Resultsets. // hier nur eine Ergebniszeile durch Abfrage.
if(resultSize>0){

	for(var i = 0;i<resultSize;i++){

		results.next();

	var strFALLNR 		= results.getString(1); 
	var strNAME 		= results.getString(2); 
	var strVORNAME 		= results.getString(3); 
	var strGEBDAT 		= results.getString(4); 
	var strGESCHLECHT 	= results.getString(5); 
	var strPID 			= results.getString(6); 
	var strSYSDATE		= results.getString(7); 

	}
}

// Kopieren der Resultsetdaten in das OMT.

// MSH
// MSH.7.1 Date/Time of Message = Abfragezeit der SQL Abfrage
tmp['MSH']['MSH.7']['MSH.7.1'] = strSYSDATE;

// MSA
// MSA.2.1 Message Control ID (= Msg ID der Anfragenachricht)
tmp['MSA']['MSA.2']['MSA.2.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

// QRD
// R�ck�bermittlung des eingegangenen QRD Segments.
tmp['QRD'] = msg['QRD'].copy();

// PID
// PID.2.1 External ID Number
tmp['PID']['PID.2']['PID.2.1'] = strPID;
// PID.3.1 Internal ID Number
tmp['PID']['PID.3']['PID.3.1'] = strPID;
// PID.5.1 Family Name
tmp['PID']['PID.5']['PID.5.1'] = strNAME;
// PID.5.2 Given Name
tmp['PID']['PID.5']['PID.5.2'] = strVORNAME;
// PID.7.1 Date of Birth
tmp['PID']['PID.7']['PID.7.1'] = strGEBDAT;
// PID.8.1 Sex
if (strGESCHLECHT == 'W') strGESCHLECHT = 'F'; 
tmp['PID']['PID.8']['PID.8.1'] = strGESCHLECHT;

// PV1
// PV1.19 Fallnummer
tmp['PV1']['PV1.19']['PV1.19.1'] = strQRYFALLNR;

// Schliessen der Connection.

dbConn.close();


// Erstellen der AckMessage.
var ackMessage = SerializerFactory.getSerializer('HL7V2').fromXML(tmp);

// F�llen der Antwortvariablen (ResponseMap f�r Source ACK).
// responseMap.put("customResponse", ResponseFactory.getSuccessResponse(ackMessage));
// Austausch der Funktion gemaess MIRTH Empfehlung, PK, 02.06.2015.

responseMap.put("customResponse", ResponseFactory.getSentResponse(ackMessage));

// L�schen der Abfrageergebnisvariablen.
results = "";// Objekt "parser" h�lt den Parser des GDTInterfaces
var parser = new Packages.ukb.klinik.bn.gdtinterface.DelimitedTextToGDT();
var parameters = [$('string'),":"];

//logger.info(parser.getVersionInfo());

/*
* Der Parser kann konfiguriert werden, sodass zu einer Nachricht ein Satzende hinzugef�gt wird
* standard-m��ig wird dies nicht gemacht
*/
// parser.configure("satzende",true);

//Ausf�hren des Parsers und Speichern als String
var GDTmessage = parser.process(parameters);

var correctedMessage = GDTmessage.replace("014921802.00","014921801.00");
/*
var split = GDTmessage.split("\r\n");
var outgoing = "";
for (var i=0;i<split.length;i++) {
	if (split[i].contains("0173103")) {
		outgoing += "0173103"+split[i].substring(13,15)+split[i].substring(11,13)+split[i].substring(7,11)+"\r\n";
	} else {
		if (split[i].contains("0103110")) {
			outgoing+= split[i].replace("M","1").replace("W","2").replace("X","0").replace("O","0")+"\r\n";
		} else {
		outgoing += split[i]+"\r\n";
		}
	}
}
*/

// Speichern des Texts in der ChannelMap
globalChannelMap.put('myMessage',correctedMessage);// Umwandlung einer ORU-Nachricht von rpSzene in MDM f�r AGFA
//
// $Id$

var prefix = '/egate/data/orbis/KHV/jaif/docs/';

// MSH
if (msg['MSH']['MSH.4']['MSH.4.1'].toString() == 'rpSzene') {
	tmp['MSH']['MSH.4']['MSH.4.1'] = 'HNO';
}
tmp['MSH']['MSH.3']['MSH.3.1'] = tmp['MSH']['MSH.4']['MSH.4.1'];
tmp['MSH']['MSH.5']['MSH.5.1'] = 'ORBIS';
tmp['MSH']['MSH.6']['MSH.6.1'] = 'JAIF';
tmp['MSH']['MSH.7']['MSH.7.1'] = tmp['MSH']['MSH.7']['MSH.7.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();
tmp['MSH']['MSH.9']['MSH.9.2'] = 'T09';
tmp['MSH']['MSH.10']['MSH.10.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

// EVN
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();
tmp['EVN']['EVN.5']['EVN.5.1'] = '';

// PID
tmp['PID'] = msg['PID'];
tmp['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.2']['PID.2.1'].toString();

// PV1
tmp['PV1'] = msg['PV1'];

// TXA
tmp['TXA']['TXA.2']['TXA.2.1'] = 'Phoniatrischer Befund #0310#';
tmp['TXA']['TXA.3']['TXA.3.1'] = 'PDF';
tmp['TXA']['TXA.7']['TXA.7.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();
tmp['TXA']['TXA.8']['TXA.8.1'] = msg['OBR']['OBR.7']['OBR.7.1'].toString();
tmp['TXA']['TXA.12']['TXA.12.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();
tmp['TXA']['TXA.12']['TXA.12.2'] = 'RPSZENE';
tmp['TXA']['TXA.16']['TXA.16.1'] = prefix + $('OutFileName');//Setup MSH
//logger.debug("Starting Transformer");
tmp['MSH']['MSH.1'] = "|";
tmp['MSH']['MSH.2'] = "^~\\&";
tmp['MSH']['MSH.3']['MSH.3.1'] 	= 'SOMNO';
tmp['MSH']['MSH.4']['MSH.4.1'] 	= 'medics';
tmp['MSH']['MSH.5']['MSH.5.1'] = "ORBIS";
tmp['MSH']['MSH.6']['MSH.6.1'] = "JAIF";
tmp['MSH']['MSH.7']['MSH.7.1'] 	= DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['MSH']['MSH.9']['MSH.9.1'] 	= "MDM";
tmp['MSH']['MSH.9']['MSH.9.2'] 	= "T09";
tmp['MSH']['MSH.10']['MSH.10.1'] 	= connectorMessage.getMessageId();
tmp['MSH']['MSH.12']['MSH.12.1'] 	= "2.5";

//setup EVN
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = DateUtil.getCurrentDate('yyyyMMddHHmmss');
//08052020092947
tmp['EVN']['EVN.3']['EVN.3.1'] = DateUtil.convertDate("ddMMyyyyhhmm", 'yyyyMMddhhmm', $('AbnahmeDatum')+$('AbnahmeZeit'));

//setup PID
tmp['PID']['PID.1']['PID.1.1'] 	= "1";
tmp['PID']['PID.2']['PID.2.1'] = $('vPID');
tmp['PID']['PID.3']['PID.3.1'] 	= $('FALLNR');
//tmp['PID']['PID.3']['PID.3.4'] = "UKB";
//tmp['PID']['PID.3']['PID.3.5'] = "PID";
tmp['PID']['PID.5']['PID.5.1'] 	= $('Nachname')
tmp['PID']['PID.5']['PID.5.2'] 	= $('Vorname')
if ($('DOB')!="") tmp['PID']['PID.7']['PID.7.1'] = $('DOB');
tmp['PID']['PID.8']['PID.8.1'] 	= "";

//setup PV1
tmp['PV1']['PV1.1']['PV1.1.1'] 	= "1";
tmp['PV1']['PV1.19']['PV1.19.1'] 	= $('FALLNR');

//Setup TXA
tmp['TXA']['TXA.2']['TXA.2.1'] = "Report";

tmp['TXA']['TXA.8']['TXA.8.1']	= DateUtil.convertDate("ddMMyyyyhhmm", 'yyyyMMddhhmm', $('AbnahmeDatum')+$('AbnahmeZeit'));
if ($('strFileName')!="") {
tmp['TXA']['TXA.12']['TXA.12.1'] = $('strFileName').substring(0,$('strFileName').lastIndexOf('.'));
tmp['TXA']['TXA.16']['TXA.16.1'] 	= "\\\\ukb218\\MIRTHP_WORK\\somno23789213hbasdnl\\GDT_OUT\\"+$('strFileName');
}
tmp['TXA']['TXA.12']['TXA.12.2'] = "SOMNOmedics";
tmp['TXA']['TXA.12']['TXA.12.3'] = $('FALLNR')+$('AbnahmeDatum')+$('AbnahmeZeit');// studienkuerzel;studienID;url;Studientitel;Quellsystem[RedCap,SMS];status[Aktiv,sonstig];Rekrutierungsbeginn;Rekrutierungsende
// CSV Dateiaufbau:
// 	Acerta;
//	3548;
//	http://www.klinisches-studienzentrum.de/app/trial/3548#this;
//	Eine offene, multizentrische, nicht-randomisierte Phase-1-Studie zur Beurteilung der Sicherheit, Vertr�glichkeit, Pharmakokinetik und vorl�ufigen Antitumoraktivit�t von AZD4573, einem potenten und selektiven CDK9-Inhibitor, bei Patienten mit rezidivierten oder refrakt�ren h�matologischen Malignomen;
//	SMS;
//	A;
//	2020-11-11;
//	2020-11-31


tmp['row']['studienkuerzel']	= msg['studienkuerzel'].toString().trim().replace('"', "'").replace(';', ',').substring(0,30);
// Fallunterscheidung: (1) es handelt sich um ein SMS-Studie (cso_id existiert), oder (2) es handelt sich um eine RedCap Studie
if (msg['cso_id'].toString().length > 0) {
	
	tmp['row']['record_id']		= msg['cso_id'].toString().trim();
	tmp['row']['quelle']		= 'SMS';
} else {

	tmp['row']['record_id']		= 'R' + msg['record_id'].toString().trim();
	tmp['row']['quelle']		= 'RDC';
}

tmp['row']['url']			= '';
tmp['row']['stud_titel']		= msg['stud_titel'].toString().replace(/[\n]/g, '').replace(/[\r]/g, '').replace(/"/g, '').trim();

//tmp['row']['status']		= 'A';
//tmp['row']['rekr_beginn']	= msg['rekr_beginn'].toString();
//tmp['row']['rekr_ende']		= msg['rekr_ende'].toString();

/*
 "REPLACE(REPLACE(REPLACE(REPLACE(MAX(SUB01.ukb_investig), char(13), ' '), char(10), ' '), char(34) , char(39)), char(59), ',')  AS ukb_investig,  " +
	         "MAX(SUB01.studienkuerzel) AS studienkuerzel, REPLACE(REPLACE(REPLACE(REPLACE(MAX(SUB01.stud_titel), char(13), ' '), char(10), ' '), char(34) , char(39)), char(59), ',') AS stud_titel, " +
*/


/* Beispieldatensatz f�r eine SMS Studien, die nach RedCap �bermittelt wurde:
<item>
    <record_id>664</record_id>
    <ukb_investig> Univ.-Prof. Dr. med.PeterBrossart</ukb_investig>
    <fachbereiche>8</fachbereiche>
    <studienzentrum>13</studienzentrum>
    <studienkuerzel>Acerta</studienkuerzel>
    <stud_titel>Eine offene, multizentrische, nicht-randomisierte Phase-1-Studie zur Beurteilung der Sicherheit, Vertr�glichkeit, Pharmakokinetik und vorl�ufigen Antitumoraktivit�t von AZD4573, einem potenten und selektiven CDK9-Inhibitor, bei Patienten mit rezidivierten oder refrakt�ren h�matologischen Malignomen</stud_titel>
    <cso_decl>1</cso_decl>
    <cso_id>3548</cso_id>
    <status>2</status>
    <rekr_beginn>2018-08-29</rekr_beginn>
    <rekr_ende/>
    <email_sae_meldungen/>
</item>*/


/* Beispieldatensatz f�r eine UKB interne RedCap Studie:
<item>
    <record_id>641</record_id>
    <ukb_investig>Dr. Michael Rademacher</ukb_investig>
    <fachbereiche>26</fachbereiche>
    <studienzentrum>29</studienzentrum>
    <studienkuerzel>YKP3089</studienkuerzel>
    <stud_titel>An Open Label, Multicenter, Safety and Pharmacokinetic Study of YKP3089
as Adjunctive Therapy in Subjects with Partial Onset Seizures</stud_titel>
    <cso_decl>2</cso_decl>
    <status>6</status>
    <rekr_beginn>2018-05-18</rekr_beginn>
    <rekr_ende/>
    <email_sae_meldungen/>
</item>

*///05012004
channelMap.put("strYear",$('DOB').substring(4));
channelMap.put("strMonth",$('DOB').substring(2,4));
channelMap.put("strDay",$('DOB').substring(0,2));//Setup MSH
//logger.debug("Starting Transformer");
tmp['MSH']['MSH.1'] = "|";
tmp['MSH']['MSH.2'] = "^~\\&";
tmp['MSH']['MSH.3']['MSH.3.1'] 	= 'SOMNO';
tmp['MSH']['MSH.4']['MSH.4.1'] 	= 'medics';
tmp['MSH']['MSH.5']['MSH.5.1'] = "ORBIS";
tmp['MSH']['MSH.6']['MSH.6.1'] = "JAIF";
tmp['MSH']['MSH.7']['MSH.7.1'] 	= DateUtil.getCurrentDate('yyyyMMddHHmmss');
tmp['MSH']['MSH.9']['MSH.9.1'] 	= "MDM";
tmp['MSH']['MSH.9']['MSH.9.2'] 	= "T09";
tmp['MSH']['MSH.10']['MSH.10.1'] 	= connectorMessage.getMessageId();
tmp['MSH']['MSH.12']['MSH.12.1'] 	= "2.5";

//setup EVN
tmp['EVN']['EVN.1']['EVN.1.1'] = "T09";
tmp['EVN']['EVN.2']['EVN.2.1'] = DateUtil.getCurrentDate('yyyyMMddHHmmss');
//08052020092947
tmp['EVN']['EVN.3']['EVN.3.1'] = DateUtil.convertDate("ddMMyyyyhhmm", 'yyyyMMddhhmm', $('AbnahmeDatum')+$('AbnahmeZeit'));

//setup PID
tmp['PID']['PID.1']['PID.1.1'] 	= "1";
tmp['PID']['PID.2']['PID.2.1'] = $('PID');
tmp['PID']['PID.3']['PID.3.1'] 	= $('FallNr');
//tmp['PID']['PID.3']['PID.3.4'] = "UKB";
//tmp['PID']['PID.3']['PID.3.5'] = "PID";
tmp['PID']['PID.5']['PID.5.1'] 	= $('Nachname')
tmp['PID']['PID.5']['PID.5.2'] 	= $('Vorname')
if (!($('DOB')== "")) tmp['PID']['PID.7']['PID.7.1'] = $('DOB');
tmp['PID']['PID.8']['PID.8.1'] 	= "";

//setup PV1
tmp['PV1']['PV1.1']['PV1.1.1'] 	= "1";
tmp['PV1']['PV1.19']['PV1.19.1'] 	= $('FallNr');

//Setup TXA
tmp['TXA']['TXA.2']['TXA.2.1'] = "Report";

tmp['TXA']['TXA.8']['TXA.8.1']	= DateUtil.convertDate("ddMMyyyyhhmm", 'yyyyMMddhhmm', $('AbnahmeDatum')+$('AbnahmeZeit'));
if ($('strFileName')!="") {
tmp['TXA']['TXA.12']['TXA.12.1'] = $('strFileName').substring(0,$('strFileName').lastIndexOf('.'));
tmp['TXA']['TXA.16']['TXA.16.1'] 	= "\\\\ukb718\\WORK\\somno32890132nklmdwqa\\GDT_OUT\\"+$('strFileName');
}
tmp['TXA']['TXA.12']['TXA.12.2'] = "SOMNOmedics";
tmp['TXA']['TXA.12']['TXA.12.3'] = $('FallNr')+$('PID')+$('AbnahmeDatum')+$('AbnahmeZeit');// PID Segment anpassen.
//tmp['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString();
msg['PID']['PID.3']['PID.3.1'] = '3299570';	// test konstante

// PV1 Segment anpassen.
//var strFallnr = msg['PID']['PID.13']['PID.13.1'].toString();
//tmp['PV1']['PV1.19']['PV1.19.1'] = strFallnr;
msg['PV1']['PV1.19']['PV1.19.1'] = '7281635';	// test konstante

sleep(1000);// Embla unterst�tz keine A05 Nachrichten.
// Da auf diese Weise Patientendaten verloren gehen wird der ADT Typ A05 -> auf A04
// �bersetzt.


var strEvent = msg['MSH']['MSH.9']['MSH.9.2'].toString();

if (strEvent == 'A05') {


msg['MSH']['MSH.9']['MSH.9.2'] = 'A04';
msg['EVN']['EVN.1']['EVN.1.1'] = 'A04';


}

// tempor�rer Work-around, bis ich ausreichend Rechte in Embla habe um eine Facility anzulegen.
// pk, 08.10.2014

if (msg['PV1']['PV1.3']['PV1.3.4'].toString() == '2453PSCHLAF') {

	msg['PV1']['PV1.3']['PV1.3.4'] = '24';

}

// Adress�nderung bei "'" vornehmen, da EMBLA dies nicht verarbeiten kann. "'" l�schen
var adresse = msg['PID']['PID.11']['PID.11.1'].toString().replace(/\'/g," ");


msg['PID']['PID.11']['PID.11.1'] = adresse;

// Es kann mehr als ein IN1 Segment in einer HL7 ADT Nachricht geben. Deswegen muss �ber alle (m�glichen) IN1-Segmente iteriert werden.

for each (seg in msg..IN1) {
	
	seg['IN1.19']['IN1.19.1'] = adresse;
}

// ZVK Segment gibt es nur einmal.
msg['ZVK']['ZVK.6']['ZVK.6.1'] = adresse;// JavaScript Code zum Aufbau der tmp Outbound Template Nachrichten

var ZielChannel = "cSlabEmblaMdmIn";	// wieder an den Channel-Anfang zur�cksenden.

// MSH Segment
// MSH.7.1 Time of An Event

var strMSH6_US = msg['MSH']['MSH.7']['MSH.7.1'].toString();		// nachgelagerte Anpassungen (z.B. US -> EU Datumskonvertierungen)
var strMSH6_EU = DateUtil.convertDate("yyyyddMMHHmm", "yyyyMMddHHmm", strMSH6_US);
tmp['MSH']['MSH.7']['MSH.7.1'] = strMSH6_EU;

// MSH10.1 Message Control ID (Value)
tmp['MSH']['MSH.10']['MSH.10.1'] = msg['MSH']['MSH.10']['MSH.10.1'].toString();

// EVN Segment
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();


// PID Segment
// PID.3.1.
// Anschneiden der erste Stelle ('0') der SAP PID Nummer, um einen Import in ORBIS
// zu erm�glichen. Bsp. aus 03546154 -> 3546154 machen.
var strPID = Number(msg['PID']['PID.3']['PID.3.1'].toString());
tmp['PID']['PID.3']['PID.3.1'] = strPID;


// PID.5.1
tmp['PID']['PID.5']['PID.5.1'] = msg['PID']['PID.5']['PID.5.1'].toString();
// PID.5.2
tmp['PID']['PID.5']['PID.5.2'] = msg['PID']['PID.5']['PID.5.2'].toString();

// PV1 Segment
// PV1.19.
// Anschneiden der erste Stelle ('0') der SAP Fallnummer, um einen Import in ORBIS
// zu erm�glichen. Bsp. aus 08939594 -> 8939594 machen.
var strFALLNR = Number(msg['PID']['PID.13']['PID.13.1'].toString());
tmp['PV1']['PV1.19']['PV1.19.1'] = strFALLNR;

// logger.error(Number(msg['PID']['PID.13']['PID.13.1'].toString()));

var strStudyTypShort 	= msg['OBR']['OBR.4']['OBR.4.2'].toString();	// z.B.: "PSG Study"
var strStudyTypLong		= msg['OBR']['OBR.4']['OBR.4.5'].toString();	// z.B.: "PSG Messung"
var strObservationTime	= msg['OBR']['OBR.7']['OBR.7.1'].toString();	// Befunddatum ?

// Eindeutige Befundnummer aus Embla zuweisen (= OBR.2.1).
var strAuftragsNr 	=  msg['OBR']['OBR.2']['OBR.2.1'].toString();
var strLpadZero 	= '0000000000';
var strSequence  	= (strLpadZero + strAuftragsNr).slice(-10);


var OBXCount = msg['OBX'].length();
//logger.error("OBX Anz: " + OBXCount);


if (OBXCount > 0) {

		for (var j=0; j<OBXCount;j++) {		

		strValueTyp 		= msg['OBX'][j]['OBX.2']['OBX.2.1'].toString();
		strResultStatus 	= msg['OBX'][j]['OBX.11']['OBX.11.1'].toString();

			if (strValueTyp == 'RP' && strResultStatus == 'F') {

				strFileName = msg['OBX'][j]['OBX.3']['OBX.3.1'].toString();
				strFileNameWithoutExtension = strFileName.slice(0,-4); // cut off last four cyphers e.g. "Overview Sheet.pdf" -> "Overview Sheet".
				strFilePath = msg['OBX'][j]['OBX.5']['OBX.5.1'].toString();

				// TXA Segment
				// TXA.2.1 Document Type
				tmp['TXA']['TXA.2']['TXA.2.1'] = 'Schlaflaborbefund - ' + strFileNameWithoutExtension ; //+ ' (TNI-' + strSequence + ')'; rausgenommen in Absprache mit Frau Springmann.
				// TXA.6.1 Origination Date/Time
				tmp['TXA']['TXA.6']['TXA.6.1'] = strObservationTime;
				// TXA.8.1 Edit Time
				tmp['TXA']['TXA.8']['TXA.8.1'] = strObservationTime;	

				// TXA.12.1 Unique Document Identifier
				tmp['TXA']['TXA.12']['TXA.12.1'] = strSequence ;
				// TXA.12.2 strNamespaceID
				tmp['TXA']['TXA.12']['TXA.12.2'] = 'EMBLA';
				// TXA.12.3 Universal ID
				tmp['TXA']['TXA.12']['TXA.12.3'] = strFileName + strSequence;
				// TXA.16.1
				// Voranstellen des ftp Pfades f�r den JAIF Import im TXA.16.1 Feld:
				// Ursprungplaf (Bsp.) "D:\Enterprise_Files\CustomerRoot\Patients\726EAB98-A447-4A56-AC4D-B0E1FD123B05\925419F9-E12C-49E3-B210-FA4C3EFDA131\MSLT-Befund.pdf"
				var strPrefix	 = 'D:\\Enterprise_Files\\';
				var strPrefix2  = '\\\\ukb1683.klinik.bn\\Enterprise_Files\\'; // Enterprise_Files\CustomerRoot\Patients
				// var strPrefix2 	= 'ftp://mirth:jp5cxy9npR7eGvio@ukb1683.klinik.bn/';
				
// Umstellung des Quellpfads nach der Servermigration
// Beispielpfad f�r ein PDF-Befund: 
// \\ukb1683.klinik.bn\Enterprise_Files\CustomerRoot\Patients\00a8c41d-6b21-45c8-ad28-938235be7822\00824a69-db13-4637-974b-8ef87bb90fb6

				var strUNCPfad = strFilePath.replace(strPrefix, strPrefix2);
				tmp['TXA']['TXA.16']['TXA.16.1'] = strUNCPfad;

				// Channel Name: 		cKhvJaifMdmGebFileOut	
				// Channel ID: 		2275fddb-6be4-40ed-9f85-6379e16660cc	
				// Channel Description:	MDM - Generische Importschnittstelle KHV-JAIF
				// Send message to MdmOut ChannelReader
				router.routeMessage(ZielChannel, SerializerFactory.getSerializer('HL7V2').fromXML(tmp));
				sleep(1000);
				// next iteration step

			}

		}

}// Function...
// Gefunden am 19.09.2016 unter http://dcljs.de/faq/antwort.php?Antwort=rechnen_runden


function runde(x, n) {
	
  if (n < 1 || n > 14) return false;
  var e = Math.pow(10, n);
  var k = (Math.round(x * e) / e).toString();
  if (k.indexOf('.') == -1) k += '.';
  k += e.toString().substring(1);
  return k.substring(0, k.indexOf('.') + n+1);
  
}// Aufbereitung des MDM-Formats von Storz-AIDA f�r AGFA
//
// $Id$


// MSH 

if ((msg['MSH']['MSH.3']['MSH.3.1'].toString() == 'AIDA') || (msg['MSH']['MSH.3']['MSH.3.1'].toString() == 'KSC15049')) { 

    // Pfad f�r Dateibereitstellung auf dem Server
	var prefix = '/egate/data/orbis/KHV/jaif/docs/';

	tmp = new XML('<HL7Message/>');
	
	// MSH
	tmp['MSH'] = msg['MSH'];
	tmp['MSH']['MSH.3']['MSH.3.1'] = 'AIDA';
	tmp['MSH']['MSH.4']['MSH.4.1'] = msg['MSH']['MSH.5']['MSH.5.1'].toString();
	tmp['MSH']['MSH.5']['MSH.5.1'] = 'ORBIS';
	tmp['MSH']['MSH.6']['MSH.6.1'] = 'UKB';
	tmp['MSH']['MSH.7']['MSH.7.1'] = msg['MSH']['MSH.7']['MSH.7.1'].toString();
	
	// EVN
	tmp['EVN'] = msg['EVN'];
	
	// PID
	tmp['PID'] = msg['PID'];
	
	// PV1
	tmp['PV1'] = msg['PV1'];
	
	// TXA
	tmp['TXA']['TXA.1']['TXA.1.1'] = '1';
	tmp['TXA']['TXA.2']['TXA.2.1'] = 'OP-Bilddokumentation';
	tmp['TXA']['TXA.3']['TXA.3.1'] = channelMap.get('OutFileType');
	tmp['TXA']['TXA.4']['TXA.4.1'] = msg['TXA']['TXA.4']['TXA.4.1'].toString();
	tmp['TXA']['TXA.6']['TXA.6.1'] = msg['TXA']['TXA.6']['TXA.6.1'].toString();
	tmp['TXA']['TXA.8']['TXA.8.1'] = msg['TXA']['TXA.6']['TXA.6.1'].toString();
    tmp['TXA']['TXA.9']['TXA.9.1'] = '';
	tmp['TXA']['TXA.12']['TXA.12.1'] = msg['TXA']['TXA.12']['TXA.12.3'].toString();
	tmp['TXA']['TXA.12']['TXA.12.2'] = 'AIDA'
	tmp['TXA']['TXA.16']['TXA.16.1'] = prefix 
	+ channelMap.get('OutFileName');
	tmp['TXA']['TXA.17']['TXA.17.1'] = 'F';
	
	msg = tmp.copy();

}msg['MSH']['MSH.15']['MSH.15.1'] = 'AL';
msg['MSH']['MSH.16']['MSH.16.1'] = 'NE';
msg['MSH']['MSH.5']['MSH.5.1'] = 'SWISSLAB';
msg['MSH']['MSH.6']['MSH.6.1'] = 'IHT';
msg['MSH']['MSH.3']['MSH.3.1'] = 'ISH';// Function...
// Gefunden am 19.09.2016 unter http://dcljs.de/faq/antwort.php?Antwort=rechnen_runden


function runde(x, n) {
	
  if (n < 1 || n > 14) return false;
  var e = Math.pow(10, n);
  var k = (Math.round(x * e) / e).toString();
  if (k.indexOf('.') == -1) k += '.';
  k += e.toString().substring(1);
  return k.substring(0, k.indexOf('.') + n+1);
  
}// Passt das ADT-UKB Format f�r SWISSLAB an
// 
// $Id$

tmp = msg.copy();

// MSH 

tmp['MSH']['MSH.15']['MSH.15.1'] = 'AL';
tmp['MSH']['MSH.16']['MSH.16.1'] = 'NE';
tmp['MSH']['MSH.5']['MSH.5.1'] = 'SWISSLAB';
tmp['MSH']['MSH.6']['MSH.6.1'] = 'MED';
		
msg = tmp.copy();// Passt das ADT-UKB Format f�r SWISSLAB an
// 
// $Id$

// MSH 

msg['MSH']['MSH.15']['MSH.15.1'] 	= 'AL';
msg['MSH']['MSH.16']['MSH.16.1'] 	= 'NE';
msg['MSH']['MSH.3']['MSH.3.1'] 		= 'ISH';
msg['MSH']['MSH.5']['MSH.5.1'] 		= 'ISH';
msg['MSH']['MSH.6']['MSH.6.1'] 		= 'MED';// Passt das ADT-UKB Format f�r SWISSLAB an
// 
// $Id$

// MSH 

msg['MSH']['MSH.15']['MSH.15.1'] 	= 'AL';
msg['MSH']['MSH.16']['MSH.16.1'] 	= 'NE';
msg['MSH']['MSH.3']['MSH.3.1'] 		= 'ISH';
msg['MSH']['MSH.5']['MSH.5.1'] 		= 'ISH';
msg['MSH']['MSH.6']['MSH.6.1'] 		= 'MED';



// PID

// F�hrende Null voranstellen f�r SWISSLAB.
msg['PID']['PID.2']['PID.2.1'] = '0' + msg['PID']['PID.2']['PID.2.1'].toString();
msg['PID']['PID.3']['PID.3.1'] = '0' + msg['PID']['PID.3']['PID.3.1'].toString();


// PV1

// F�hrende Null voranstellen f�r SWISSLAB.
msg['PV1']['PV1.19']['PV1.19.1'] = '0' + msg['PV1']['PV1.19']['PV1.19.1'].toString();

// WENN Stationfeld leer und Fachabteilungsfeld gef�llt, DANN
// Kopier den Inhalt des Fachabteilungsfelds in das Stationsfeld.

if (msg['PV1']['PV1.3']['PV1.3.4'].toString() != '' &&
    msg['PV1']['PV1.3']['PV1.3.1'].toString() == '') {

	msg['PV1']['PV1.3']['PV1.3.1'] = msg['PV1']['PV1.3']['PV1.3.4'].toString();

}// Anpassungen f�r den ORBIS Chrono Import:
// (1) PID ohne f�hrende Null	-> PID
// (2) Fallnummer ohne f�hrende Null	-> PV1
// (3) Laborauftragsnummer/Befundnummer erhalten ein K als Postfix	-> ORC, alle OBR, alle OBX
// (4) Laborparameterk�rzel erhalten ein "K_" als Pr�fix.	-> alle OBX

// Konstanten:
var PostfixKBC 	= 'K';
var PrefixKBC_Param = 'K_';

// (1)
// http://www.mirthproject.org/community/forums/showthread.php?t=9911
msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().replace(/^0+/g,'');

// (2)
// http://www.mirthproject.org/community/forums/showthread.php?t=9911
msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().replace(/^0+/g,'');

// (3) 
// ORC-2 Feld erh�lt ein Postfix 

for each (seg in msg.children()) {
	
	if (seg.name().toString() == "ORC") {
		
		seg['ORC.2']['ORC.2.1'] = seg['ORC.2']['ORC.2.1'].toString() + PostfixKBC;
		
	} else if (seg.name().toString() == "OBR") {
		seg['OBR.2']['OBR.2.1'] = seg['OBR.2']['OBR.2.1'].toString() + PostfixKBC;
		
	} else if (seg.name().toString() == "OBX") {
		seg['OBX.3']['OBX.3.1'] = PrefixKBC_Param + seg['OBX.3']['OBX.3.1'].toString();
		
	}
}// Passt das ADT-UKB Format f�r SWISSLAB an
// 
// $Id$

// MSH 

msg['MSH']['MSH.15']['MSH.15.1'] = 'AL';
msg['MSH']['MSH.16']['MSH.16.1'] = 'NE';
msg['MSH']['MSH.5']['MSH.5.1'] = 'SWISSLAB';
msg['MSH']['MSH.6']['MSH.6.1'] = 'MED';
msg['MSH']['MSH.3']['MSH.3.1'] = 'ISH';// Anpassungen an der Eingangsnachricht f�r den erfolgreichen OBBIS Import:

//MSH
msg['MSH']['MSH.4']['MSH.4.1'] = 'IHT';
msg['MSH']['MSH.5']['MSH.5.1'] = 'ORBIS';
msg['MSH']['MSH.6']['MSH.6.1'] = 'UKB';
msg['MSH']['MSH.9']['MSH.9.2'] = 'T09';
msg['MSH']['MSH.9']['MSH.9.3'] = 'MDM_T09';
msg['MSH']['MSH.12']['MSH.12.1'] = '2.3';

// PID
msg['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// PV1
msg['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

// TXA
msg['TXA']['TXA.2']['TXA.2.1']	= 'Immunh�matologischer Endbefund #0305#';
msg['TXA']['TXA.12']['TXA.12.2']	= 'IHT';
msg['TXA']['TXA.16']['TXA.16.1']   = $('vPathToJaifukb1488') + $('vAttachmentFileName');
// OBX
delete msg['OBX'];var strMSH41 = msg['MSH']['MSH.4']['MSH.4.1'].toString();

if (strMSH41 == 'KHO') {

	msg['ORC']['ORC.2']['ORC.2.1'] = msg['ORC']['ORC.2']['ORC.2.1'].toString() + 'H';

	for each (seg in msg.children()) {
		
		if (seg.name().toString() == "OBR") {

			seg['OBR.2']['OBR.2.1'] = seg['OBR.2']['OBR.2.1'].toString() + 'H';

		}
	}

}// Passt das DFT-UKB Format vom Zentrallabor f�r ORBIS an
//
// $Id$
tmp = msg.copy();

for(var i=0;i<msg['FT1'].length();i++) {
	tmp['FT1'][i]['FT1.20']['FT1.20.1'] = '960611'; 
}

msg = tmp.copy();// Passt das DFT-MVZ Format f�r ORBIS an

tmp = msg.copy();

//F�llen der sendenden Applikation und Buchungskreis MVZ

tmp['MSH']['MSH.5']['MSH.5.1'] = 'ORBIS';
tmp['MSH']['MSH.6']['MSH.6.1'] = 'MVZ';


// MVZ-IHT Kostenstelle des Erbringers in FT1.20.1 wird gef�llt mit 973087
// UKB-Kostenstellen der Anfordernden OE sind in der MVZ-Einrichtung nicht bekannt --> FT1.21.1 = 0

for(var i=0;i<msg['FT1'].length();i++) {
		
		tmp['FT1'][i]['FT1.20']['FT1.20.1'] = '973087'; 
		tmp['FT1'][i]['FT1.21']['FT1.21.1'] = '0';
}

msg = tmp.copy();// Anpassungen f�r den ORBIS Chrono Import:
// (1) PID ohne f�hrende Null	-> PID
// (2) Fallnummer ohne f�hrende Null	-> PV1
// (3) Laborauftragsnummer/Befundnummer erhalten ein K als Postfix	-> ORC, alle OBR, alle OBX
// (4) Laborparameterk�rzel erhalten ein "K_" als Pr�fix.	-> alle OBX

// Konstanten:
var PostfixKBC 	= 'K';
var PrefixKBC_Param = 'K_';

// (1)
// http://www.mirthproject.org/community/forums/showthread.php?t=9911
msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().replace(/^0+/g,'');

// (2)
// http://www.mirthproject.org/community/forums/showthread.php?t=9911
// msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().replace(/^0+/g,'');
// Austauschen der stornierten Fallnummer mit der neu gefundenen und aktuell g�ltigen Fallnummer zum Laborauftrag:
msg['PV1']['PV1.19']['PV1.19.1'] = $('vNeueFALLNR');

// (3) 
// ORC-2 Feld erh�lt ein Postfix 

for each (seg in msg.children()) {
	
	if (seg.name().toString() == "ORC") {
		
		seg['ORC.2']['ORC.2.1'] = seg['ORC.2']['ORC.2.1'].toString() + PostfixKBC;
		
	} else if (seg.name().toString() == "OBR") {
		seg['OBR.2']['OBR.2.1'] = seg['OBR.2']['OBR.2.1'].toString() + PostfixKBC;
		
	} else if (seg.name().toString() == "OBX") {
		seg['OBX.3']['OBX.3.1'] = PrefixKBC_Param + seg['OBX.3']['OBX.3.1'].toString();
		
	}
}// Anpassungen f�r den ORBIS Chrono Import:
// (1) PID ohne f�hrende Null	-> PID
// (2) Fallnummer ohne f�hrende Null	-> PV1
// (3) Laborparameterk�rzel erhalten ein "K_" als Pr�fix.	-> alle OBX

// Konstanten:
var PrefixKBC_Param = 'K_';

// (1)
// http://www.mirthproject.org/community/forums/showthread.php?t=9911
msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().replace(/^0+/g,'');

// (2)
// http://www.mirthproject.org/community/forums/showthread.php?t=9911
msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().replace(/^0+/g,'');

// (3) 
// ORC-2 Feld erh�lt ein Postfix 

for each (seg in msg.children()) {
	
	if (seg.name().toString() == "OBX") {
		seg['OBX.3']['OBX.3.1'] = PrefixKBC_Param + seg['OBX.3']['OBX.3.1'].toString();
		
	}
}// Agfa unterst�tzt f�r Dokumentenaktualisierungen nur den MDM Nachrichtentyp T09.
// Swisslab sendet T08.
// Im Folgenden wird eine �berschreibung vorgenommen (WENN T08, DANN T09).
// PK, 14.09.2015.

// MSH Segment:

// Sending Application
msg['MSH']['MSH.3']['MSH.3.1'] = 'KBC';

if (msg['MSH']['MSH.9']['MSH.9.2'].toString() == 'T08') {

	msg['MSH']['MSH.9']['MSH.9.2'] = 'T09';
	msg['MSH']['MSH.9']['MSH.9.3'] = 'MDM_T09';
	msg['EVN']['EVN.1']['EVN.1.1'] = 'T09';

}

// PID
// yourString = Number(yourString).toString();
// Quelle: http://stackoverflow.com/questions/8276451/remove-truncate-leading-zeros-by-javascript-jquery

msg['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString()).toString();

// PV1
msg['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString()).toString();


// TXA Segment:
// TXA.12.2 Konstante = "LABORSWISSLAB".
msg['TXA']['TXA.12']['TXA.12.2'] = 'LABORSWISSLAB';

// TXA.16.1 - Voranstellen des ftp Pfades:
// var strFTPPfad = 'ftp://hl7mdm:etRgZIvSthUFxBpZ@UKB216.klinik.bn/PDF/';
var strFTPPfad = 'ftp://hl7mdm:etRgZIvSthUFxBpZ@UKB1469.klinik.bn/PDF/';

msg['TXA']['TXA.16']['TXA.16.1'] = strFTPPfad + msg['TXA']['TXA.16']['TXA.16.1'].toString();// Passt das ADT-UKB Format f�r SWISSLAB an
// 
// $Id$

// MSH 

msg['MSH']['MSH.15']['MSH.15.1'] = 'AL';
msg['MSH']['MSH.16']['MSH.16.1'] = 'NE';
msg['MSH']['MSH.5']['MSH.5.1'] = 'SWISSLAB';
msg['MSH']['MSH.6']['MSH.6.1'] = 'MED';
msg['MSH']['MSH.3']['MSH.3.1'] = 'ISH';// Anpassungen f�r den ORBIS Chrono Import:
// (1) PID ohne f�hrende Null	-> PID
// (2) Fallnummer ohne f�hrende Null	-> PV1
// (3) Laborauftragsnummer/Befundnummer erhalten ein K als Postfix	-> ORC, alle OBR, alle OBX
// (4) Laborparameterk�rzel erhalten ein "K_" als Pr�fix.	-> alle OBX

// Konstanten:
var PostfixKBC 	= 'K';
var PrefixKBC_Param = 'K_';

// (1)
// http://www.mirthproject.org/community/forums/showthread.php?t=9911
msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().replace(/^0+/g,'');

// (2)
// http://www.mirthproject.org/community/forums/showthread.php?t=9911
msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().replace(/^0+/g,'');

// (3) 
// ORC-2 Feld erh�lt ein Postfix 

for each (seg in msg.children()) {
	
	if (seg.name().toString() == "ORC") {
		
		seg['ORC.2']['ORC.2.1'] = seg['ORC.2']['ORC.2.1'].toString() + PostfixKBC;
		
	} else if (seg.name().toString() == "OBR") {
		seg['OBR.2']['OBR.2.1'] = seg['OBR.2']['OBR.2.1'].toString() + PostfixKBC;
		
	} else if (seg.name().toString() == "OBX") {
		seg['OBX.3']['OBX.3.1'] = PrefixKBC_Param + seg['OBX.3']['OBX.3.1'].toString();
		
	}
}// Anpassungen f�r den ORBIS Chrono Import:
// (1) PID ohne f�hrende Null	-> PID
// (2) Fallnummer ohne f�hrende Null	-> PV1
// (3) Laborauftragsnummer/Befundnummer erhalten ein K als Postfix	-> ORC, alle OBR, alle OBX
// (4) Laborparameterk�rzel erhalten ein "K_" als Pr�fix.	-> alle OBX

// Konstanten:
var PostfixKBC 	= 'K';
var PrefixKBC_Param = 'K_';

// (1)
// http://www.mirthproject.org/community/forums/showthread.php?t=9911
msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().replace(/^0+/g,'');

// (2)
// http://www.mirthproject.org/community/forums/showthread.php?t=9911
msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().replace(/^0+/g,'');

// (3) 
// ORC-2 Feld erh�lt ein Postfix 

for each (seg in msg.children()) {
	
	if (seg.name().toString() == "ORC") {
		
		seg['ORC.2']['ORC.2.1'] = seg['ORC.2']['ORC.2.1'].toString() + PostfixKBC;
		
	} else if (seg.name().toString() == "OBR") {
		seg['OBR.2']['OBR.2.1'] = seg['OBR.2']['OBR.2.1'].toString() + PostfixKBC;
		
	} else if (seg.name().toString() == "OBX") {
		seg['OBX.3']['OBX.3.1'] = PrefixKBC_Param + seg['OBX.3']['OBX.3.1'].toString();
		
	}
}// Vorgabe aus eGate Konfigureation:
// Die Konstante "AL" wird in das MSH15 Feld gesetzt.

msg['MSH']['MSH.15']['MSH.15.1'] = 'AL';

//Ambulanz OE bei ambulanten Patienten in das Feld PV1 3.1 kopieren, da Syncrotess es dort erwartet
if(msg['PV1']['PV1.2']['PV1.2.1'].toString()=="O")
	{
		msg['PV1']['PV1.3']['PV1.3.1'] = msg['PV1']['PV1.3']['PV1.3.4'].toString();
	}// Passt das ADT-UKB Format f�r Conworx an


// MSH 

msg['MSH']['MSH.15']['MSH.15.1'] = 'AL';
msg['MSH']['MSH.16']['MSH.16.1'] = 'NE';
// msg['MSH']['MSH.5']['MSH.5.1'] = 'SWISSLAB';
// msg['MSH']['MSH.6']['MSH.6.1'] = 'MED';
// msg['MSH']['MSH.3']['MSH.3.1'] = 'ISH';// Legt den Inhalt des DICOM-Attachments in einem JPEG-Byte Array ab
//
// $id$


// FileContent = DICOMUtil.convertDICOMToByteArray('JPEG', messageObject);
// channelMap.put('FileContent',FileUtil.encode(FileContent));

FileContent = DICOMUtil.convertDICOM('JPEG', connectorMessage, 1);
channelMap.put('FileContent',FileContent);// Falls die Verbindungsprobleme weiter bestehen muss ggf. auf Javascript zur�ckgegriffen werden:
// siehe http://hl7starterkit.com/mirth-connecting-to-sftp-with-jsch-java-class/// Wandelt eine DICOM-datei in eine MDM-Datei um
//
// $id$

// Mapping AETitle -> Fachrichtung
var AEtitleOE = {
    "HNK94600":"HNO"
}

// Mapping AETitle -> Dokumenztenart
var AEtitleDocumenttype = {
	"HNK94600":"Ultraschall"
}

// Pfad f�r Dateibereitstellung auf dem Server
var prefix = '/egate/data/orbis/KHV/jaif/docs/';

// MSH
tmp['MSH']['MSH.3']['MSH.3.1'] = msg['tag00081010'].toString().listlookup(AEtitleOE);;
tmp['MSH']['MSH.4']['MSH.4.1'] = msg['tag00081010'].toString().listlookup(AEtitleOE);
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['tag0008002A'].toString().substring(0,14);
tmp['MSH']['MSH.10']['MSH.10.1'] = $('UID');

// EVN
tmp['EVN']['EVN.2']['EVN.2.1'] = msg['tag0008002A'].toString().substring(0,14);

// PID
tmp['PID']['PID.3']['PID.3.1'] = msg['tag00100020'].toString();
tmp['PID']['PID.5'] = msg['tag00100010'].toString();
tmp['PID']['PID.7']['PID.7.1'] = msg['tag00100030'].toString();
tmp['PID']['PID.8']['PID.8.1'] = msg['tag00100040'].toString();

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['tag00080050'].toString();

// TXA
tmp['TXA']['TXA.2']['TXA.2.1'] = msg['tag00081010'].toString().listlookup(AEtitleDocumenttype);
tmp['TXA']['TXA.3']['TXA.3.1'] = 'JPG';
tmp['TXA']['TXA.8']['TXA.8.1'] = msg['tag0008002A'].toString().substring(0,14);
tmp['TXA']['TXA.12']['TXA.12.1'] = $('UID');
tmp['TXA']['TXA.12']['TXA.12.2'] = msg['tag00081010'].toString();
tmp['TXA']['TXA.16']['TXA.16.1'] = prefix + $('UID') + '.jpg';
tmp['TXA']['TXA.17']['TXA.17.1'] = 'F';// Transformationen, wie vormals in eGate in Mirth abbilden.
// PK, 07.10.2014.


// (1) PV1.19 -> f�hrende Null wegnehmen.
// http://stackoverflow.com/questions/6676488/remove-leading-zeros-from-a-number-in-javascript
msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().replace(/^0+/, '');

// (2) PID.3 -> f�hrende Null wegnehmen = letzte 8 Stellen der PID nehmen, 01234567 ist eine
// zul�ssige PID, hier darf die erste Null nicht weggenommen werden.
msg['PID']['PID.3']['PID.3.1']  = msg['PID']['PID.3']['PID.3.1'].toString().slice(-7);

// (3) Entity Identifier bestimmen
var strKlinik = msg['MSH']['MSH.4']['MSH.4.1'].toString();	// Anpassung 19.11.2018, PK. Anscheinend wurde seit Beginn der Schnittstelleneinrichtung das falsche Feld ausgewertet.Korrektur nach Vorgabe von Hr. V�lk nun erfolgt.

switch (strKlinik) {
    case 'GEB':
        strKlinikKuerzel = "30";
        break;
    case 'URO':
        strKlinikKuerzel = "16";
        break;
    case 'MKO':
        strKlinikKuerzel = "26";
        break;
    case 'MED':
        strKlinikKuerzel = "07";
        break;
    case 'KAR':
        strKlinikKuerzel = "24";	// Anpassung am 12.11.2018, PK; es wurde eine neue Untersuchungsgruppe "Bronchoskopie" in ViewPoint f�r die Kardiologie eingerichtet.
        						// In ViewPoint muss durch GE/Hr.Hass sichergestellt werden, dass bei Diagnosen und Prozeduren (,die �ber ViewPoint-Anwender dieser
        						// Gruppe erfasst werden), in den zugeh�rigen HL7 BAR Nachrichten im MSH-4  "KAR" steht. Dies f�hrt in ORBIS dann 
        						// zu Zuordnung zur OE "24" (Kardiologie)
        break;
    default:
        strKlinikKuerzel = "";
}


// (3a) DG1.11 -> Klinikk�rzel schreiben in Abh�ngigkeit von MSH.3.1 (Entity Identifier)
if (msg['DG1'].length() > 0) {
	// Klinikk�rzel in jedes DG1.11 Feld schreiben.
	for (i=0; i< msg['DG1'].length(); i++) {
		 msg['DG1'][i]['DG1.1']['DG1.1.1'] = ''; // L�schen der ID (alt)
		// msg['DG1'][i]['DG1.1']['DG1.1.1'] = 'VP' + strKlinikKuerzel+ msg['DG1'][i]['DG1.1']['DG1.1.1'];
		msg['DG1'][i]['DG1.11']['DG1.11.1'] = strKlinikKuerzel;
	}
}


// (3b) PR1.11 -> Klinikk�rzel schreiben in Abh�ngigkeit von MSH.3.1 (Entity Identifier)
if (msg['PR1'].length() > 0) {
	// Klinikk�rzel in jedes PR1.11 Feld schreiben.
	for (i=0; i< msg['PR1'].length(); i++) {
		 msg['PR1'][i]['PR1.1']['PR1.1.1'] = ''; // L�schen der ID (alt)
		// msg['PR1'][i]['PR1.1']['PR1.1.1'] = 'VP' + strKlinikKuerzel + msg['PR1'][i]['PR1.1']['PR1.1.1'];
		msg['PR1'][i]['PR1.8']['PR1.8.1'] = strKlinikKuerzel;
	}
}// Passt das ADT-UKB Format f�r VIEWPOINT an
// 
// $Id$


// MSH 
msg['MSH']['MSH.15']['MSH.15.1'] 	= 'NE';
msg['MSH']['MSH.16']['MSH.16.1'] 	= 'NE';
msg['MSH']['MSH.5']['MSH.5.1'] 		= 'VIEWPOINT';
msg['MSH']['MSH.6']['MSH.6.1'] 		= 'MED';

// PID
msg['PID']['PID.3']['PID.3.1']		= ('0' + msg['PID']['PID.3']['PID.3.1'].toString()).slice(-8);

// PV1
// Fallnummer mit f�hrenden Nullen auff�llen.
msg['PV1']['PV1.19']['PV1.19.1']	= ('0' 	  + msg['PV1']['PV1.19']['PV1.19.1'].toString()).slice(-8);


// Arztid mit f�hrenden Nullen auff�llen.
// Das PV1.8 Feld ist nur gef�llt, wenn Hausarztadressdaten �bermittelt werden.
// Da dies nicht immer der Fall ist muss gepr�ft werden, ob eine (Haus-)ArztID vorliegt, 
// bei der dann das Pr�fix "0000" vorangestellt wird.

if(msg['PV1']['PV1.8']['PV1.8.1'].toString().length>0) {

	msg['PV1']['PV1.8']['PV1.8.1']		= ('0000000000' + msg['PV1']['PV1.8']['PV1.8.1'].toString()).slice(-10);
}

if(msg['PV1']['PV1.9']['PV1.9.1'].toString().length>0) {

	msg['PV1']['PV1.9']['PV1.9.1']		= ('0000000000' + msg['PV1']['PV1.9']['PV1.9.1'].toString()).slice(-10);
}// Transformationen f�r ORBIS/ChronoSrv Import auf dem ukb569.
// Vorlage eGate Transformation.

// Es m�ssen 6 Transformationsregel �bernommen werden.
// 1. MSH.3 : Text "Textbefund" einf�gen.
// 2. PID.3 : f�hrende Null wegschneiden.
// 3. PV1.19: f�hrende Null wegschneiden.
// 4. ORC.3 : Pr�fix "#" und Postfix "V" hinzuf�gen.
// 5. OBR.4 : Fehler !Text "Gastroskopie^�GD" einf�gen (Konstante). OBR.4.1 = "Gastroskopie", OBR.4.2 = "�GV".
//          : OBX.3  

msg['MSH']['MSH.3']['MSH.3.1'] 		= 'Textbefund';
msg['PID']['PID.3']['PID.3.1'] 		= Number(msg['PID']['PID.3']['PID.3.1'].toString());
msg['PV1']['PV1.19']['PV1.19.1'] 	= Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

var Prefix 	= '#';
var Postfix	= 'V';

msg['ORC']['ORC.3']['ORC.3.1']		= Prefix + msg['ORC']['ORC.3']['ORC.3.1'].toString() + Postfix;
// keine Verweis-Text wie in der GEB.
msg['OBR']['OBR.4']['OBR.4.1']		= msg['OBX']['OBX.3']['OBX.3.1'].toString();// Passt das ADT-UKB Format f�r VIEWPOINT an
// 
// $Id$


// MSH 
msg['MSH']['MSH.15']['MSH.15.1'] 	= 'NE';
msg['MSH']['MSH.16']['MSH.16.1'] 	= 'NE';
msg['MSH']['MSH.5']['MSH.5.1'] 		= 'VIEWPOINT';
msg['MSH']['MSH.6']['MSH.6.1'] 		= 'MED';

// PID
msg['PID']['PID.3']['PID.3.1']		= ('0' + msg['PID']['PID.3']['PID.3.1'].toString()).slice(-8);

// PV1
// Fallnummer mit f�hrenden Nullen auff�llen.
msg['PV1']['PV1.19']['PV1.19.1']	= ('0' 	  + msg['PV1']['PV1.19']['PV1.19.1'].toString()).slice(-8);


// Arztid mit f�hrenden Nullen auff�llen.
// Das PV1.8 Feld ist nur gef�llt, wenn Hausarztadressdaten �bermittelt werden.
// Da dies nicht immer der Fall ist muss gepr�ft werden, ob eine (Haus-)ArztID vorliegt, 
// bei der dann das Pr�fix "0000" vorangestellt wird.

if(msg['PV1']['PV1.8']['PV1.8.1'].toString().length>0) {

	msg['PV1']['PV1.8']['PV1.8.1']		= ('0000000000' + msg['PV1']['PV1.8']['PV1.8.1'].toString()).slice(-10);
}

if(msg['PV1']['PV1.9']['PV1.9.1'].toString().length>0) {

	msg['PV1']['PV1.9']['PV1.9.1']		= ('0000000000' + msg['PV1']['PV1.9']['PV1.9.1'].toString()).slice(-10);
}// Transformationen f�r ORBIS/ChronoSrv Import auf dem ukb569.
// Vorlage eGate Transformation.

// Es m�ssen 6 Transformationsregel �bernommen werden.
// 1. MSH.3 : Text "Textbefund" einf�gen.
// 2. PID.3 : f�hrende Null wegschneiden.
// 3. PV1.19: f�hrende Null wegschneiden.
// 4. ORC.3 : Pr�fix "#" und Postfix "G" hinzuf�gen.
// 5. OBR.4 : Fehler: Text "Geburtshilfe, Pr�nataluntersuchung" einf�gen (Konstante).
//          : OBX.3 
// 6. OBR.22: ORC.9 Zeitstempel einf�gen

msg['MSH']['MSH.3']['MSH.3.1'] 		= 'Textbefund';
msg['PID']['PID.3']['PID.3.1'] 		= Number(msg['PID']['PID.3']['PID.3.1'].toString());
msg['PV1']['PV1.19']['PV1.19.1'] 	= Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

var Prefix 	= '#';
var Postfix	= 'G';

msg['ORC']['ORC.3']['ORC.3.1']		= Prefix + msg['ORC']['ORC.3']['ORC.3.1'].toString() + Postfix;

var strVerweis = 'Geburtshilfe, ';

msg['OBR']['OBR.4']['OBR.4.1']		= strVerweis + msg['OBX']['OBX.3']['OBX.3.1'].toString();

msg['OBR']['OBR.22']['OBR.22.1']	= msg['ORC']['ORC.9']['ORC.9.1'].toString();// Passt das ADT-UKB Format f�r VIEWPOINT an
// 
// $Id$


// MSH 
msg['MSH']['MSH.15']['MSH.15.1'] 	= 'NE';
msg['MSH']['MSH.16']['MSH.16.1'] 	= 'NE';
msg['MSH']['MSH.5']['MSH.5.1'] 	= 'VIEWPOINT';
msg['MSH']['MSH.6']['MSH.6.1'] 	= 'MED';

// PID
msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().lpad("0", 8);

// PV1
// Fallnummer mit f�hrenden Nullen auff�llen.
msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().lpad("0", 8);


// Arztid mit f�hrenden Nullen auff�llen.
// Das PV1.8 Feld ist nur gef�llt, wenn Hausarztadressdaten �bermittelt werden.
// Da dies nicht immer der Fall ist muss gepr�ft werden, ob eine (Haus-)ArztID vorliegt, 
// bei der dann das Pr�fix "0000" vorangestellt wird.

if(msg['PV1']['PV1.8']['PV1.8.1'].toString().length>0)
	msg['PV1']['PV1.8']['PV1.8.1'] = msg['PV1']['PV1.8']['PV1.8.1'].toString().lpad("0", 10);

if(msg['PV1']['PV1.9']['PV1.9.1'].toString().length>0)
	msg['PV1']['PV1.9']['PV1.9.1'] = msg['PV1']['PV1.9']['PV1.9.1'].toString().lpad("0", 10);// Transformation des VIEWPOINT BAR^P01|P03|P05 (2.3) Format f�r Dedalus
//
// $Id$

/* 
  Anhand der Aktionscodes
  A = add
  D = delete
  U = update
  in den Segmenten DG1 und PR1 wird festgelegt, welche Art von HL7-Nachricht
  erzeugt wird. Dies geht aber nur einheitlich fuer die gesamte HL7-Nachricht.
*/       

var patientClass = new RegExp("I|O|TS");

// HL7-Nachricht ohne Kopie des Originals anlegen
var tmp = <HL7Message/>;

// MSH
tmp['MSH'] = msg['MSH'].copy();
tmp['MSH']['MSH.5']['MSH.5.1'] = 'ORBIS';
tmp['MSH']['MSH.6']['MSH.6.1'] = 'JAIF';
tmp['MSH']['MSH.12']['MSH.12.1'] = '2.3';

// EVN
tmp['EVN'] = msg['EVN'].copy();

// PID
tmp['PID'] = msg['PID'].copy();
tmp['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// PV1
tmp['PV1'] = msg['PV1'].copy();
tmp['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());
if (!patientClass.test(msg['PV1']['PV1.2']['PV1.2.1'].toString()))
	tmp['PV1']['PV1.2']['PV1.2.1'] = 'O';
tmp['PV1']['PV1.3']='';	

// DG1
if (msg['DG1'].length() > 0)
{
	for (var i = 0; i < msg['DG1'].length(); i++) {
		tmp['DG1'][i] = msg['DG1'][i].copy()
		// Segmentnummer/ICD Identifikation
		tmp['DG1'][i]['DG1.1']['DG1.1.1'] = "VP-" + msg['DG1'][i]['DG1.1']['DG1.1.1'].toString();
	}
}

// PR1
if (msg['PR1'].length() > 0) {
	for (var i = 0; i < msg['PR1'].length(); i++) {
		tmp['PR1'][i] = msg['PR1'][i].copy()
		// Segmentnummer
		tmp['PR1'][i]['PR1.1']['PR1.1.1'] = "VP-" + msg['PR1'][i]['PR1.1']['PR1.1.1'].toString();
	}
}

msg = tmp.copy();// Anpassung des Viewpoint6 ORU Formats f�r ORBIS// OBR-20 gibt die Befundart an: d.h. Pathologiebefund, Radiologiebefund, etc.
// Eingef�hrt am 17.12.2015, PK.
msg['OBR']['OBR.20']['OBR.20.1'] = 'Sonstige Befunde';// Passt das ADT-UKB Format f�r VIEWPOINT an
// 
// $Id$


// MSH 
msg['MSH']['MSH.15']['MSH.15.1'] 	= 'NE';
msg['MSH']['MSH.16']['MSH.16.1'] 	= 'NE';
msg['MSH']['MSH.5']['MSH.5.1'] 	= 'VIEWPOINT';
msg['MSH']['MSH.6']['MSH.6.1'] 	= 'MED';

// PID
msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().lpad("0", 8);

// PV1
// Fallnummer mit f�hrenden Nullen auff�llen.
msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().lpad("0", 8);


// Arztid mit f�hrenden Nullen auff�llen.
// Das PV1.8 Feld ist nur gef�llt, wenn Hausarztadressdaten �bermittelt werden.
// Da dies nicht immer der Fall ist muss gepr�ft werden, ob eine (Haus-)ArztID vorliegt, 
// bei der dann das Pr�fix "0000" vorangestellt wird.

if(msg['PV1']['PV1.8']['PV1.8.1'].toString().length>0)
	msg['PV1']['PV1.8']['PV1.8.1'] = msg['PV1']['PV1.8']['PV1.8.1'].toString().lpad("0", 10);

if(msg['PV1']['PV1.9']['PV1.9.1'].toString().length>0)
	msg['PV1']['PV1.9']['PV1.9.1'] = msg['PV1']['PV1.9']['PV1.9.1'].toString().lpad("0", 10);/* Transformer zum Aufbereiten der HL7-MDM Nachrichten von Viewpoint 6

$Id$

*/

urlPrefix = '\\\\ukb2578.klinik.bn\\vppdf_p\\';
verweistext = 'VIEWPOINT';

var aktenplan = {
"Abdomensonographie":"#0311#",
"Abdominelle Venen":"#0311#",
"Amniozentese":"#0313#",
"Analmanometrie":"#0315#",
"Anamnesebogen":"#0201#",
"Aorta abd. - Beckenart.":"#0311#",
"Arm- und Beinarterien":"#0311#",
"Arm- und Beinvenen":"#0311#",
"Arztbrief":"#0101#",
"Arztbrief Hebamme":"#0101#",
"Aufkl�rung Amniozentese":"#0201#",
"Aufkl�rung NT Screening":"#0201#",
"Ausgang der SS":"#0101#",
"Ballonenteroskopie Anal":"#0310#",
"Ballonenteroskopie Oral":"#0310#",
"Befund":"#0201#",
"Bewegungsapparat":"#0201#",
"Bildausdruck":"#0699#",
"Biophys. �berwachung":"#0299#",
"Brief":"#0101#",
"Bronchoskopie":"#0310#",
"Bypass":"#0299#",
"C13 Atemtest":"#0303#",
"Chorionzottenbiopsie":"#0313#",
"Diagnostischer Eingriff":"#0313#",
"Dialysezugang":"#0299#",
"Diverses":"#0899#",
"Dopplerdruckmessung":"#0311#",
"D�nndarm-Manometrie":"#0310#",
"EBUS":"#0311#",
"Endosonografie":"#0311#",
"ERCP":"#0310#",
"Etiketten Kind":"#0799#",
"Etiketten Mutter-Kind":"#0799#",
"EVAR":"#0401#",
"externer Befund":"#0103#",
"Extra-/Intrakraniell":"#0299#",
"Extrakraniell":"#0299#",
"Fetalblutentnahme":"#0313#",
"Fetozid":"#0401#",
"Fruchtwasserauff�llung":"#0401#",
"Fruchtwasserdrainage":"#0401#",
"Fr�hschwangerschaft":"#0299#",
"FW Drainage":"#0313#",
"Gastroskopie":"#0310#",
"Geburtenmeldung":"#0705#",
"Geburtenprotokoll":"#0202#",
"Geburtsbericht":"#0202#",
"Geburtsvorstellung":"#0202#",
"Gyn. Ultraschall":"#0311#",
"H2 Atemtest":"#0315#",
"Histologieanforderung":"#0398#",
"Info/Einverst�ndniserkl.":"#0799#",
"Info Feindiagnostik":"#0799#",
"Intrauterine Bluttransfusion":"#0305#",
"Jejunoskopie":"#0310#",
"Kapselendoskopie":"#0310#",
"Kind":"#0899#",
"Kinderultraschall":"#0311#",
"KM-Sonographie":"#0311#",
"Knochenmarkbiopsie":"#0313#",
"Kolontransitzeit":"#0315#",
"Koloskopie":"#0311#",
"Krei�saal / Entbindung":"#0299#",
"Laserablation":"#0401#",
"Mammasonographie":"#0311#",
"Medizinische Beratung":"#0299#",
"Merkblatt f�r W�chnerinnen":"#0299#",
"Mutter":"#0299#",
"Neugeb. Verlegungsbericht":"#0199#",
"Organpunktion":"#0313#",
"�sophagus-Manometrie":"#0315#",
"P�diatrische TEE":"#0311#",
"P�diatrische TTE":"#0311#",
"Partieller Abbruch":"#0401#",
"Pflegedokumentation":"#0299",
"pH-Metrie:":"#0315#",
"postp. Untersuchung":"#0299#",
"Pr�op. AV-Beurteilung":"#0299#",
"Pr�partaler Auf. inkl. US":"#0311#",
"PTCD":"#0401#",
"Rekto-Proktokopie":"#0310#",
"Schilddr�sensonographie":"#0311#",
"Sectio Bericht":"#0401#",
"Shunting":"#0401#",
"Sigmoidoskopie":"#0310#",
"Sono Urologie":"#0311#",
"Sphinkter-Oddi-Manometrie":"#0315#",
"Stressecho":"#0311#",
"TEE":"#0311#",
"Thoraxsonographie":"#0311#",
"Thrombozytentransfusion":"#0305#",
"Transkraniell":"#0311#",
"TTE":"#0311#",
"�berleitungsbogen Hebamme":"#0199#",
"Urogyn�kologische Untersuchung":"#0299#",
"US 1. Trimenon":"#0311#",
"US 2./3. Trimenon":"#0311#",
"VE- Bericht":"#0299#",
"Veneninsuffizienz":"#0299#",
"Venenmapping":"#0299#",
"Verlaufskontrolle":"#0299#",
"Verlegungsbericht Station":"#0102#",
"Viszerale Arterien":"#0299#"
};


// Kopiert die eingehende HL7 Nachricht in das OMT (ggf. mit Erweiterungen).
tmp = msg.copy();

// MSH
tmp['MSH']['MSH.3']['MSH.3.1'] = verweistext;
if (msg['MSH']['MSH.9']['MSH.9.2'].toString() != 'T11') {
	tmp['MSH']['MSH.9']['MSH.9.2'] = 'T09';
	// EVN
	tmp['EVN']['EVN.1']['EVN.1.1'] = 'T09';
}

// PID
tmp['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// PV1
tmp['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

// TXA
documentTitle = msg['TXA']['TXA.2']['TXA.2.1'].toString();
tmp['TXA']['TXA.2']['TXA.2.1'] = documentTitle + " " + documentTitle.listlookup(aktenplan, defaultValue ="#0399#");
tmp['TXA']['TXA.16']['TXA.16.1'] = urlPrefix + msg['TXA']['TXA.16']['TXA.16.1'].toString();

msg = tmp.copy();// OBR-20 gibt die Befundart an: d.h. Pathologiebefund, Radiologiebefund, etc.
// Eingef�hrt am 17.12.2015, PK.
msg['OBR']['OBR.20']['OBR.20.1'] = 'Sonstige Befunde';// Transformationen f�r ORBIS/SSST 

// 1. MSH.3 : Text "Textbefund" einf�gen.
msg['MSH']['MSH.3']['MSH.3.1'] = 'Textbefund';

// 2. PID.3 : f�hrende Null wegschneiden.
msg['PID']['PID.3']['PID.3.1'] = Number(msg['PID']['PID.3']['PID.3.1'].toString());

// 3. PV1.19: f�hrende Null wegschneiden.
msg['PV1']['PV1.19']['PV1.19.1'] = Number(msg['PV1']['PV1.19']['PV1.19.1'].toString());

// keine Verweis-Text wie in der GEB.
msg['OBR']['OBR.4']['OBR.4.1'] = msg['OBX']['OBX.3']['OBX.3.1'].toString();var famName = msg['PID']['PID.5']['PID.5.1'].toString();
var givName = msg['PID']['PID.5']['PID.5.2'].toString();
var maidName = msg['PID']['PID.6']['PID.6.1'].toString();
var orderNumber = msg['ORC']['ORC.2']['ORC.2.1'].toString();

//anonymisieren der Patientendaten, erster Buchstabe bleibt stehen.
msg['PID']['PID.5']['PID.5.1'] = famName.substring(0,1);
msg['PID']['PID.5']['PID.5.2'] = givName.substring(0,1);

//L�schen der Telefonnummer und Adresse
msg['PID']['PID.13']['PID.13.1'] = '';
msg['PID']['PID.11']['PID.11.1'] = '';
msg['PID']['PID.11']['PID.11.3'] = '';
msg['PID']['PID.11']['PID.11.5'] = '';


if (maidName.length>0) {
	msg['PID']['PID.6']['PID.6.1'] = maidName.substring(0,1);
}

//Auftragsnummer korrigieren, das Datum vorweg abschneiden, nur die eigentliche ANR belibt stehen
msg['ORC']['ORC.2']['ORC.2.1'] = orderNumber.substring(9);
for each (seg in msg.children()) {
	if (seg.name().toString() == 'OBR')
		seg['OBR.2']['OBR.2.1'] = orderNumber.substring(9);		
}

for(i=0;i<msg['OBX'].length(); i++)
{	
	if(msg['OBX'][i]['OBX.5']['OBX.5.1'].toString()=='!storno') {
		delete msg['OBX'][i]; //stornierte Analysen entfernen
	}

	msg['OBX'][i]['OBX.3']['OBX.3.1'] = 'V_' + msg['OBX'][i]['OBX.3']['OBX.3.1'].toString(); //V_ vor die Analysen-Namen voranstellen

	//if (msg['OBX'][i]['OBX.3']['OBX.3.1'].toString()=='V_interpret') // Stornierung aus dem Interpretationskommentar l�schen
	//{
	//	msg['OBX'][i]['OBX.5']['OBX.5.1'] = '';
	//	msg['OBX'][i]['OBX.11']['OBX.11.1'] = '';
	//	}
}channelMap.put('shortResponse',$('responseStatus').substring($('responseStatus').indexOf(":")+1).trim());var SMSBody = "{\"messages\":{\"authentication\":{\"producttoken\":\"53E47836-56C3-488E-B553-39EB6177E56B\"},\"msg\":[{\"allowedChannels\":[\"SMS\"],\
			\"from\":\""+$('senderName')+"\",\"to\":[{\"number\":\""+$('recieverNumber')+"\"}],\"minimumNumberOfMessageParts\":1,\
			\"maximumNumberOfMessageParts\":8,\"body\":{\"type\":\"auto\",\"content\":\""+$('SMSText')+"\"},\"reference\":\"MIRTH-SENDSMS\"}]}}";
channelMap.put('SMSBody',SMSBody);
tmp = SMSBody;
//logger.info("SMS body build:" + SMSBody);var MessageIndex = 0;
var OBXIndex = 0;
var OBXthere = false;
var OBXCount = 0;
for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		if (seg['OBX.3']['OBX.3.1'].toString().indexOf("V_cov")!=-1) {
		OBXthere = true;
		OBXIndex = parseInt(seg['OBX.1']['OBX.1.1'].toString());
		MessageIndex = parseInt(seg.childIndex())+1;
		OBXCount++;
		break;
	} else {
		OBXCount++;
	}
	}
}
if (OBXthere) {
var NTECount = 0;
var NTEIndex = 0;
//Check if after OBXindex comes an NTE
for (var i = MessageIndex; i < msg.children().length();i++) {
	if (msg.child(i).name().toString() == "NTE") {
		NTECount++;
		NTEIndex = parseInt(tmp['NTE'][0]['NTE.1']['NTE.1.1'].toString());
	}
	if (msg.child(i).name().toString() == "OBR" || msg.child(i).name().toString() == "OBX") {
		break;
	}
}
if (NTECount >= 1) {
createSegmentAfter('NTE', msg['NTE'][NTECount-1]);
//NTEIndex = NTECount;
} else {
createSegmentAfter('NTE', msg['OBX'][OBXCount-1]);	
//NTEIndex = NTECount;
}

msg['NTE'][NTECount]['NTE.1']['NTE.1.1']=NTEIndex+1;
msg['NTE'][NTECount]['NTE.2']['NTE.2.1']="O";
msg['NTE'][NTECount]['NTE.3']['NTE.3.1']=channelMap.get('responseStatus');
msg['NTE'][NTECount]['NTE.4']['NTE.4.1']="";
}
tmp=msg;var SMSBody = "{\"messages\":{\"authentication\":{\"producttoken\":\"7CA98D59-5FE0-4FBE-BFF8-D58F6B362472\"},\"msg\":[{\"allowedChannels\":[\"SMS\"],\
			\"from\":\""+$('senderName').substring(0,11)+"\",\"to\":[{\"number\":\""+$('recieverNumber')+"\"}],\"minimumNumberOfMessageParts\":1,\
			\"maximumNumberOfMessageParts\":8,\"body\":{\"type\":\"auto\",\"content\":\""+$('SMSText')+"\"},\"reference\":\"MIRTH-SENDSMS\"}]}}";
channelMap.put('SMSBody',SMSBody);var MessageIndex = 0;
var OBXIndex = 0;
for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		if (seg['OBX.3']['OBX.3.1'].toString().equals("V_covE")) {
		OBXIndex = parseInt(seg['OBX.1']['OBX.1.1'].toString());
		MessageIndex = parseInt(seg.childIndex());
	}
	}
}
var NTECount = 0;
//Check if after OBXindex comes an NTE
for (var i = MessageIndex; i < msg.children().length();i++) {
	if (msg.child(i).name().toString() == "NTE") {
		NTECount++;
	}
	if (msg.child(i).name().toString() == "OBR") {
		break;
	}
}
var NTEIndex = 0;
if (NTECount >= 1) {
createSegmentAfter('NTE', msg['NTE'][NTECount-1]);
NTEIndex = NTECount;
} else {
createSegmentAfter('NTE', msg['OBX'][OBXIndex-1]);	
NTEIndex = NTECount;
}

msg['NTE'][NTECount]['NTE.1']['NTE.1.1']=NTEIndex+1;
msg['NTE'][NTECount]['NTE.2']['NTE.2.1']="O";
msg['NTE'][NTECount]['NTE.3']['NTE.3.1']=channelMap.get('responseStatus');
msg['NTE'][NTECount]['NTE.4']['NTE.4.1']="";
tmp=msg;var MessageIndex = 0;
var OBXIndex = 0;
var OBXthere = false;
var OBXCount = 0;
for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		if (seg['OBX.3']['OBX.3.1'].toString().indexOf("V_cov")!=-1) {
		OBXthere = true;
		OBXIndex = parseInt(seg['OBX.1']['OBX.1.1'].toString());
		MessageIndex = parseInt(seg.childIndex())+1;
		OBXCount++;
		break;
	} else {
		OBXCount++;
	}
	}
}

//Find NTEs that are before our OBX Segment and preserve them!
var otherNTECount = 0;
for (var i = 0; i < MessageIndex;i++) {
	if (msg.child(i).name().toString() == "NTE") {
		otherNTECount++;
	}
	if (msg.child(i).name().toString() == "OBR" || msg.child(i).name().toString() == "OBX") {
		break;
	}
}

if (OBXthere) {
var NTECount = 0;
var NTEIndex = 0;
//Check if after OBXindex comes an NTE
for (var i = MessageIndex; i < msg.children().length();i++) {
	if (msg.child(i).name().toString() == "NTE") {
		NTEIndex = parseInt(msg['NTE'][NTECount]['NTE.1']['NTE.1.1'].toString());
		NTECount++;
	}
	if (msg.child(i).name().toString() == "OBR" || msg.child(i).name().toString() == "OBX") {
		break;
	}
}
if (NTECount >= 1) {
createSegmentAfter('NTE', msg['NTE'][NTECount-1+otherNTECount]);
//NTEIndex = NTECount;
} else {
createSegmentAfter('NTE', msg['OBX'][OBXCount-1]);	
//NTEIndex = NTECount;
}

msg['NTE'][NTECount+otherNTECount]['NTE.1']['NTE.1.1']=NTEIndex+1;
msg['NTE'][NTECount+otherNTECount]['NTE.2']['NTE.2.1']="O";
msg['NTE'][NTECount+otherNTECount]['NTE.3']['NTE.3.1']=$('responseStatus');
msg['NTE'][NTECount+otherNTECount]['NTE.4']['NTE.4.1']="";

if ($('passwordFound')==true && $('eMailPresent')==true) {
createSegmentAfter('NTE', msg['NTE'][NTECount+otherNTECount]);
msg['NTE'][NTECount+1+otherNTECount]['NTE.1']['NTE.1.1']=NTEIndex+2;
msg['NTE'][NTECount+1+otherNTECount]['NTE.2']['NTE.2.1']="O";
msg['NTE'][NTECount+1+otherNTECount]['NTE.3']['NTE.3.1']="Link zu Befunddatei versendet.";
msg['NTE'][NTECount+1+otherNTECount]['NTE.4']['NTE.4.1']="";
}

}



tmp=msg;var SMSBody = "{\"messages\":{\"authentication\":{\"producttoken\":\"53E47836-56C3-488E-B553-39EB6177E56B\"},\"msg\":[{\"allowedChannels\":[\"SMS\"],\
			\"from\":\""+$('senderName')+"\",\"to\":[{\"number\":\""+$('recieverNumber')+"\"}],\"minimumNumberOfMessageParts\":1,\
			\"maximumNumberOfMessageParts\":8,\"body\":{\"type\":\"auto\",\"content\":\""+$('SMSText')+"\"},\"reference\":\"MIRTH-SENDSMS\"}]}}";
channelMap.put('SMSBody',SMSBody);
tmp = SMSBody;
//logger.info("SMS body build:" + SMSBody);var MessageIndex = 0;
var OBXIndex = 0;
var OBXthere = false;
var OBXCount = 0;
for each (seg in msg.children()) {
	if (seg.name().toString() == "OBX") {
		if (seg['OBX.3']['OBX.3.1'].toString().indexOf("V_cov")!=-1) {
		OBXthere = true;
		OBXIndex = parseInt(seg['OBX.1']['OBX.1.1'].toString());
		MessageIndex = parseInt(seg.childIndex())+1;
		OBXCount++;
		//logger.info("OBX " + OBXIndex + " MessageIndex: " + MessageIndex);
		break;
	} else {
		OBXCount++;
	}
	}
}
if (OBXthere) {
var NTECount = 0;
var NTEIndex = 0;
//Check if after OBXindex comes an NTE
for (var i = MessageIndex; i < msg.children().length();i++) {
	//logger.info("Checking line " + msg.child(i).toString());
	if (msg.child(i).name().toString() == "NTE") {
		NTECount++;
		NTEIndex = parseInt(tmp['NTE'][0]['NTE.1']['NTE.1.1'].toString());
	}
	if (msg.child(i).name().toString() == "OBR" || msg.child(i).name().toString() == "OBX") {
		break;
	}
}
if (NTECount >= 1) {
createSegmentAfter('NTE', msg['NTE'][NTECount-1]);
//NTEIndex = NTECount;
} else {
createSegmentAfter('NTE', msg['OBX'][OBXCount-1]);	
//NTEIndex = NTECount;
}

msg['NTE'][NTECount]['NTE.1']['NTE.1.1']=NTEIndex+1;
msg['NTE'][NTECount]['NTE.2']['NTE.2.1']="O";
msg['NTE'][NTECount]['NTE.3']['NTE.3.1']=$('responseStatus');
msg['NTE'][NTECount]['NTE.4']['NTE.4.1']="";

if ($('passwordFound') && $('eMailPresent')) {
createSegmentAfter('NTE', msg['NTE'][NTECount]);
msg['NTE'][NTECount+1]['NTE.1']['NTE.1.1']=NTEIndex+2;
msg['NTE'][NTECount+1]['NTE.2']['NTE.2.1']="O";
msg['NTE'][NTECount+1]['NTE.3']['NTE.3.1']="Link zu Befunddatei versendet.";
msg['NTE'][NTECount+1]['NTE.4']['NTE.4.1']="";
}

}
tmp=msg;//Beispiel SIU-Nachricht:
/*
MSH|^~\&|OP-PLAN|ORBIS|ZSVAPlaner|IT4P|20171208170829.203+0100||SIU^S12^SIU_S12|3601|P|2.6||AL|AL
SCH||OP-ID_akt||||DEFAULT^^|||||^^^OP-Plan-Startzeit^OP-Plan-Endzeit|||||DEFAULT|||||||||Booked
TQ1|1||||||OP-Ist-Startzeit|Ist-OP-Endzeit
PID|1||Patientnummer|Patientnummer|Name^Vorname|||
PV1|1|U|||||||||||||||||Fallnummer
RGS|1
AIS|1||Eingriff-Kurzbez^Eingriff-Beschreibung^^OP-Fachrichtung-ID^OPFachrichtung-Name
AIL|1|||OP-Saal-ID^OP-Saal-Name
*/

var eingr_count = 0;
eingr_count = msg['op']['eingriff'].length();

//MSH-Segment f�llen
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['op']['abfragezeit'].toString()			// Zeitstempel der Nachricht
tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();				// Message control ID


//SCH-Segment f�llen
tmp['SCH']['SCH.2']['SCH.2.1'] = msg['op']['opid_akt'].toString()		//aktuelle OP-ID
tmp['SCH']['SCH.6']['SCH.6.1'] = "DEFAULT";

tmp['SCH']['SCH.11']['SCH.11.4'] = msg['op']['vonzeitstempel'].toString()		//OP-Plan-Startzeit
tmp['SCH']['SCH.11']['SCH.11.5'] = msg['op']['biszeitstempel'].toString()		////OP-Plan-Endzeit

//TQ1-Segment f�llen
if(msg['op']['vonzeitstempel_op_ist'].toString()=='null'){
	tmp['TQ1']['TQ1.7']['TQ1.7.1'] = "";
	}
else	tmp['TQ1']['TQ1.7']['TQ1.7.1'] = msg['op']['vonzeitstempel_op_ist'].toString();	//OP-Ist-Startzeit (Beginn OP-Ma�nahme, Zeitart-ID 172 in Orbis)
	
if( msg['op']['biszeitstempel_op_ist'].toString()=='null'){
	tmp['TQ1']['TQ1.8']['TQ1.8.1'] = "";
	}	
else	tmp['TQ1']['TQ1.8']['TQ1.8.1'] = msg['op']['biszeitstempel_op_ist'].toString();	//OP-Ist-Endzeit (Beginn OP-Ma�nahme, Zeitart-ID 172 in Orbis)

//PID-Segment f�llen
tmp['PID']['PID.3']['PID.3.1'] = msg['op']['pid'].toString(); 			//Patienten-ID
tmp['PID']['PID.4']['PID.4.1'] = msg['op']['pid'].toString(); 
tmp['PID']['PID.5']['PID.5.1'] = msg['op']['name'].toString()			//Nachname
tmp['PID']['PID.5']['PID.5.2'] = msg['op']['vorname'].toString();		//Vornaeme

//PV1-Segment f�llen
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['op']['fallnr_akt'].toString();		//aktuelle Fallnummer

//falls mehrere Eingriffe in einer OP geplant sind 
				
	for(var j=1;j<eingr_count+1;j++){
	 //RGS-Segment erzeugen und f�llen	
	createSegment('RGS', tmp, j);

	tmp['RGS'][j-1]['RGS.1']['RGS.1.1'] = j;

	createSegment('AIS', tmp, j); //AIS-Segment erzeugen und f�llen
	tmp['AIS'][j-1]['AIS.1']['AIS.1.1'] = j;
	tmp['AIS'][j-1]['AIS.3']['AIS.3.1'] = msg['op']['eingriff'][j-1]['eingriffid'].toString();			//Eingriffs-ID 
	tmp['AIS'][j-1]['AIS.3']['AIS.3.1'] = msg['op']['eingriff'][j-1]['eingrkurz'].toString();			//Eingriffs-Kurzbez
	tmp['AIS'][j-1]['AIS.3']['AIS.3.2'] = msg['op']['eingriff'][j-1]['eingrbez'].toString();			//Eingriffsbezeichnung
	tmp['AIS'][j-1]['AIS.3']['AIS.3.4'] = msg['op']['oebenekurz'].toString();						//OE kurz
	tmp['AIS'][j-1]['AIS.3']['AIS.3.5'] = msg['op']['oebenename'].toString(),						//OE Name

	createSegment('AIL', tmp, j); //AIL-Segment erzeugen und f�llen
	tmp['AIL'][j-1]['AIL.1']['AIL.1.1'] = j;
	tmp['AIL'][j-1]['AIL.4']['AIL.4.1'] = msg['op']['raumnr'].toString(), 				//OP-Saal-Nummer
	tmp['AIL'][j-1]['AIL.4']['AIL.4.2'] = msg['op']['raumbez'].toString()				//OP-Saal Bezeichnung	
	}var resp = $('responseStatus');
channelMap.put('shortResponse',resp.substring(resp.indexOf(":")+1).trim());/*
// Anpassungen f�r den ORBIS Chrono Import:
// (1) PID ohne f�hrende Null	-> PID
// (2) Fallnummer ohne f�hrende Null	-> PV1
// (3) Laborauftragsnummer/Befundnummer erhalten ein V als Postfix	-> ORC, alle OBR, alle OBX
// (4) Laborparameterk�rzel erhalten ein "V_" als Pr�fix.	-> alle OBX

// Konstanten:
var PostfixViro 	= 'V';
var PrefixViro_Param = 'V_';

// (1)
// http://www.mirthproject.org/community/forums/showthread.php?t=9911
msg['PID']['PID.3']['PID.3.1'] = msg['PID']['PID.3']['PID.3.1'].toString().replace(/^0+/g,'');

// (2)
// http://www.mirthproject.org/community/forums/showthread.php?t=9911
// msg['PV1']['PV1.19']['PV1.19.1'] = msg['PV1']['PV1.19']['PV1.19.1'].toString().replace(/^0+/g,'');
// Austauschen der stornierten Fallnummer mit der neu gefundenen und aktuell g�ltigen Fallnummer zum Laborauftrag:
msg['PV1']['PV1.19']['PV1.19.1'] = $('vNeueFALLNR');

// (3) 
// ORC-2 Feld erh�lt ein Postfix 

for each (seg in msg.children()) {
	
	if (seg.name().toString() == "ORC") {
		
		seg['ORC.2']['ORC.2.1'] = seg['ORC.2']['ORC.2.1'].toString() + PostfixViro;
		
	} else if (seg.name().toString() == "OBR") {
		seg['OBR.2']['OBR.2.1'] = seg['OBR.2']['OBR.2.1'].toString() + PostfixViro;
		
	} else if (seg.name().toString() == "OBX") {
		seg['OBX.3']['OBX.3.1'] = PrefixViro_Param + seg['OBX.3']['OBX.3.1'].toString();
		
	}
}
*///Beispiel SIU-Nachricht:
/*
MSH|^~\&|OP-PLAN|ORBIS|ZSVAPlaner|IT4P|20171208170829.203+0100||SIU^S14^|3601|P|2.6||AL|AL
SCH||OP-ID_akt||||REPLACE^^^OP-ID_old|||||^^^OP-Plan-Startzeit^OP-Plan-Endzeit|||||DEFAULT|||||||||Booked
TQ1|1||||||OP-Ist-Startzeit|Ist-OP-Endzeit
PID|1||Patientnummer|Patientnummer|Name^Vorname|||
PV1|1|U|||||||||||||||||Fallnummer
RGS|1
AIS|1||Eingriff-Kurzbez^Eingriff-Beschreibung^^OP-Fachrichtung-ID^OPFachrichtung-Name
AIL|1|||OP-Saal-ID^OP-Saal-Name
*/

var eingr_count = 0;
eingr_count = msg['op']['eingriff'].length();

//MSH-Segment f�llen
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['op']['abfragezeit'].toString()			// Zeitstempel der Nachricht
tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();				// Message control ID

//SCH-Segment f�llen
tmp['SCH']['SCH.2']['SCH.2.1'] = msg['op']['opid_old'].toString()		//alte OP-ID
tmp['SCH']['SCH.6']['SCH.6.1'] = "REPLACE";
tmp['SCH']['SCH.6']['SCH.6.4'] = msg['op']['opid_akt'].toString()		//aktuelle OP-ID

tmp['SCH']['SCH.11']['SCH.11.4'] = msg['op']['vonzeitstempel'].toString()		//OP-Plan-Startzeit
tmp['SCH']['SCH.11']['SCH.11.5'] = msg['op']['biszeitstempel'].toString()		////OP-Plan-Endzeit

//TQ1-Segment f�llen
if(msg['op']['vonzeitstempel_op_ist'].toString()=='null'){
	tmp['TQ1']['TQ1.7']['TQ1.7.1'] = "";
	}
else	tmp['TQ1']['TQ1.7']['TQ1.7.1'] = msg['op']['vonzeitstempel_op_ist'].toString();	//OP-Ist-Startzeit (Beginn OP-Ma�nahme, Zeitart-ID 172 in Orbis)
	
if( msg['op']['biszeitstempel_op_ist'].toString()=='null'){
	tmp['TQ1']['TQ1.8']['TQ1.8.1'] = "";
	}	
else	tmp['TQ1']['TQ1.8']['TQ1.8.1'] = msg['op']['biszeitstempel_op_ist'].toString();	//OP-Ist-Endzeit (Beginn OP-Ma�nahme, Zeitart-ID 172 in Orbis)

//PID-Segment f�llen
tmp['PID']['PID.3']['PID.3.1'] = msg['op']['pid'].toString(); 			//Patienten-ID
tmp['PID']['PID.4']['PID.4.1'] = msg['op']['pid'].toString(); 
tmp['PID']['PID.5']['PID.5.1'] = msg['op']['name'].toString()			//Nachname
tmp['PID']['PID.5']['PID.5.2'] = msg['op']['vorname'].toString();		//Vornaeme

//PV1-Segment f�llen
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['op']['fallnr_akt'].toString();		//aktuelle Fallnummer

//falls mehrere Eingriffe in einer OP geplant sind 	
	for(var j=1;j<eingr_count+1;j++){
	
	createSegment('RGS', tmp, j); //RGS-Segment erzeugen und f�llen

	tmp['RGS'][j-1]['RGS.1']['RGS.1.1'] = j;

	createSegment('AIS', tmp, j); //AIS-Segment erzeugen und f�llen
	tmp['AIS'][j-1]['AIS.1']['AIS.1.1'] = j;
	tmp['AIS'][j-1]['AIS.3']['AIS.3.1'] = msg['op']['eingriff'][j-1]['eingriffid'].toString();			//Eingriffs-ID 
	tmp['AIS'][j-1]['AIS.3']['AIS.3.1'] = msg['op']['eingriff'][j-1]['eingrkurz'].toString();				//Eingriffs-Kurzbez
	tmp['AIS'][j-1]['AIS.3']['AIS.3.2'] = msg['op']['eingriff'][j-1]['eingrbez'].toString();				//Eingriffsbezeichnung
	tmp['AIS'][j-1]['AIS.3']['AIS.3.4'] = msg['op']['oebenekurz'].toString();						//OE kurz
	tmp['AIS'][j-1]['AIS.3']['AIS.3.5'] = msg['op']['oebenename'].toString(),						//OE Name

	createSegment('AIL', tmp, j); //AIL-Segment erzeugen und f�llen
	tmp['AIL'][j-1]['AIL.1']['AIL.1.1'] = j;
	tmp['AIL'][j-1]['AIL.4']['AIL.4.1'] = msg['op']['raumnr'].toString(), 				//OP-Saal-Nummer
	tmp['AIL'][j-1]['AIL.4']['AIL.4.2'] = msg['op']['raumbez'].toString()				//OP-Saal Bezeichnung	
	}// Dateiname im Abholverzeichnis: "Vitalograph Reports_3226779_7947817_1.pdf"
// Dateiname im Abholverzeichnis: "Vitalograph Reports_3226779_7947817_12345678_1.pdf"
// PID = 3226779
// FID = 7947817
// AuftragsID = 12345678
// Javascript Operation str.split("_") liefert einen Array: str[0] = "Report", str[1] = PID, str[2] = FID, ...

var strFilename = sourceMap.get('originalFilename');

var strFNArray 	= strFilename.split("_");
var strPID 		= strFNArray[1];
var strFID 		= strFNArray[2];
var strAuftragID	= strFNArray[3];
var strDateTime	= DateUtil.getCurrentDate('YYYYMMDDhhmmss');		// Datumszeitformat: 20170802104000 -> YYYYMMDDhhmmss
var strMsgID 		= UUIDGenerator.getUUID();

tmp['MSH']['MSH.7']['MSH.7.1'] 	= strDateTime;
tmp['MSH']['MSH.10']['MSH.10.1'] 	= strMsgID;
tmp['EVN']['EVN.2']['EVN.2.1'] 	= strDateTime;
tmp['PID']['PID.2']['PID.2.1']	= strPID;
tmp['PID']['PID.3']['PID.3.1']	= strPID;
tmp['PV1']['PV1.19']['PV1.19.1']	= strFID;
tmp['TXA']['TXA.4']['TXA.4.1']	= strDateTime;
tmp['TXA']['TXA.6']['TXA.6.1']	= strDateTime;
tmp['TXA']['TXA.7']['TXA.7.1']	= strDateTime;
tmp['TXA']['TXA.12']['TXA.12.1']	= strAuftragID;
tmp['TXA']['TXA.16']['TXA.16.1']	= "\\\\ukb494.klinik.bn\\m$\\srv\\transfer\\mirth\\pdf\\" + strFilename;//Beispiel SIU-Nachricht:
/*
MSH|^~\&|OP-PLAN|ORBIS|ZSVAPlaner|IT4P|20171208170829.203+0100||SIU^S14^|3601|P|2.6||AL|AL
SCH||OP-ID_akt||||DEFAULT^^|||||^^^OP-Plan-Startzeit^OP-Plan-Endzeit|||||DEFAULT|||||||||Booked
TQ1|1||||||OP-Ist-Startzeit|Ist-OP-Endzeit
PID|1||Patientnummer|Patientnummer|Name^Vorname|||
PV1|1|U|||||||||||||||||Fallnummer
RGS|1
AIS|1||Eingriff-Kurzbez^Eingriff-Beschreibung^^OP-Fachrichtung-ID^OPFachrichtung-Name
AIL|1|||OP-Saal-ID^OP-Saal-Name
*/

var eingr_count = 0;	
eingr_count = msg['op']['eingriff'].length();

//MSH-Segment f�llen
tmp['MSH']['MSH.7']['MSH.7.1'] = msg['op']['abfragezeit'].toString()			// Zeitstempel der Nachricht
tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();				// Message control ID


//SCH-Segment f�llen
tmp['SCH']['SCH.2']['SCH.2.1'] = msg['op']['opid_akt'].toString()		//aktuelle OP-ID
tmp['SCH']['SCH.6']['SCH.6.1'] = "DEFAULT";

tmp['SCH']['SCH.11']['SCH.11.4'] = msg['op']['vonzeitstempel'].toString()		//OP-Plan-Startzeit
tmp['SCH']['SCH.11']['SCH.11.5'] = msg['op']['biszeitstempel'].toString()		////OP-Plan-Endzeit

//TQ1-Segment f�llen
if(msg['op']['vonzeitstempel_op_ist'].toString()=='null'){
	tmp['TQ1']['TQ1.7']['TQ1.7.1'] = "";
	}
else	tmp['TQ1']['TQ1.7']['TQ1.7.1'] = msg['op']['vonzeitstempel_op_ist'].toString();	//OP-Ist-Startzeit (Beginn OP-Ma�nahme, Zeitart-ID 172 in Orbis)
	
if( msg['op']['biszeitstempel_op_ist'].toString()=='null'){
	tmp['TQ1']['TQ1.8']['TQ1.8.1'] = "";
	}	
else	tmp['TQ1']['TQ1.8']['TQ1.8.1'] = msg['op']['biszeitstempel_op_ist'].toString();	//OP-Ist-Endzeit (Beginn OP-Ma�nahme, Zeitart-ID 172 in Orbis)

//PID-Segment f�llen
tmp['PID']['PID.3']['PID.3.1'] = msg['op']['pid'].toString(); 			//Patienten-ID
tmp['PID']['PID.4']['PID.4.1'] = msg['op']['pid'].toString(); 
tmp['PID']['PID.5']['PID.5.1'] = msg['op']['name'].toString()			//Nachname
tmp['PID']['PID.5']['PID.5.2'] = msg['op']['vorname'].toString();		//Vornaeme

//PV1-Segment f�llen
tmp['PV1']['PV1.19']['PV1.19.1'] = msg['op']['fallnr_akt'].toString();		//aktuelle Fallnummer

//falls mehrere Eingriffe in einer OP geplant sind 
				
	for(var j=1;j<eingr_count+1;j++){
	 //RGS-Segment erzeugen und f�llen	
	createSegment('RGS', tmp, j);

	tmp['RGS'][j-1]['RGS.1']['RGS.1.1'] = j;

	createSegment('AIS', tmp, j); //AIS-Segment erzeugen und f�llen
	tmp['AIS'][j-1]['AIS.1']['AIS.1.1'] = j;
	tmp['AIS'][j-1]['AIS.3']['AIS.3.1'] = msg['op']['eingriff'][j-1]['eingriffid'].toString();			//Eingriffs-ID 
	tmp['AIS'][j-1]['AIS.3']['AIS.3.1'] = msg['op']['eingriff'][j-1]['eingrkurz'].toString();			//Eingriffs-Kurzbez
	tmp['AIS'][j-1]['AIS.3']['AIS.3.2'] = msg['op']['eingriff'][j-1]['eingrbez'].toString();			//Eingriffsbezeichnung
	tmp['AIS'][j-1]['AIS.3']['AIS.3.4'] = msg['op']['oebenekurz'].toString();						//OE kurz
	tmp['AIS'][j-1]['AIS.3']['AIS.3.5'] = msg['op']['oebenename'].toString(),						//OE Name

	createSegment('AIL', tmp, j); //AIL-Segment erzeugen und f�llen
	tmp['AIL'][j-1]['AIL.1']['AIL.1.1'] = j;
	tmp['AIL'][j-1]['AIL.4']['AIL.4.1'] = msg['op']['raumnr'].toString(), 				//OP-Saal-Nummer
	tmp['AIL'][j-1]['AIL.4']['AIL.4.2'] = msg['op']['raumbez'].toString()				//OP-Saal Bezeichnung	
	}//Beispiel SIU-Nachricht:
/*
MSH|^~\&|OP-PLAN|ORBIS|ZSVAPlaner|IT4P|20171208170829.203+0100||SIU^S15^|3601|P|2.6||AL|AL
SCH||OP-ID
*/

//MSH-Segment f�llen
	tmp['MSH']['MSH.7']['MSH.7.1'] = msg['op']['abfragezeit'].toString()			// Zeitstempel der Nachricht
	tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();				// Message control ID

//SCH-Segment erzeugen und mit OP-ID f�llen
	tmp['SCH']['SCH.2']['SCH.2.1'] = msg['op']['opid_akt'].toString()				//aktuelle OP-ID//Beispiel SIU-Nachricht:
/*
MSH|^~\&|OP-PLAN|ORBIS|ZSVAPlaner|IT4P|20171208170829.203+0100||SIU^S15^|3601|P|2.6||AL|AL
SCH||OP-ID
*/

//MSH-Segment f�llen
	tmp['MSH']['MSH.7']['MSH.7.1'] = msg['op']['abfragezeit'].toString()			// Zeitstempel der Nachricht
	tmp['MSH']['MSH.10']['MSH.10.1'] = UUIDGenerator.getUUID();				// Message control ID

//SCH-Segment erzeugen und mit OP-ID f�llen
	tmp['SCH']['SCH.2']['SCH.2.1'] = msg['op']['opid_akt'].toString()				//aktuelle OP-ID