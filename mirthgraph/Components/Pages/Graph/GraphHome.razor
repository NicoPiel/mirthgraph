@page "/"

@inject MirthConfigService ConfigService

<RadzenLayout Style="position: relative">
    <RadzenHeader Style="background-color: #343a40; color: white;">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
            <RadzenSidebarToggle Click="@ToggleSidebar" />
        </RadzenStack>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="_drawerLeft">
        <RadzenPanelMenu>
            @if (mirthConnections != null)
            {
                @foreach (var connection in mirthConnections)
                {
                    <RadzenPanelMenuItem Text="@connection.Name" Icon="settings" Click="() => LoadGraph(connection.Name)" />
                }
            }
            else
            {
                <RadzenPanelMenuItem Text="Loading..." Icon="hourglass_empty" />
            }
        </RadzenPanelMenu>
    </RadzenSidebar>

    <RadzenBody>
        <h3>Graph Visualization</h3>
        <div id="graph-container">
            <GraphComponent configName="@selectedConnection" />
        </div>
    </RadzenBody>
</RadzenLayout>

@code {
    private bool _drawerLeft = false;
    private List<MirthConnection>? mirthConnections;
    private string selectedConnection;

    protected override async Task OnInitializedAsync()
    {
        _drawerLeft = false;
        mirthConnections = await ConfigService.GetAllMirthConnectionsAsync();
    }

    void ToggleSidebar()
    {
        _drawerLeft = !_drawerLeft;
    }

    void LoadGraph(string connectionName)
    {
        selectedConnection = connectionName;
    }
}
